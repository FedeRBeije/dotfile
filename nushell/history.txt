cd
clear
cd nushell
$env.EDITOR
vim .zshrc
config nu
clear
cd
which nu
nvim config.nu
$nu.config-path
$nu.env-path
clear
cd
nvim config.nu
nvim env.nu
source env.nu
source config.nu
cd
nvim
source env.nu
source config.nu
cd
:q
$nu.env-path
cd nushell
cd
nvim .zshrc
cd nushell
cd
tmux
tmux ls
cd
nvim .zshrc
cd .config
nvim
clear
nvim
cd skhd
source skhdrc
nvim
source skhdrc
brew services restart skhd<\n>
nvim
brew services restart skhd<\n>
nvim
clear
cd client
clear
cd packages/cli
clear
cd config
clear
nvim
clear
cjkdaf
mouse
clear
cd
sh <(curl -L https://nixos.org/nix/install)
cd .zshrc
clear
cd .config/nix
clear
cd
nvim .zshrc
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nvim .config/nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim .config/nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
tmux
clear
cd .config/nix
nvim
cd ..
nvim
clear
cd nvim/lua/fede
nvim
clear
nvim
clera
clear
nvim
clear
nvim
s
ls
cd retail
ls
cd packages
ls
cd clint
clear
nvim
cd retail
nvim
clear
cd clint
nvim
git checkout -b clint/rust
gitc
git checkout develop
git checkout clint/rust
nvim
git checkout develop
cd retail
nvim
clear
nvim
cd
cd .config/nushell
nvim
cd nvim
cd clienteling
npm run dev
clint project
npm run dev
npm run update
clear
cd retail
clear
:qa
clear
nvim
cd .config
nvim tmux
ls
cd tmux
ls
source ~/.config/tmux/tmux.conf
nvim
clear
tmux detach
tmux attach -t work
clear
source ~/.config/tmux/tmux.conf
clear
clera
clear
cd
clear
cd nushell
clear
cd nvim/lua/fede
nvim
clear
nvim
source ~/.config/nushell/config.nu<\n>
gitd
nvim
source ~/.config/nushell/config.nu
gitd
gitc
nvim
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
gitc
clear
git branches
git --help
git branch --help
git branch --list
cd retail
git branch --list
lines
git branch | lines
gitc
git branch | lines | fzf --multi
git branch | lines | fzf --multi | first
git branch | lines | fzf --multi | second
clear
git branch | lines | fzf --multi 
git branch | lines
clear
git branch
git branch | lines
clear
git branch | lines | fzf
clear
git branch
git branch --list
clear
git branch | lines | fzf --multi 
git branch | fzf
git branch | lines | fzf
source ~/.config/nushell/config.nu
gitc
git checkout clint/rust
cd develop
git checkout develop
clear
clera
clear
git branch | lines
git branch
clear
git branch | fzf
git branch | ls
clear
gitc
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
clear
git branch | fzf | describe
clear
git branch | fzf | describe
git branch | fzf 
gitc
git branch | fzf | into string | str trim
source ~/.config/nushell/config.nu
gitc
fs
source ~/.config/nushell/config.nu
gitc
clear
gf
clear
git fetch
clear
nvim
clear
nvim
cd client
cd src/assets
ls
cd  images
ls
npm run dev
clear
git fetch
clear
git fetch
gd
gf
gitc
clear
npm run dev
npm run update
clear
npm run update
clear
nvim
clear
cd retail
gitc
clear
gitc
clear
nvim
clear
clear
cd retail
clear
cd clint
cd clint
mkdir src/commands/
touch src/command/mod.rs
clear
cargo install clap
clear
nvim
cargo run -- login --global
cargo run -- login 
clear
cd packages/cli
cargo run -- logout
cargo install ini
cargo add ini
cargo run -- logout
clear
git add .
git commit -m "rust"
gitc
clear
nvim
clear
nvim .zshrc
clear
cd fede
nvim
nix search ripgrep
nix-shell search ripgrep
clear
nix search nixpkgs ripgrep
cd nix
nvim
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nvim
nvim
clear
clear
cd .config
nvim
nix search nixpkgs sketchybar
cd nix
nvim config.nu
nvim flaker.nix
nvim
clerar
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nvim flaker.nix
nvim
cd nix
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
rm -rf ~/Library/Fonts/HackNerdFont-Bold.ttf
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
cd ~/Library/Fonts/
ls
rm -rf | first 9
ls | where # <= 10
ls
ls | get 2
ls | $in
ls | $#
ls | where name =~ Hack
ls | where name =~ Hack | each { rm $in.name } | null
ls
ls | where name =~ Hack | each { rm -rf $in.name } | null
ls
ls | where name =~ Hack and type == file | each { rm -rf $in.name } | null
ls
ls | where name =~ Hack and type == file | each { rm $in.name } | null
ls
ls | where name == HackNerdFont-BoldItalic.ttf and type == file | each { rm $in.name } | null
ls
finder
find
clear
ls | where name == HackNerdFont-BoldItalic.ttf and type == file | each { rm $in.name } | null
ls
rm -rf HackNerdFont-BoldItalic.ttf
ls
rm -rf HackNerdFont-Italic.ttf
rm -rf HackNerdFont-Regular.ttf
ls
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
ls
rm -rf HackNerdFontMono-Regular.ttf
rm -rf HackNerdFontMono-Bold.ttf
rm -rf HackNerdFontMono-BoldItalic.ttf
rm -rf HackNerdFontMono-Italic.ttf
ls
rm -rf HackNerdFontPropo-Italic.ttf
rm -rf HackNerdFontPropo-Bold.ttf
rm -rf HackNerdFontPropo-BoldItalic.ttf
rm -rf HackNerdFontPropo-Regular.ttf
ls
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
cd
cd nu
nvim
clear
cd
nvim .zshrc
source ~/.zshrc
clear
sketchybar
clear
brew services start sketchybar
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim flake.nix
cd nvim
nvim
clear
nvim
clear
cd .config
nvim
clear
nvim
clear
cd client
clear
cd client
cd retail
clear
git checkout -b mc/feature/expo
clear
clear
npm i -g eas-cli
npx expo-doctor@latest
npx expo install --check
npx expo install expo@^52.0.0 --fix
clear
nvim
git push
fuck
thefuck
git push -u origin mc/feature/expo
npm run dev
clear
npm run dev
clear
git checkout -b MC/feature/expo
git checkout -b MC/feature/expo_52
gitc
git branch -d MC/feature/expo_52
clear
git checkout -b MC/feature/expo_52
nvim
clear
nvim
gitc
clear
clear
cd packages/cli
cd packages/cli
clear
npm install csv-parser --workspace=packages/cli
clear
nvim
clear
npm run buiold
npm run build
clear
npm run build
clint make-issues --path=~/Desktop/to-do-rp-csv
clint project
nvim
clear
npm run build
clint make-issues --path=~/Desktop/to-do-rp-csv
clint -h
clint help make-issues
clint make-issues -p ~/Desktop/to-do-rp-csv
clint make-issues --path ~/Desktop/to-do-rp-csv
npm run build
clint make-issues --path ~/Desktop/to-do-rp-csv
clint make-issues --path ~/Desktop/todo.csv
clear
curl -H "Authorization: Bearer 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" \<\n>     https://api.github.com/repos/organization_name/repository_name/issues<\n>
curl -H "Authorization: Bearer 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" \<\n>     https://api.github.com/repos/EngineeringRetailPlatform/retail-platform-mono/issues<\n>
curl -H "Authorization: Bearer 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" \<\n>     https://api.github.com/EngineeringRetailPlatform/retail-platform-mono/issues<\n>
npm run build
clint make-issues --path ~/Desktop/todo.csv
npm run build
clint make-issues --path ~/Desktop/todo.csv
npm run build
clint make-issues --path ~/Desktop/todo.csv
npm run build
clint make-issues --path ~/Desktop/todo.csv
clear
clint make-issues --path ~/Desktop/todo.csv
clint make-issues --path ~/Desktop/todos.csv
cd
cd ~/Desktop
ls
ls | where name =~ todo
cd packages/cli
clint make-issues --path ~/Desktop/todo.csv
npm run build
npm run dev
clint make-issues --path ~/Desktop/todo.csv
npm run bl
npm run build
clint make-issues --path ~/Desktop/todo.csv
gh 
nix search nixpkgs gh
cd nix
nvim flake.nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
gh -v
clear
npm run build
clint make-issues --path ~/Desktop/todo.csv
gh auth status
gh issue list --repo <owner>/<repo-name><\n>
gh issue list --repo EngineeringRetailPlatform/retail-platform-mono
gh issue create --title "Test Issue" --body "This is a test issue body" --repo "EngineeringRetailPlatform/retail-platform-mono"<\n>
cd
cd retail
open ~/Desktop/todo.csv
cd ~/Desktop/todo.csv
cd
cd ~/Desktop/todo.csv
cd Desktop
open todo.csv | to json > todo.json<\n>
clear
clint make-issues --path ~/Desktop/todo.csv
npm run build
clint make-issues --path ~/Desktop/todo.csv
clear
cd retail
cd ..
ls
git clone git@github.com:EngineeringRetailPlatform/ebsn-front-services.git
rm -rf ebsh-front-services
git clone git@github.com:EngineeringRetailPlatform/ebsn-front-services.git
rm -rf ebsh-front-services
ls
rm -rf ebsn-front-services
ls
rm -rf ebsh-front-services
git clone git@github.com:EngineeringRetailPlatform/ebsn-front-services.git
cd ebsn-front-services
cd ebsn-front
clear
npm i
npm run test
clear
npx jest ./src/backofficeService/backofficeService.spec.ts
cd ebsn-front
ls
cd src
ls
npx jest ./src/services/backofficeService/backofficeService.spec.ts
clear
npx jest ./src/services/backofficeService/backofficeService.spec.ts
nvim
npx jest ./src/services/backofficeService/backofficeService.spec.ts
open todo.csv
open todo.csv | from csv --separator ';'
open todo.csv 
clear
npm run build
clint make-issues --path ~/Desktop/todo.csv
clear
cd tmux
nvim
clear
nvim
clear
clear
npx jest ./src/services/backofficeService/backofficeService.spec.ts
npx jest ./src/services/backofficeService/backofficeService.spec.ts
clint make-issues --path ~/Desktop/todo.csv
clear
clint make-issues --path ~/Desktop/todo.csv
open todo.csv 
clear
open todo.csv 
clear
nvim
gitc
clear
cd presenter
npx expo install expo@^52.0.0 --fix
npx expo doctor
npx expo-doctor
npx expo install --check
cd client
npx expo-doctor
npx expo install --check
clear
turbo clean
cd retail
turbo clean
npx @turbo/codemod@latest update
clear
npx expo-doctor
npx expo-doctor
npm i
clear
nvim
nvim
npm i
nvim
npx expo-doctor
npx expo-doctor
nvim
clear
npx expo install --check
clear
clear
nvim
clear
cd packages/cli
nvim
clear
cd rust
ls
cd example
clear
cargo run
c
cargo run
cargo run 
cargo run ciao
cargo run
cargo run write
cd .config
nvim
cd fede
nvim
clear
nvim
clear
cd desktop
clear
open todo.csv
open todo.numbers
open todo.csv
open --raw todo.csv
open --raw todo.csv | from csv
open --raw todo.csv 
<\n>   · ──┬─<\n>   ·   ╰── CSV error: rec
clear
open --raw todo.csv 
open --raw todo.csv | from csv --separator ';'
gh copilot explain "how can i use nushell to run for each row from a csv readed with nushell to create an issue where 3 columns should be use for the message of the issue and writed in md"
gh copilot explain "how can i use nushell to run for each row from a csv readed with nushell to create an issue where 3 columns should be use for the message of the issue and writed in md. the command should be this: gh issue create --title "Test Issue" --body "This is a test issue body" --repo "EngineeringRetailPlatform/retail-platform-mono""
gh copilot explain "how can i use nushell to run for each row from a csv readed with nushell to create an issue where 3 columns should be use for the message of the issue and writed in md. the command should be this: gh issue create --title "Test Issue" --body "This is a test issue body" --repo "EngineeringRetailPlatform/retail-platform-mono" the body it should be a md like follow ### Epic \n $it.epic \n ### As \n User \n ### I want to \n $it.IwantTo \n ### So that \n $in.SoThat "
open --raw todo.csv | from csv --separator ';' | each { println!($it)}
open --raw todo.csv | from csv --separator ';' | each { |row| println!($row)}
open --raw todo.csv | from csv --separator ';' | each { |row| }
gh copilot explain "how can i use nushell to run for each row from a csv readed with nushell to create an issue where 3 columns should be use for the message of the issue and writed in md. the command should be this: gh issue create --title "Test Issue" --body "This is a test issue body" --repo "EngineeringRetailPlatform/retail-platform-mono" the body it should be a md like follow ### Epic \n $it.epic \n ### As \n User \n ### I want to \n $it.IwantTo \n ### So that \n $in.SoThat "
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"### Epic \n ($row.Epic) \n ### As \n User \n ### I want to \n ($row.IwantTo) \n ### So that \n ($row.SoThat)" --repo "EngineeringRetailPlatform/retail-platform-mono"}
gh project view <project_id> --json columns --repo EngineeringRetailPlatform/retail-platform-mono
gh project view Product Board --json columns --repo EngineeringRetailPlatform/retail-platform-mono
gh project view 
gh auth refresh -s read:project
gh project view 
gh project -h
gh project list --owner EngineeringRetailPlatform
gh project view PVT_kwDOCoNLR84AsTvm --json columns --repo EngineeringRetailPlatform/retail-platform-mono
gh project view PVT_kwDOCoNLR84AsTvm 
gh project view PVT_kwDOCoNLR84AsTvm --json columns --owner EngineeringRetailPlatform
gh project view PVT_kwDOCoNLR84AsTvm  --owner EngineeringRetailPlatform
gh project view 1  --owner EngineeringRetailPlatform
gh project view 5  --owner EngineeringRetailPlatform
gh issue status
gh issue status --owner EngineeringRetailPlatform
cd retail
gh issue status
gh issue status --json projectCard
gh issue status --json projectCards
gh issue status --json projectItems
gh issue list --json number,title --jq '.[] | {number, title}'<\n>
gh project cards list --project-id <a93fb6e7> --json content_url<\n>
gh project field-list
clear
nvim
cd nix
nvim
cd nushell
nvim
clear
clear
nvim
vim
source ~/.config/nushell/config.nu
q
source ~/.config/nushell/env.nu
q
clear
source ~/.config/nushell/config.nu
clear
vim 
gh issue
which nu
clear
c;ear
clear
cd client
nvim
clear
nvim
npx jest ./src/services/backofficeService/backofficeService.spec.ts
npm i
nvim
clear
gitc
npm run dev
clear
npm run dev
clear
clear
cd retail
cd desktop
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | null) \n # So that \n ($row.SoThat | null)" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono"} | null<\n>
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | null) \n # So that \n ($row.SoThat | null)" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono"}
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | null) \n # So that \n ($row.SoThat | null)" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-monoa" }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | null) \n # So that \n ($row.SoThat | null)" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw todo.csv | from csv --separator ';' | each { |row| }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')"--label $"Epic ($row.Epic)" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')"--label $"'Epic ($row.Epic)'" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"Epic ($row.Epic)" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
clear
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"Epic ($row.Epic)" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
cd retail
open --raw ~/Desktop/todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"Epic ($row.Epic)" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw ~/Desktop/todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"Epic ($row.Epic)" --label "user story" --repo "EngineeringRetailPlatform/retail-platform-mono" }
clear
cd retail
clear
nvim
clear
git fetch
gf
clear
nvim
git fetch
git checkout MyClientelingMock
clear
npm run dev
clear
open --raw ~/Desktop/todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic) \n # As \n User \n # I want to \n ($row.IwantTo) \n # So that \n ($row.SoThat)" --label $"Epic ($row.Epic)" --label "user story" --repo "EngineeringRetailPlatform/retail-platform-mono" }
clear
nvim
clear
cd nix
nvim
dal
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
cd nushell
nvim
source ~/.config/nushell/config.nu
nvim
vim
v
vim
clear
nvim
clear
cd cognito
cd packages/cognito
nvim
clear
nvim
cd ..
nvim
cd cognito
npm publish
nvim
npm publish
cd services
nvim
cd retail
cd packages/services
nvim
clear
cd cognito
npm publish
cd queue
cd ..
ls
rm -rf monclient-app-queue-services
git clone git@github.com:EngineeringRetailPlatform-Moncler/monclient-app-mulesoft-queue-manager.git
git checkout develop
cd queue
cd monclient-app-mulesoft-queue-manager
git checkout develop
clear
git fetch
npm i
npm run dev
nvim
npm run dev
npm i
npm run dev
nvim
npm install --save @babel/runtime
clear
npm run dev
clear
npm install --save @babel/runtime
npm run dev
nvim
clear
nvim
cd nix
nvim
nvi
vim
npm i
npm run dev
clear
nvim
vim
npm i
npm run dev
clear
nvim
cd retail
clear
nvim
cd lua
cd nvim
nvim
clear
nvim
clear
nvim
nvim
npm run dev
clear
nvim
gg
gf
git pull
clear
nvim
cd .config
nvim
git fetch
git pull
nvim
vi
vim
npm run dev
clear
nvim
clear
nvim
cd client
npx lint-staged
cd retail
gf
git pull
nvim
git pull
nvim
gf
git pull
clear
git whoami
git config list
clear
cd retail
clear
nvim
gf
git pull
gitc
clear
npm i
clear
nvim
npm run dev
clear
cd retail
clear
turbo clean
npx @turbo/codemod@latest update
nvim
npx @turbo/codemod@latest update
clear
nvim
vnim
nvim
clear
nvim
npm run build
npm i
npx expo-doctor
npx expo install --check
npm run build
cd packages/cli
npm run build
clear
npx lint-staged
gh copilot explain "<\n>/Users/federicoreghini/Documents/beije/engineering/retail-platform-mono/apps/native/my-clienteling/src/constants/Colors.ts<\n>  1:1  error  Definition for rule '@typescript-eslint/no-empty-object-type' was not found     @typescript-eslint/no-empty-object-type<\n>  1:1  error  Definition for rule '@typescript-eslint/no-wrapper-object-types' was not found  @typescript-eslint/no-wrapper-object-types<\n>"
nvim
clear
clera
clear
gitc
nvim
npm run dev
npm i
clear
clear
npm rund ev
vim
nvim
clear
nvim
cd ebsn-front
cd example
cd ebsn-front
clear
git fetch
git pull
git pull master
git pull origin master
nvim
gitc
clear
gitc
gitd
nvim
cd nushell
nvim
clear
clerar
clear
clear
git pull
clear
source ~/.config/nushell/config.nu
gitd
git checkout MyClientelingMock
clear
npm run build
npm publish
nvim
cd nvim
npm run dev
nvim
npm i
cd lib
cd ..
npm run build
cd lib
npm publish
clear
clear
ear
clear
cd ..
clear
nvim
npm run build
cd lib
npm publish
clear
cd ..
npm i
gf
clear
gh copilot explain "how to map all keypmas of tmux"
nvim
cd tmux
nvim
tmux attach
tmux kill-session -t work
tmux ls
cd client
cd retail
clear
tmux attach -t work
gh copilot explain "create new session with name"
gh copilot explain "create new session within tmux with name"
clear
cd client
clear
cd client
clear
tmux new-session -s work
tmux kill-session -t work
source ~/.config/tmux/tmux.conf
gh copilot explain "how to re source tmux config within tmux"
:source-file ~/.config/tmux/tmux.conf
:source ~/.config/tmux/tmux.conf
source ~/.config/tmux/tmux.conf
clear
gh copilot explain "how to change index of a window in tmux"
clear
cd clien
clear
clear
nvim
gf
nvim
clear
cd nvim
npm run dev
nvim
clear
clear
gf
clear
gid
gitd
clear
npm run dev
clear
clera
clear
vim ebsn
cd ebsn-front
vim
cd ebsn-front
clear
gf
clear
npm run test:assisted-sales
npm i
nvim
clear
git fetch
clear
nvim
clear
git pull origin MC/feature/newcontact
npm run test:assisted-sales
clera
clear
npm run dev
clear
nvim
gf
npm run dev
clear
vim
cd .config
nvim
nvim
clear
nvim
vim
nvim
nvim
cd
vim .zshrc
clear
nvim .config
clear
nvim
cd .config
nvim
source ~/.config/tmux/tmux.conf
tmux attach -t work
tmux detach
source ~/.config/tmux/tmux.conf
tmux source-file ~/.config/tmux/tmux.conf<\n>
clear
nvim
clear
cd client
clear
nvim
nvim
cd
clear
ls
la
clear
ls -l
nvim .tmux.conf
clear
ls
clear
tmux detach
tmux attach -t work
tmux ls
tmux source-file ~/.config/tmux/tmux.conf
cd .config
nvim
tmux list-keys | grep C-q<\n>
nvim
tmux source-file ~/.config/tmux/tmux.conf
nvim
tmux source-file ~/.config/tmux/tmux.conf
tmux list-keys | grep C-q<\n>
find ~ /etc -name "tmux.conf"<\n>
clear
tmux attach -t work
tmux detach
tmux list-keys | grep C-q<\n>
tmux list-keys | grep C-q
tmux source-file ~/.config/tmux/tmux.conf
tmux list-keys | grep C-q
tmux list-keys | grep C-s
nvim
cd .config
nvim
tmux source-file ~/.config/tmux/tmux.conf
nvim
tmux list-keys | grep C-o
tmux list-keys | grep C-t
nvim
tmux source-file ~/.config/tmux/tmux.conf
tmux list-keys | grep C-t
tmux list-keys | grep C-q
tmux list-keys | grep C-
nvim
clear
nvim
tmux source-file ~/.config/tmux/tmux.conf
tmux list-keys | grep C-q
tmux list-keys | grep C-s
clear
nvim
nvim
cd packages/utils
npm init -y
npx tsc --init<\n>
cd packages/utils
clear
mkdir src
touch src/validation/email.ts
mkdir src/validation
touch src/validation/email.ts
clear
cd reatil
npm install --save-dev jest ts-jest @types/jest --workspace=packages/utils<\n>
npm install --save-dev jest ts-jest @types/jest --workspace=utils
nvim
cd ..
nvim
cd retial
cd retail
turbo gen workspace --type package --name utils
cd packages/utils
nvim
cd ..
cd ..
clear
cd utils
cd retail
npm install --save-dev jest ts-jest @types/jest --workspace=utils
npm install --save-dev typescript --workspace=utils
cd packages/utils
npm run build && npm run test
npm run build and npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
clear
npm run test
clear
npm run build
npm run test
npm run build
npm run test
npm run build
clear
npm run build
clear
npm run build
clear
npm run build
node cjs-test.js
node esm-test.mjs
npm run build
node cjs-test.js
node esm-test.mjs
npm run build
node esm-test.js
npm run build
cd retail
npm i
cd client
npm run dev
cd retail
npm i
c;ear
clear
cd ..
npx create vite utils --template vanilla-ts
npm create vite utils --template vanilla-ts
npm run build
cd utils
npm run build
clear
turbo gen workspace --type package --name @clienteling/utils --copy packages/services
clear
q
:q
cd packages
clear
turbo gen workspace --type package --name @clienteling/utils --copy @eng-retail-platform/front-services
cd retail
npm i
npm run dev
cd packages/utils
npm run build
npm run test
npm run build
clear
npm run build
clear
npm run test
npx ts-jest config:init
npm run test
clear
npm i
npm run dev
cd client
nvim
npm run build
clear
npm run build
clear
npm run dev
npm i
cd retail
npm i
clear
npm run build
turbo gen workspace --type package --name @clienteling/utils --copy @clienteling/twilio
cd packages
turbo gen workspace --type package --name @clienteling/utils --copy @clienteling/twilio
cd retail
npm i
cd utils
nvim
npm run test
nvim
npm run build
clear
npm run build
clear
cd retail
nvim
tubo clean
turbo clean
nvim
npm i
cd packages/utils
npm run build
npm run test
clear
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
cleawr
clear
npm run build
clear
npm run build
clear
npm i
clear
turbo dev --filter=my-clienteling
npx @turbo/codemod@latest update
turbo dev --filter=my-clienteling
nvim
turbo dev --filter=my-clienteling
clear
nvim
nvim
clear
cd client
npm run dev
turbo dev --filter=my-clienteling
npm i --save-del @babel/highlight --workspace=my-clienteling
turbo dev --filter=my-clienteling
clear
nvim
clear
gf
turbo clean
npx @turbo/codemod@latest update
nvim
clear
npm i
cd client
npm run dev
clear
cd retail
nvim
npm i --save-dev  typescript@latest
clear
nvim
clear
turbo dev --filter=my-clienteling
nvim
turbo dev --filter=my-clienteling
clear
nvim
clear
cd retail
clear
turbo gen workspace --type package --name @clienteling/utils 
clear
cd packages/utils
clear
npm init jest@latest
cd retail
npm i --save-dev  jest@latest
npm i --save-dev  jest@latest --workspace=@clienteling/utils
nvim
npm i --save-dev  jest@latest --workspace=utils
npm i --save-dev --workspace=@clienteling/utils jest@latest
cd packages/utils
npm run teset
npm run test
npm install --save-dev --workspace=@clienteling/utils  ts-jest
npm install --save-dev --workspace=@clienteling/utils  @types/jest
npm run test
npm run build
npm run test
npm i
clear
npm i
npm run test
clear
npm i
npm run test
npm run build
npm i
cd client
npm run dev
cd retail
npm i
clear
gf
cd retail
cd reatil
cd retail
gf
nvim
clear
clear
clear
nvim
cler
clear
cd client
clear
git checkout -b feature/247-refactor
clera
clear
nvi
nvim
clear
npm run dev
clear
gf
git fetch
vim
clear
git push
clear
gitc
gf
git pull
gitd
clear
nvim
clear
cd packages
nvim
clear
cd reatil
cd retail
nvim
vim
cd retail
cd client
nvim
clear
clea
clear
clear
cd packages
npm run build
cd packages
cd utila
cd utils
npm run build
cd reatil
cd retail
npm i
clear
npm run build
cd utils
npm run build
cd twilio
cd ../twilio
clear
npm run build
cd retail
npm i
cd utils
npm i
npm run build
cd reatil
cd retail
npm i
nvim
cd my-presenter
cd utils
npm run build
clear
npm run build
clera
clear
npm run build
npm run tst
npm run test
cd retail
npm i
nvim
cd client
nvim
gf
clear
cd retail
clear
cd apps
ls
cd web
ls
npx create vite pkgs-test
npm create vite pkgs-test
cd pkgs-test
npm i
cd pkgs-test
npm run dev
gf
clear
nvim
clear
cd retail
turbo dev --filter=pkgs-test
clear
nvim
npm i
cd utils
nvim
npm run build
cd retail
nvim
cd pkgs-test
cd utils
npm run build
cd utils
nvim
npm run build
nvim
npm run build
nvim
npm run build
nvim
npm run build
clear
cd utils
npm run build
npm run dev
cd retail
gf
clear
clear
nvim
cd retail
clera
clear
nvim
npm run dev
npm i
gd
gf
clear
git pull
clear
npm run build
clear
cd lib
clear
cd ..
npm run build
cd lib
npm publish
clear
npm run dev 
claer
clear
npm i
npm run dev 
clera
clear
nvim
cd nushell
nvim
npm run dev 
ls -a
ls -l
la
clear
cd client
gf
clear
git pull
clear
nvim
git clone https://github.com/EngineeringRetailPlatform/retail-platform-mono.wiki.git
https://github.com/EngineeringRetailPlatform/retail-platform-mono.wiki.git
git clone github.com:EngineeringRetailPlatform/retail-platform-mono.wiki.git
clear
nvim
cd ..
git clone github.com:EngineeringRetailPlatform/retail-platform-mono.wiki.git wiki
nvim
cd wiki
nvim
clear
cd wiki
clear
clera
clear
cd retail
clear
cd utils
npm run dev 
gf
clear
nvim
npx lint-staged
tmux attach -t work
clear
clear
clear
nvim
nvime
nix search nixpkgs mozilla
vim nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
vim nix
cd aerospace
osascript -e 'id of app "Firefox"'
nvim
osascript -e 'id of app "Postman"'
npm run build
cd lib
npm publish
clear
npm i
cd ..
npm run build
cd lib
npm publish
cd packages/utils
npm run build
cd utils
npm run test
npm run build
cd queue
clear
cd queue
clear
npm run test
clear
npm run test
nvim
clear
cd services
nvim
cd packages/services
clear
nvim
npm run dev
clear
gf
clear
npm run dev
npm run test
clear
gf
git pull
nvim
clear
gitc
git checkout pipeline/develop
git merge develop
git push
git checkout pipeline/test
git merge test
git merge develop
git push
git checkout pipeline/production
git merge develop
git push
clear
gitc
clear
cd queue
nvim
npm run dev
clera
clear
nvim
clear
cd retail
cd pkgs-test
npm run preview
clear
cd ..
nvim
clear
cd ..
cd retail
clear
cd retail
clear
npm run dev
clear
gf
git pull
nvim
clear
aerospace lsit-apps
aerospace list-apps
tmux attach -t work
clear
cd aerospace
aerospace list-apps
nvim
clear
cd .config
clear
clear
cd example
clear
clear
clear
ls
clea
clear
cd documents
ls
cd projects
ls
git clone git@github.com:federicoReghini/toto.git
mkdir toto
cd toto
git init
nvim
git config --global init.defaultBranch main
clear
cd ..
ls
ls
la
cd .git
cd toto
nvim
cd
la
vim .git
cd .git
nvim
cd
clera
clear
cd ~/.gitconfig
cd .gitconfig
git config --global --list<\n>
vim ~/.gitconfig
cd ~/.gitconfig
vim ~/.gitconfig
cd .ssh
nvim
git fetch
nvim
git fetch
clear
git branch -M main
clear
bun create qwik@latest
npm create qwik@latest
npm run qwik add tailwind
cd toto
npm run qwik add motion
npm install motion
npm run start
npm run preview
clear
cd ..
cd toto
nvim
clear
npm create qwik@latest
npm run qwik add motion
npm run qwik add tailwind
clear
npm install motion
nvm ls
clear
nvm
nvm ls
clear
nvim
nvim
cd ..
cd toto
clear
nvim
npm run preview
npm run dev
clear
npm run lint
npm run dev
clear
nvim
cd .config
nvim
clear
nvim
npm run dev
cd toto
clear
cd documents
cd downloads
cd ..
ls
cd downloads
ls
npm run dev
clear
clear
:qa
clear
nvim
clear
nix search nixpkgs syncthing
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim
gf
npm run dev
npm install --save react-native-signature-canvas --workspace=my-clienteling
npm run build
npm install -g eas-cli
npm run build
clear
eas device:create
npm run build
clear
gitc
npx expo-doctor
npx expo install --check
nvim
npx expo install expo@latest
npx expo install --fix
npx expo-doctor@latest
npx expo install --check
npx expo install --fix
npx expo-doctor
npx expo install metro@^0.81.0 && metro-resolver@^0.81.0 && metro-config@^0.81.0
npx expo install metro@^0.81.0 
npx expo install metro-resolver@^0.81.0 
npx expo install metro-config@^0.81.0 
npx expo-doctor@latest
npx expo install metro@latest
npx expo-doctor@latest
nvim
npx expo-doctor@latest
npx expo install --fix
npx expo install --check
clear
npm run build
clear
npx lint-staged
nvim
ear
clear
turbo gen workspace --type app --name mc 
cd apps/native/mc
npx create-expo-app@latest
nvim
npx create-expo-app@latest
nvim
cd ..
cd retail
npm i
turbo clean
clear
nvim
npm i
clear
nvim
cd mc
npm run dev
cd packages/cli
npm run build
nvim
cd ..
ls
cd cli
nvim
npm run build
cd retail
npm i
clear
cd packages/cli
npm run build
cd mc
npm run dev
clint login
npm run dev
cd ..
nvim
cd mc
npm run dev
clear
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nix search nixpkgs wezterm
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
y
cd .config/nix
nvim 
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim
clear
nvim
npx expo-doctor@latest
npm why metro
nvim
clear
cd ..
cd mycli
nvim
cd clienteling
nix search nixpkgs vscode
clear
nvim
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
q
clear
cd .config/nix
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
vim nix
nvim
clear
nvim
clear
nvim
clear
npm run dev
clear
nvim
cd retail
gitc
nvim
clear
clear
npm i
clear
clear
npm run de
vim nix
nvim
gf
git pull
nvim
git pull
nvim
npm run build
cd lib
npm publish
cd ..
clear
npm i
nvim
npm run dev
git reset --soft HEAD~1
nvim
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
which stow
clear
stow .
nvim
cd
la
cat .zshrc ~/.config/.zshrc
clear
cd .config
nvim
cd
vim .zshrc
cd .config
vim .zshrc
cd
nvim
cd .config
stow .
ls -a
rm .DS_Store
ls -a
stow .
clear
cd $HOME
cd $env.HOME
ls -lah .zshrc
clear
cd .config
vim nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
cd
vim
clear
cd .config
clera
clear
clear
clear
nvim
clear
cd ebsn
clear
nvim
npm i
clear
gf
vim
nvim
clear
nvim
gf
git pull origin develop
nvim
npm run test:light-report
npm i
npm run test:light-report
clear
nvim
git pull
nvim
clear
npm run dev
clear
npm run dev
npx expo-doctor
npx expo install --fix
clear
npm run dev
clear
npm i
nvim
npm run build
cd lib
npm run publish
npm publish
cd ..
clear
npm run test:light-report
c;ear
clear
npm run dev
cd
la
vim .zshrc
cd .config
npm run build
cd lib
npm publish
npm i
nvim
clear
clera
clear
cd ..
clear
nvim
clear
cd projects
ls
cd toto
clear
cd toto
clear
npm run dev
clear
nvim
clear
git push
nvi
nvim
git init
git add remote origin git@github.com:federicoReghini/toto.git
git remote add origin git@github.com:federicoReghini/toto.git
git add .
git commit -m "first commit"
git push -u origin main
git push -u origin main
clear
nvim
gf
gp
git pull
clear
git config --help
git config ls
git config
git config --help
git config list
git config pull.rebase --help
git config list
clear
nvim
npm run dev
clear
npm i react-native-signature-canvas --filter=my-clienteling
nvim
npm i
:qa
npm run build
cd toto
cd ..
mkdir hackethon
cd hackethon
touch pf.js
nvim
clear
cd hackethon
vim pf.js
node pf.js
node da2.js
node day2.js
npm run dev
clear
npm run dev
gf
nvim
clear
clear
git checkout package/core
git checkout -b package/core
cd core
cd packages/core
cd retail
cd packages/core
cd retail
cd packages/core
clear
clear
nvim
cd ..
cd retail
turbo gen workspace --type packages --name ui 
cd packages/ui
cd retail
cd packages/ui
npx create-expo-app --template expo-template-blank-typescript
npx -p @storybook/cli sb init --type react_native
npx degit chromaui/intro-storybook-react-native-template#main taskbox
npm i
npm run storybook:ios
npx expo-doctor
npx expo install --check
clear
npm i
clear
npm run storybook:ios
npm i
npm expo-doctor
npx expo-doctor
npx expo install --check
nvim
npm run storybook:ios
npm start -- --reset-cache
npm run storybook:ios
npm run start
npm run storybook:ios
nvim
clear
npm i
npm run storybook:ios
clear
cd toto
cd ..
npx degit chromaui/intro-storybook-react-native-template#main taskbox
cd taskbox
nvim
npm i
npm run storybook:ios
nvm ls
cd
curl -fsSL https://fnm.vercel.app/install | bash
cd 
la
la | where name === .fnm
la | where name == .fnm
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
node
clear
nvm
which nvm
which node
clear
which fnm
clear
cd
la
la | where name == .fnm
^ls
^nvm
which fnm
fnm
fnm install node
fnm install 20.17.0
sudo find / -name ".fnm" 2>/dev/null<\n>
sudo find / -name ".fnm"<\n>
find ~ /etc -name ".fnm"
sudo find ~ /etc -name ".fnm"
^find ~ /etc -name ".fnm"
clear
find . -name ".fnm"
sudo find / | where $it =~ /\.fnm$/ | each { echo $it }<\n>
sudo find / | where $it =~ /\.fnm$/ 
ls ~ --recursive | where name =~ /\.fnm$/<\n>
cd .config
la
which fnm
find .fnm
la | where name == .fnm
cd 
la | where name == .fnm
clear
fnm --versom
fnm --version
fnm list-version
fnm list-remote
fnm install "v23.3.0"
fnm list
fnm use "v23.3.0"
source ~/.config/nushell/config.nu
split column --help
source ~/.config/nushell/config.nu
fnm use "v23.3.0"
node -V
node --version
fnm use default
node --version
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim
clear
fnm use default
cd ui
clear
fnm use default
clear
cd toto
cd ..
ls
cd taskbox
npm run storybook:ios
npm i
npm run storybook:ios
clear
nvim
turbo clean
nvim
clear
fnm --version
clear
cd retail
clear
npm i
npm run storybook:ios
nvim
cd packages/ui
npm run storybook:ios
clear
nvim
turbo clean
nvim
npm i
npm run storybook:ios
clear
nvim
npm i
cd client
npm run dev
nvim
cd packages/cli
npm run build
clint login
nvim
clear
npm run build
cd ui
cd client
npm run dev
clear
cd ui
clear
npm run start
npm install chromium-edge-launcher --workspace=ui
npm install chromium-edge-launcher --workspace=packages/ui
nvim
npm install chromium-edge-launcher --workspace=packages/ui
npm run storybook:ios
clear
nvim
nvim
npmi
npm i
npm run storybook:ios
turbo clean
nvim
npm i
npm run storybook:ios
clear
npm run start
npx expo-doctor
npx expo install --check
nvim
npm run start
npx expo install --check
clear
npm run start
cd client
nvim
cd ui
clear
npm run start
cd ../..
cd ui
clear
cd ui
npm run start
clear
cd cliet
cd client
cd cliet
npm run start
nvim
cd retail
turbo clean
npm i
cd client
npm run start
clear
nvim
cd retail
gitc
gitd
clear
npm run start
clear
gf
git pull origin develop
npm run build
cd lib
npm publish
clear
cd toto
cd ..
ls
cd taskbox
nvim
cd ..
cd hackethon
node day2.js
cd ..
nvim
clear
npm i
git pull
nvim
nvim
turbo clean
npm i
npm run dev
gf
:qa
node day3.js
k
node day3.js
cargo run
cargo build
cargo run main
nvim
cmear
clear
npm run dev
clear
clear
nvim
clear
npm run dev
cargo ru
cargo run main
clear
cargo run main
cargo run main non_existent_file.txt
cargo run main main.rs
cargo run main non_existent_file.txt
cargo run main src/main.rs
clear
npm run test:prod-serv
nvim
gf
npm run build
cd lib
npm publish
clear
cd ..
clear
npm i
npm run dev
clear
git reset --hard HEAD~1<\n>
nvim
git push --force<\n>
clear
nvim
gfr
gf
git pull
clear
npm run test:l-r
gf
clear
gf
npm run test:l-r
eas device:create
eas device:list
clear
npm run build
cd lib
npm publish
cleawr
clear
clear
gf
clear
npm i
clear
clera
clear
nvim
clear
npx turbo dev --filter=my-clienteling
clear
npm run dev
clear
cd example
clint login
clear
npm run dev
npm run build
clint project
clint eas-build
clear
npm run build
npx eas build --platform ios --development_client ios --clear-cache
clear
npm install -g eas-cli
npm run build
clear
npm run test:l-r
cd ..
npm run test:l-r
gf
cd packages/ui
# With NPM<\n>npx create-expo-app --template expo-template-storybook .
npm run ios
nvim
cd ui
npm run storybook:ios
clear
npm run storybook:ios
clear
nvim
cd ..
nvim
npm i
cd retail
npm i
clear
npx create-expo-app 
cd packages
nvim
mkdir ui
cd ui
npx create-expo-app 
ls
npx storybook@latest init
cd ui
ls
npx expo customize metro.config.js
npm run ios
nvim
cd ..
clea
cd ..
nvim
clear
clear
cd retail
clear
cargo run main
cd ../../../..
ls
rm -rf nexy-payment
git clone git@github.com:Project-FE-GPA/nexi-payment.git
rm -rf nexi-payment
git clone git@github.com:Project-FE-GPA/nexi-payment.git
ls
cd nexi-payment
npm i
clear
nvim
source ~/.config/tmux/tmux.conf
clear
nvim
tmux detach
tmux
cd nexi-payment
clear
nvim
gitc
git checkout origin develop
gh copilot explain "how to checkout to a remote branch"
git checkout origin/develop 
clear
npm i
npm run pre-build
cd
ls
la
find .netrc
vim .netrc
la
which .netrc
touch .netrc
vim .netrc
nvim
clear
cd ..
git clone git@github.com:ilgianlucapapa/eng-payment.git
ls
cd eng-payment
npm i
cd payment
cd eng-payment
npm run pre-build
pod --version<\n>
sudo gem update cocoapods
npm run pre-build-clean
cargo run main
cd projects
ls
cd hackethon
ls
cd hackethon
node day3.js
npm run ios
cd eng-payment
npm run start
npm run pre-build
npm run start
clear
cd toto
clear
cd toto
cd public
ls
gh copilot explain "how to rename a file from terminal"
gh copilot explain "how to copy the col name of a value in nushell"
ls
cd where # = 4
ls where # = 4
ls | where # = 4
gh copilot explain "how to get the index col in nushell for filtering"
ls | table | autoview --index
ls | where index = 4
ls | where index == 4
ls
mkdir videos
mv bricks.mov videos
ls
cd videos
ls
clear
vim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
cd toto
public/videos
cd public/videos
ffmpeg -i brick.mov
ls
ffmpeg -i bricks.mov
ffmpeg -i bricks.mov -c:v libx264 -c:a aac bricks.mp4<\n>
clear
npm run start
clear
npm run start
clear
nvim
cd eng-payment
clear
cd
cd .config
nvim
git pull
clear
npm i
cd
ls
cd downloads
ls
clear
git checkout origin/feature/310-bar-chart
clear
gitc
git checkout origin feature/310-bar-chart
git checkout feature/310-bar-chart
clear
gf
git pull
nvim
npm i
clear
npm i
npm run dev
gf
git pull
cd my-presenter
nvim
nvim
clear
clear
cd client
cd
vim .zshrc
clear
cd .config
nvim
whic z
which z
which zoxide
tmux attach -t work
clear
nvim
gf
git pull
nvim
nvim
clear
cleaqr
clear
gitc
git checkout -b feature/309-pie
gitc
git pull feature/310-bar-chart
git merge feature/310-bar-chart
clear
npm run start
npm run dev
nvim
vim adyen-pos-mobile-ios-main
npm run test:l-r
clear
git checkout feature/307-ui-package
clear
cd packages/ui
npm i
clear
cd packages/ui
nvim
cd ..
nvim
cd ..
clear
cd packages
git pull
nvim
git pull
cd ui
clear
cd ui
cd retail
npm i
npm i @storybook/addon-actions --workspace=packages/ui
npm run start
npm run storybook
cd packages/ui
nvim
npm run storybook
npx storybook automigrate
npx storybook:ios
npx storybook:start
npm run storybook:start
gitc
gf
cd retail
nvim
cd retail
nvim
clear
clear
nvim
gf
git pull
gf
npm run test
tsc --noEmit --fix
npm run test
nvim
gitc
git merge feature/310-bar-chart
nvim
npm run dev
npm i
npm run dev
git push -u origin feature/309-pie
npm install @react-native-masked-view/masked-view react-native-linear-gradient --workspace=my-clienteling
git pull
clear
nvim
gitc
nvim
clear
nvim
gitc
git merge feature/309-pie
git push
gitd
clear
gitd
clear
npm run build
npm run dev
npm run build
npm install -g eas-cli
npm run build
clear
cleear
clear
cd eng-payment
clear
cd eng-payment
cd
cd downloads
cd eng-payment
nvim
clear
npm run dev
clear
npm run dev
npm run build
clear
vim adyen-pos-mobile-ios-main
xed adyen-pos-mobile-ios-main
cd adyen-pos-mobile-ios-main
ls
xed POSSampleApp
cd toto
npm init builder.io@latest
npm run dev
clear
nvim
clear
nvim
cleawr
clear
gf
git checkout feature/307-ui-components-library
clearw
clear
mkdir packages/ui-expo
cd packages/ui-expo
npx create-expo-app@latest
npx create-expo-app@latest .
npm run start
npm run ios
cear
clear
npm i
cd retail
npm i
npm run ios
npx expo-doctor
cd ..
rm -rf ui-expo
turbo gen workspace --type packages --name ui-expo --copy 
ls
cd ui-expo
npm i
turbo clean
rm -rf node_modules
clear
npm i
nvim
cd ..
rm -rf ui-expo
clear
turbo gen workspace --type packages --name stories --copy 
ls
cd stories
nvim
cd retail
npm i
nvim
cd stories
npm run ios
clear
npm run dev
clear
cd stories
npm run dev
cd ..
cd ui
nvim
npm run dev
cd ..
cd stories
npm run dev
clear
cd ..
nvim
cd ..
rm -rf stories
clear
nvim
clear
clear
cd toto
cd ..
ls
cd taskbox
npm run dev
npm run start
npm i
npm run start
clear
ls
cd ..
cp taskbox
cp taskbox ~/documents/beije/engineering/retail-platform-mono/packages
cp -r taskbox ~/documents/beije/engineering/retail-platform-mono/packages
cd packages
ls
cd teskbox
cd taskbox
cd retail
npm i
clear
npm run start
clear
cd taskbox
npm run start
cd ..
nvim
cd ..
clear
clear
cd toto
cd ..
npx create-expo-app@latest 
cd my-app
npm run ios
npm i
npm run ios
clear
cd packages
npx create-expo-app@^51.0.18 .
npx create-expo-app@51.0.18 .
npx create-expo-app
rm -rf stories
cd retail
npx create-expo-app ./packages/stories
cd packages
ls
cd stories
cd stories
npm run start
cd retail
npm i
cd stories
npx expo-doctor
npx expo install --check
npm run start
clear
cd retail
npm i
cd stories
npx expo-doctor
npx expo install --check
cd retail
turbo clean
clear
nvim
clear
nvim
npm i
clear
cd ..
rm -rf stories
nvim
turbo clean
rm -rf node_modules
rm -rf package-lock.json
clear
cd packages
npx create-expo-app ./stories
cd retail
ls
cd stories
npm i --legacy-peer-deps
nvim
npm run start
npm i
cd stories
npm run start
cd retail
turbo clean
rm -rf package-lock.json
rm -rf node_modules
npm i
cargo build
cargo run
nvim
turbo clean
rm -rf package-lock.json
npm i
rm -rf node_modules
npm i
npm i --legacy-peer-deps
npm run start
npm i
npm run start
npm i --legacy-peer-deps
npm i
cd stories
npx expo doctor
npx expo-doctor
npx expo install --check
clear
npx expo install --check
cd reatil
cd retail
turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
cargo install
cargo run
clear
nvim
gitc
clear
gitc
gitd
git checkout feature/307-ui-components-library
clear
nvim
cd ..
cd retail
:qa
npm i
cd retail
clear
cd packages/ui
npm run dev
clear
npm run start
clear
npm i
cd packages/ui
npm run start
cd retail
npm install react-native-safe-area-context --workspace=packages/ui
cd packages/ui
npm run start
nvim
clear
node src/scripts/index.js
npm run start
clear
npm run start
clear
node src/scripts/index.js
clear
gf
git pull
clear
nvim
gf
git pull
clear
npm run start
nvim
clear
clear
nvim
clear
clear
nvim
gff
gf
git pul
git pull
clear
nvim
clear
gf
git pull
clear
gitc
clear
git checkout feature/311-smart-scalar
git pull
npm i
tsc --noEmit
npm run check
clear
nvim
clear
gitc
git pull
clear
gitc
gf
nvim
clear
cd ..
cd ..
ls
cd packages/ui
clear
clear
cd packages/ui
clear
nvim
nvi
cd retail
npm i
clear
npm run check
cd packages/ui
npm run check
clear
npm run check
nvim
npm run check
npm i
clear
cd ..
npm run check
k
npm run check
nvim
cd retail
npm i
clear
npm i
clear
npm i
clear
:qa
clear
which expo
npm which expo
npm why expo
clear
gitc
gf
git pull
clear
git checkout feature/build-523
clear
cd retail
clear
cleqr
clear
npm run dev
clear
gf
git pull
nvim
clear
gf
git pull origin feature/311-smart-scalar
nvim
gf
git checkout MC/feature/newcontact
clear
cd retail
npm i
npm run dev
npm i
cd cliente
npm run dev
nvim
gf
clear
gf
git pull
gf
fnm list
gf
git pull
nvim
git pull
nvim
nvi
nvim
clear
gf
git pul
git pull
clear
cd beije
ls
cd projects
ls
git clone https://github.com/total-typescript/pro-essentials-workshop.git
ls
which pro-essentials-workshop
path expand pro-essentials-workshop
path expand help
help path
path expand pro-essentials-workshop
ls
path expand home
path expand
cd pro-essentials-workshop
path expand
path expand .
cd ..
path expand | pro-essentials-workshop
cd pro-essentials-workshop
pnpm -V
pnpm --version
pnpm update
pnpm self-update
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
pnpm --version
clear
clear
pnpm install
pnpm run exercise
clear
pnpm run e
clear
pnpm run e
clera
pnpm run e
clear
cd retail
cd ..
ls
pnpm dlx create-turbo@latest
cd retail
cd retail
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvin
nvim
nvin
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
clear
cd apps/my-clienteling
pnpm run dev
cd retail
cd ..
cd retail
turbo --version
turbo run dev --filter=my-clienteling
cd apps/my-clienteling
pnpm run dev
cd ../..
pnpm add @babel/runtime --save-dev --filter=my-clienteling
cd apps/my-clienteling
pnpm run dev
cd ../..
pnpm add react-native-css-interop --save-dev --filter=my-clienteling
turbo run dev --filter=my-clienteling
pnpm add @react-navigation/native-stac --save-dev --filter=my-clienteling
pnpm add @react-navigation/native-stack --save-dev --filter=my-clienteling
turbo run dev --filter=my-clienteling
nvim
pnpm add @react-native/assets-registry/registry --save-dev --filter=my-clienteling
pnpm run dev
clear
turbo run dev --filter=my-clienteling
pnpm add @react-native/assets-registry --save-dev --filter=my-clienteling
turbo run dev --filter=my-clienteling
nvim
clear
nvim
nvim
clear
clear
cd my-clienteling
clear
nvim
clear
pnpm run e
clear
gitc
npm run dev
npm i
k
npm i
npm run dev
npx lint-staged
clear
nvim
clear
npm i
npm --version
npm i
turbo run dev --filter=my-clienteling
clear
nvim
git clean -fd<\n>
clear
git restore --source=HEAD --staged --worktree .<\n>
nvim
clear
xed POSSampleApp
npm i
clear
turbo run dev --filter=my-clienteling
clint login
cd my-clienteling
clint login
clear
npm run dev
cd retail
gf
clear
git pull
npm run dev
gf
clera
clear
nvim
clear
cd projects
ls
. | path expand
ikigai | path expand
"." | path exapnd
"." | path expand
clear
mkdir gh-scrum-cli
cd gh-scrum-cli
npm init -y
npm install typescript commander axios @clack/prompts csv-writer
npm fund
npm install --save-dev ts-node @types/node
npx tsc --init<\n>
cd scrum-cli
npx ts-node scr/cli.ts list-projects
nvim
npx ts-node src/cli.ts list-projects
nvim
npx ts-node src/cli.ts list-projects
npm run dev
clear
npm install @octokit/rest<\n>
npm uninstall axios
npx ts-node src/cli.ts list-projects
npm run dev
npm run start
tsc
npm run build
npx ts-node src/cli.ts list-projects
clear
nvim
npm run dev
clear
npm run build
clear
clear
cd utils
npm i
nvim
npm run build
npm run dev
nvim
npm run build
nvim
npm run build
nvim
npm run build
nvim
npm run build
git fetch
cd clienteling-mobile-app
cd engineering
ls
cd clienteling
ls
cd myclienteling-app-mobile
nvim
gitc
gf
ls
rm -rf myclienteling-app-mobile
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-mobile.git
cd myclienteling-app-mobile
gf
git checkout develop
npm i
git checkout production
npm i
npm run build
nvim
npm run build-production-ios
nvim
npm run build_wave
gf
cat package.json
ls package.json
open package.json
npm run build
cd lib
npm publish
nvim
clear
cd ..
clear
npm i
npm run build
cd lib
npm publish
cd ..
npm run test:assisted-sales
rm -rf lib
npm run test:assisted-sales
clear
clear
npm run dev
cd cli
cd packages/cli
clear
nvim
npm run build
npm run link-cli
cd packages/cli
clear
npm run build
npm run link-cli
npm run dev
npm run build
npm run dev
npm run link-cli
npm run build
npm run link-cli
npm run dev
npm run build
clear
npm run dev
npm run build
npm run dev
clear
nvim
tmux attach -t work
tmux detach
tmux
clear
pnpm run e
clear
clear
npm run dev
clear
vim
clear
cd retail
cd ..
ls
mkdir yarn-mono
corepack enable
yarn init -2
yarn --version
clear
yarn set version stable
cd yarn-mono
yarn --version
clear
cd ..
ls
rm -rf yarn.lock
rm -rf README.md
ls
rm -rf package.json
clear
cd yarn-mono
yarn init -2
ls
yarn dlx create-turbo@latest
clear
ls
rm -rf package.json
rm -rf yarn.lock
rm -rf README.md
ls
yarn dlx create-turbo@latest
ls
cd ..
rm -rf yarn-mono
yarn dlx create-turbo@latest
npx create-turbo@latest
ls
rm -rf yarn-mono
npx create-turbo@latest
cd yarn-mono
yarn --version
corepack enable
yarn init -2
yarn install
yarn --version
rm -rf yarn.lock
yarn install
cd retail
nvim
clear
cd apps/expo
cd ../..
vim package.json
cd apps/expo
cd ../..
cd apps
rm -rf expo
cd ..
yarn create expo apps/cool-app
cd apps/cool-app
yarn ios
clear
cd yarn-mono
cd yarn-mono
yarn install
yarn --version
yarn init -2
yarn --version
cd retail
yarn install
cd retail
nvim
clea
clear
yarn install
clear
yarn dlx turbo run dev --filter=my-clienteling
cd apps/my-clienteling
nvim
yarn run start
nvim
yarn run expo:iso
yarn run expo:ios
yarn cache clean<\n>
yarn cache clea
yarn cache clean
yarn install
yarn run expo:ios
nvim
yarn run ios
clear
yarn run start
nvim
yarn run dev
npm show @twilio/conversations version<\n>
yarn add @twilio/conversations@latest
npm show @twilio/conversations version<\n>
nvim
nvim
clera
cd ..
cd retail
cd clienteling
clear
clear
clera
cd clienteling
clear
nvim
cd yarn-mono
clear
nvim
yarn install
cd apps/my-clienteling
yarn run dev
git commit -- interactive
git commit -a
clear
clear
ls
cd tmux
ls
"tmux.conf" path expand
"tmux.conf" | path expand
clear
nvim
clear
cd retail
cd packages/cli
cd packages/cli
npm run dev
clear
npm run build
clear
gff
gf
npm run dev
clint project
npm run dev
npm run build
npm run update
clear
npm run de
npm run dev
clear
npm run update
q2345
clear
nvim
npm run test:assisted-sales
nvim
npm run dev
yarn run dev
nvim
cd ..
npx which expo
cd yarn-mono
clear
cd apps/my-clienteling
yarn install expo@latest
yarn install expo
yarn add expo@latest
yarn run dev
yarn expo-doctor
yarn dlx expo-doctor
yarn dlx expo install --check
yarn run dev
yarn add expo-build-properties
yarn run dev
yarn add expo-linking<\n>
nvim
yarn run dev
clear
nvim
cd apps/my-clienteling
cd retail
yarn install
cd yarn-mono
yarn il
yarn install
yarn turbo run dev --filter=my-clienteling
cd apps/my-clienteling
yarn run dev
cd ../..
yarn install
cd apps/my-clienteling
nvim
yarn run dev
clear
cd ../..
nvim
cd ../..
cd ..
rm -rf yarn-mono
ls
ls a
ls -a
rm .git
rm -rf .git
rm -rf .gitattributes
rm -rf .gitignore
rm -rf .pnp.cjs
rm -rf .editorconfig
ls
clear
pnpm run e
clear
pnpm run e
clear
pnpm run e
clearer
clear
pnpm install
pnpm run e
clear
pnpm run e
clear
gf
clint project
npm run dev
clear
git checkout main
git merge develop
git push
clear
c
gitc
clear
tmuz
clear
clear
pnpm run e
clera
clear
clear
gf
clear
nvim
cd ..
cd presenter
nvim
cd retail
rm -rf node_modules
clear
qqqjk
cd clienteling
clear
cd apps/my-clienteling
cd retail
cd apps/my-clienteling
clear
nvim
cd retail
npm i
npx turbo clean
clear
npm i
npx turbo dev --filter=my-clienteling
turbo run clean
clear
rm -rf node_modules
npm i
turbo run dev --filter=my-clienteling
npm i
turbo run dev --filter=my-clienteling
cd apps/my-clienteling
npm run dev
gh copilot explain "how can i remove all the modified files and restore as it was everything with git"
git clean -df
git stash clear
clear
gh copilot explain "how can i remove all the modified files and restore as it was everything with git"
git reset --hard HEAD
clear
nvim
clear
nvim
clear
cd retail
cd ..
ls
cd retail
nvim
clear
cd ..
ls
cd retail-platform-mono
clear
cd ..
cd ..
yarn dlx create-turbo@latest
pnpm run e
clear
clera
clear
clear
clear
nvim
gf
git pull
git pull origin master
nvim
clera
clear
pnpm run e
nvim
nvim
cleqr
clear
clear
cd retail
cd ..
ls
rm -rf retail
cd reatil
cd retail
clear
gf
clear
git checkout -b feature/yarn
corepack enable
yarn init -2
cd retail-platform-mono
yarn install
cd clienteling
yarn run dev
gitc
clear
nvim
clear
npm i
cd ciente
cd cliente
clear
clear
gf
cler
clear
clera
clear
gf
git pull origin develo
clear
cd retail
cd ..
cd wiki
ls
gf
git pull
gf
git pull origin develop
nvim
npm run build
npm run build
clear
cd lib
npm publish
clear
cd ..
clear
nvim
cd retail
npm install
cd clienteling
npm run dev
clint project
clint login
npm run dev
nvim
git push master
git push
nvim
nvim
npm run dev
gf
nvim
clear
clear
nvim
clear
gitc
git checkout feature/newcontact
gf
git pull origin develop
nvim
clear
clear
gitc
clear
tmux detach
tmux
gitd
git checkout develop
git branch -D MC/feature/newcontact
gitd
nvim
source ~/.config/nushell/config.nu
gitD
gitd
gitD
gitc
nvim
git reset --hard HEAD
nvim
clear
git pull
clear
npm run dev
npm i
npm run dev
gitc
nvim
gitc
nvim
gitc
nvim
gitc
nvim
gitc
nvim
gitc
vim
gitc
nvim
vim
gitc
npm run dev
git checkout feature/new_contact_fix
git checkout -b feature/new_contact_fix
git push -u 
clear
nvim
clear
gf
gitc
gf
clear
git pull
gitc
clear
gitc
npm i
cd retail
npm i
cd clienteling
clera
clear
npm run dev
clear
gitD
clear
npm run build
clear
npm install -g eas-cli<\n>
npm run build
clear
cd retail
nvim
clear
cd clienteling
npm run dev
gf
pnpm run e
nvim
clear
gf
git pull
clera
clear
cleaf
clear
nvim
cd retail
clear
nvim
cd apps
nvim
cd ..
turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
nvim
npm i
cd clienteling
npx expo-doctor
cd ..
npx expo-doctor
nvim
cd presenter
npx expo-doctor
nvim
cd retail
npm i
npm run dev
cd retail
turbo run dev --filter=my-clienteling
cd clienteling
npm run dev
npm list lowercase-keys<\n>
cd packages/cli
npm run build
clint login
cd retail
npm i
turbo run dev --filter=my-clienteling
cd clienteling
npx expo start
clear
nvim
cd retail
npm i
cd client
npx expo start
npm run dev
cd packages/cli
nvim
clear
cd cliente
npm run dev
corepack disable
cd retail
npm i
cd clienteling
cd retail
turbo run dev --filter=my-clienteling
cd packages/cli
nvim
cd retail
npm i
turbo run dev --filter=my-clienteling
cd packages/cli
nvim
cd retail
npm i
turbo run dev --filter=my-clienteling
clear
turbo run dev --filter=my-clienteling
clear
cd clienteling
npm run build
clear
nvim
npx expo prebuild --platform ios
nvim
cd ..
cd 
cd retail
cd ..
ls
cd clienteloing
cd clienteling
ls
cd myclienteling-app-mobile
gitc
clear
cd retail
nvim
npm i
cd clienteling
npx expo prebuild --platform ios
nvim
npm run build
nvim
npm run build
npm install -g eas-cli<\n>
npm run build
clear
npm run dev
cleare
clear
cd retail
turbo clean
rm -rf package-lock.json
rm -rf node_modules
npm i
cd clienteling
cd retail
nvim
turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
npm run dev
cd clienteling
npm run dev
cd retail
npm i
cd clienteling
npm run dev
clear
gf
git pull
git add apps/native/my-clienteling/src/config/envs.json
nvim
git pull
clear
gf
cd retail
git checkout feate/merge
git checkout -b feature/expo_update
git branch list
git branch
git branch -D list
clear
gitc
git checkout -b feature/307-ui-components-library
gitc
nvim
gitc
git merge feature/expo_update
clear
nvim
git pull
nvim
gitc
gitD
git checkout -b feature/307-ui-components-library
nvim
gitc
nvim
gitc
gitd
git pull origin feature/307-ui-components-library
clear
npm i
nvim
npm i
nvim
npm i
clear
npm i
clear
npm i
cd packages/ui
npm run dev
nvim
npm run start
clear
:qa
cd retail
nvim
cd packages/ui
npm run start
clear
cd retial
cd retail
gf
git merge develop
nvim
git merge develop
nvim
clear
gf
git pull origin feature/newcontact
clear
git pull origin develop
clear
gitc
git merge feature/expo_update
clear
git push
clear
gf
clear
nvim
clear
cd retail
clear
cd cliente
cd clinteling
cd clieneling
cd clienteling
clear
clear
gf
clear
nvim
clear
nvim
clear
gf
git pull
nvim
npm run test:l-r
clear
npm run test:l-r
clear
clear
nvim
gitc
clear
npm run dev
gf
nvim
clear
clear
gd
gf
clear
gf
git pull origin master
npm run test:l-r
npm run test:assisted-sales
npm run test:l-r
git add .
nvim
clear
nvim
cd retail
nvim
gf
git pull
clear
git checkout -b feature/313-icon-theme
cd retail
cd packages
nvim
npm i
nvim
nvim
cd packages/ui
npm run dev
npm run start
node src/scripts/index.js
npm run build:stories
clear
npm rund ev
npm rund dev
npm run dev
cd retail
nvim
cd packages/ui
cd retail
nvim
npm i
cd packages/ui
npm run dev
gf
clear
cd retail
npm i
cd packages/ui
npm run check
cd retail
npm i
nvim
npm i
cd clienteling
npm run de
npm run dev
clear
nvim
npm run dev
clear
cd retail
nvim
nvim
clear
gf
git pull origin feature/ui-enchantments
clear
cd packages/ui
nvim
clear
npm run build
clear
npm run dev
clear
cd clienteling
npm run build
npm install -g eas-cli
nvim
cd clienteling
nvim
clear
clear
cd packages/ui
cd packages/ui
cd clienteling
npm run build
clear
nvim
cd packages/ui
clearw
clear
cd packages/ui
nvim 
cd ..
npm run dev
vim
cd retail 
npm i
cd packages/ui
npm run dev
clear
gf
git pull origin feature/ui-enchantments
nvim
gitc
git checkout origin feature/enchantments
git checkout feature/enchantments
git checkout origin feature/enchantments
git checkout origin feature/ui-enchantments
git checkout feature/ui-enchantments
git merge feature/313-icon-theme
gitc
gf
git pull origin feature/ui-enchantments
clear
gitc
git push
nvim
npm run dev
npm rund dev
npm run dev
nvim
nvim
git checkout feature/ui-components-update
clear
git merge feature/313-icon-theme
clear
git merge feature/ui-enchanments
gitc
git merge feature/ui-enchantments
git push
clear
git push
clear
gitc
git merge feature/ui-enchantments
clear
git push
clear
cd clienteling
npm run dev
cd ui
npm i
cd retail
npm i
cd my-clienteling
npm i
cd retail 
npm i
cd packages/ui
nvim
npm run dev
cd retail
npm i
cd packages/ui
npm run dev
clear
vim
npm i
cd reatil
cd retail
npm run dev
npm i
nvim
npx lint-staged
nvim
vim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
gf
nvim
clear
nvim
gitc
git pull
nvim
gitc
git push
clear
clear
cd packages/ui
clear
cd retail
clear
gf
nvim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
nvim
clear
gitc
git pull
gf
git pull
git pull origin feature/ui-components-update
clear
git pull
nvim
git pull
nvim
git pull
git pull origin feature/UI-components-update
nvim
git merge develop
nvim
git push origin feature/UI-components-update
clear
nvium
nvi
nvim
gitc
git pull origin feature/ui-components-update
git merge feature/ui-components-update
git push
clear
gitc
gitd
git checkout feature/UI-components-update
git merge develop
clear
git merge develop
git push
clear
nvim
nvim
cd packages/ui
nvim
npm run dev
clear
gf
clear
gitc
git pull
clear
gf
clear
nvim
clear
npm run dev
gf
clear
gf
git pull
clear
nvim
cd retail
nvim
cd ui
clear
nvim
clear
cd clienteling
cd packages/ui
gf
git pull
cd clienteling
npm run dev
clear
gf
gitc
clear
gitc
git merge develop
clear
git push
clear
gitc
git pull origin feature/UI-components-update
clear
git push
gitd
clear
npm run dev
gf
git pull
clear
cd packages/ui
npm run dev
gf
git pull
nvim
git pull
clear
npm run build
clear
gf
git pull
nvim
npm run build
clear
nvim
git checkout -b feature/314-product-ui
nvim
nvim
gf
git pull develop
git pull origin develop
clear
npx lint-staged
cd retail
npx lint-staged
git commit --amend
git push
fuck
git push -& origin feature/314-product-ui
git push -u origin feature/314-product-ui
clear
nvim
clear
cd packages/ui
nvim
cd ..
nvim
cd retail
nvim
cd presenter
nvim
cd clienteling
nvim
clear
nvim
gf
gitc
git merge feature/314-product-ui
git push
clear
gitc
clear
git merge develop
clear
npm run dev
clear
clear
gf
clear
git pull
gf
git pull
clear
npm ru n dev
nvim
gf
git pull
git pull origin develop
clear
cd packages/ui
nvim
npx lint-staged
nvim
gitc
git pull
git pull origin feature/314-product-ui
git push
gitc
clear
gf
clear
nvim
cd reatil
cd retail
npm i
gf
clearr
clear
gitc
git merge feature/314-product-ui
gf
git push
clear
gitc
clear
gitd
clear
gf
git pull origin develop
clear
gitc
git pull
clear
git merge feature/314-product-ui
git push
clear
gitc
clearr
clear
nvim
gitc
nvim
clear
gitc
clear
clear
gf
gitc
git merge feature/314-product-ui
git push
gitc
clear
gitc
clear
npx expo install @react-navigation/drawer
clear
nvim
npx expo install @react-navigation/drawer
clear
vim
nvim
cd nvim
clear
gf
git pull
nvim
git pull
nvim
clearr
gitc
nvim
gitc
gf
git push
gitc
git merge develop
clear
git push
gitc
nvim
gitc
gitd
clear
npm run build
clear
gf
git pull
nvim
gitd
gitc
git pull
git push
clear
gitc
git merge feature/314-product-ui
clea
clear
gitd
clear
git checkout -b feature/324-drawer
clear
npm run dev
clear
nvim
cd retail
turbo clean
rm -rf package-lock.json
rm -rf node_modules
cd retail
npm i
turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
clear
npm run dev
clear
npm run dev
cd retail
npm i
cd clienteling
nvim
cd retail
nvim
clear
npm i
cd clienteling
gf
git pull develop
git pull origin develop
clear
nvim
clear
gf
git push
fuck
git push -u origin feature/324-drawer
clear
gf
gitc
git merge feature/324-drawer
git push
clear
gf
git pull
clear
gitd
clear
gitc
clear
gf
npm run dev
gf
git pull
clear
git push
cd retail
npm i
clear
ggf
gf
git push
clear
cd bulk
gf
git pull
nvim
npm i
cd ..
rm -rf bulk-start-db
git clone git@github.com:Project-FE-GPA/bulk-starter-db.git
ls
rm -rf bulk-starter-db
ls
git clone git@github.com:Project-FE-GPA/bulk-starter-db.git
clear
cd buld
cd bulk
gitc
git checkout develop
clea
clear
npm i
npm link
nvim
rp generate-localization
fnm list
fnm install "v18"
fnm use 18
clear
rp generate-localization
npm i
rp generate-localization
npm install -D core-js/shim
npm install core-js
rp generate-localization
fnm use default
clear
npm i
rp generate-localization
nvim
cd bulk
rp generate-localization
clear
clear
clear
clear
gf
nvim
clear
nvim
gf
git push
nvim
gf
git pull
clear
rp generate-localization
git pull
clear
rp generate-localization
clear
nvim
clear
npm run dev
nvim
gf
clear
gitc
gf
git checkout feature/mc-clients-page
gf
git pull
nvim
gf
git pull origin develop
gitc
npm run dev
clear
ncim
vim
clear
cleaer
clear
gf
clear
cd retail
npm i
gitc
cldeaf
clear
gf
clear
nvim
gf
gitc
git pull
npm i
gf
git pull
clear
npm run build
nvim
npm run build
cd lib
npm publish
clear
cd engineering
ls
cd clienteling
ls
cd myclienteling
cd engineering
cd clienteling
cd myclienteling
clear
clear
npm run dev
npm run dev
gf
git pull
npm run dev
tmux attach -t work
clear
clear
nvim
clear
gf
git pull
cd ..
gf
clear
gf
npm run build
cd lib
npm publish
npm i
cd ..
npm run build
cd lib
npm p
npm pu
npx lint-staged
git add .
clear
nvim
cd myclienteling
cd ..
ls
cd myclienteling-app-services
gf
cd myclienteling-app-services
npm run dev
clear
npm run dev
cd myclienteling-app-services
cd ..
rm -rf myclienteling-app-services
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-services.git
cd myclienteling-app-services
git checkout develop
vni
nvim
npm publish
nvim
npm publish
clear
npm i
npm run dev
nvim
npm publish
npm i
gf
clear
git pull
npm i
cd clienteling
nvim
clear
gitc
nvim
git push
clear
gitc
git merge develop
nvim
gitc
git merge feature/mc-clients-page
git push
clear
npm run dev
clear
nvim
npm publish
npm run dev
npm i
npm run build_wave
clear
clear
nvim
clear
npmi
npm i
cd retail
npm i
clear
gf
git pull develop
git pull origin develop
nvim
cd ..
nvim
clear
cd ebsn
clear
npm run build
cd lib
npm publish
cd ..
cd clienteling
nvi
cd retail
npm i
clear
npm run build_wave
vim
nvim
npm run build
nvim
npm run build
npm run dev
npm run dev
clear
npm run dev
cd clienteling
clint project
nvim
git checkout release
git checkout -b release
nvim
gitc
nvim
npm run build
npm run dev
clea
npm install -g eas-cli
npm run dev
cd clienteling
npm run build
clear
npm run dev
clear
rp generate-localization
nvim
clear
gf
npx expo-doctor@latest
cd clienteling
nvim
cd retail
npm i
npx expo-doctor@latest
nvim
cd retial
cd retail
nvim
vim
vim
nvim
npm i
clear
npm run dev
clear
npm run dev
clear
npm run build_wave
cd clienteling
clear
nvim
gf
git pull
clear
cd retail
npm i
clear
vim
nvim
clear
npm run build
nvim
clear
cd native
vim
cd retail
npm i
npm run build
clear
cd clienteling
clear
gf
clear
nvim
npm run build
nvim
npm run build
cd retail
npm i
npm run build
nvim
gf
clear
gf
clear
gf
git pull
clear
gf
git pull
npm i
cd clienteling
npm run update
nvim
clear
npm run dev
npm run build_wave
clear
npm run build_wave
vim
npm run dev
npm run build_wave
nvim
clear
clear
nvim
clear
nvim
gf
nvi
nm run dev
npx lint-staged
vim
clear
clear
cd retail
clear
npm run build_wave
clear
cd packages/ui
nvim
cd retail
gf
gitc
git checkout test
git merge develop
git push
clear
gitc
npm run build_wave
gf
npm run dev
npm run build_wave
npm run build
cd clienteling
cd retail
npx turbo build --filter=my-clienteling
cd clienteling
npm run build
clear
gf
clear
vim
gf
git pull
clear
rp generate-localization
gf
git pull origin develop
git pull origin master
gf
npm run build
npm run update
clear
gf
npm run update
npm run dev
npm run dev
c;ear
clear
clear
gf
clear
npm run build
npm install -g eas-cli
npm run build
clear
cd retail
npm run
npm install
cd clienteling
npm run build
ls
cd cli
npx eas build --platform ios --development_client ios --clear-cache
cd retail
turbo dev --filter=my-clienteling
clear
cd clienteling
npm run build
nvim
cd retail
turbo dev --filter=my-clienteling
clear
cd clienteling
clear
gf
nvim
npm run build
cd lib
npm publish
cd ..
cd retail
npm i
clear
clear
nvim
clear
nvim
gf
nvim
clear
npm run dev
npm run build_wave
clear
vim
clear
npm run dev
clear
gf
clear
npm run build_wave
npm run build
cd lib
npm publish
clear
npm i
nvim
npm run dev
nvim
npm run build_wave
cd myclienteling-app-services
npm run dev
npm run build_wave
gitc
git merge develop
git push
clear
gitc
clear
cd myclienteling-app-mobile
clear
cd myclienteling-app-services
npm run build_wave
nvim
gf
npm run build
cd lib
npm publish
gf
git pull
cd ..
npm run build
cd lib
npm publish
cd ..
vim
rp generate-localization
nvim
gf
git pull
npm run test test:assisted-sales
npm run test:assisted-sales
clear
npm run test:assisted-sales
clear
nvim
npm run build
cd lib
npm publish
cd retail
npm i
cd bulk
clear
npm run build
cd ebsn
npm run build
c dlib
cd lib
npm publish
cd ..
npm run build
cd lib
npm publish
cd ..
npm i
gf
git checkout feature/mc-clients-wishlist
gf
git pull
vim
git checkout feature/mc-clients-detail
gf
git pull
clear
rp generate-localization
nvim
clear
clear
cd ..
clear
cd clienteling
source ~/.config/nushell/config.nu
cd ..
z --version
git -V
git --version
npm run dev
clear
clear
cd clienteling
cd retail
clera
clear
cd 
cd documents
ls
cd projects
ls
rm -rf hackethon
mkdir cheshire-cat-ai
cd cheshire-cat-ai
touch compose.yml
vim
docker --version
docker compose up
gh copilot explain "is the docker daemon running? error"
docker compose up
docker compose up -d
ollama run deepseek-r1:32b
cd cheshire-cat-ai
clear
docker exec ollama_cat ollama pull mistral:7b-instruct-q2 k
docker exec cheshire-cat-ai ollama pull mistral:7b-instruct-q2 k
docker exec cheshire_cat_core ollama pull mistral:7b-instruct-q2 k
clear
ollama list
clear
docker network ls<\n>
ollama pull codellama:13b
clear
ollama list
docker
ip -4 route show default | awk '{print $3}'<\n>
docker exec cheshire_cat_core ollama
ollama
ollama serve
ollama ps
ollama show
ollama list
ollama show codellama
ollama show codellama:13b
gf
git pull
vim
cd packages/ui
vim
gitc
git pull
cd clienteling
clear
cd projects
ls
npx create-next-app@latest
ls
npx create-next-app@latest
cd gino-moletta-site
cd gino
npm install frame-motion
npm install framer-motion
npm run dev
npm install motion
nvim
npm run dev
cd retail
npm i
cd retail
npm i
cd retail
npm i
npm run test:mock-marketing
clear
cd
vim ssh
ls
vim .ssh
ssh-keygen -t ed25519 -C "federico.reghini@eng.it"
vim .ssh
ssh-keygen -t ed25519 -C "federico.reghini@eng.it"
gf
git pull
npm run test:mock-activity
clear
npm run build
cd lib
npm publish
clear
nvim
clear
nvim
clear
nvim
rp generate-localization
cd ..
vim
nvim
rp generate-localization
vim
rp generate-localization
gf
clear
npm run dev
clear
npm run dev
docker compose up
docker compose up -d
clear
ollama pull nomic-embed-text
clear
docker compose up -d
nm
ollama pull nomic-embed-text
docker
ollama list
ollama serve
curl http://localhost:11434/api/tags<\n>
docker compose build
docker compose up 
docker compose up -d
ollama list
docker exec ollama_cat ollama pull nomic-embed-text:latest
ollama run llama3
ollama list
nvim
nvim
npm run test:mock-activity
npm run build
cd lib
npm publish
cd ..
clera
gf
gitc
git pull
nvim
k
vim
cd retail
cd packages/ui
nvim
gf
git pull
nvim
gitc
cd clienteling
nvim
gf
git pull
npm i
vim
gitc
git pull
git merge develop
vim
npm i
cd bulk
rp generate-localization
vim
nvim
gitc
gitd
gf
git pull
npm i
git checkout -b feature/328-cart
clear
npm run dev
vim
clear
vim
gf
git checkout feature/mc-clients-orders
clera
clear
gitc
gitd
clear
gf
gitc
git pull
gitc
git merge develop
clear
npm run dev
npm run update
npm run update
vim
vim
npm run dev
npm run update
gf
git checkout feature/mc-planner-calendar<\n>
gf
npm run dev
cd retail
npm i
npx turbo build --filter=my-clienteling
cd clienteling
npm run dev
cd packages/ui
vim
npx turbo build --filter=my-clienteling
cd clienteling
clear
clear
vim
git checkout feature/mc-planner-agenda
nvim
git checkout feature/mc-planner-agenda
clear
vim
gf
git pull
vim
gitc
git pull origin develop
clear
vium
npm run test:mock-activity
gf
git pull
npm run build
cd lib
npm publish
cd ..
clear
vim
clear
npm run build
cd lib
npm publish
cd ..
nvim
clear
clear
nvim
clear
nvim
rp generate-localization
clear
cd packages/ui
vim
rp generate-localization
cd packages/ui
npm run dev
npm run dev
clear
cd myclienteling-app-mobile
npm run dev
cd myclienteling-app-services
npm run build_wave
nvim
clear
c;ea
clear
clear
rp generate-localization
cd lib
npm publish
cd ..
cd retail
npm i
rp generate-localization
vim
gf
clear
gf
git checkout feature/mc-planner-nav-button
nvim
gitc
clear
nvim
clear
npm run dev
clear
gf
rp generate-localization
gh copilot explain "how to set a project config for git"
cd retail
vim
gf
cd clienteling
vim
cd retail
nvim
cd clienteling
vim
clear
cd retail
npm i
gf
cd clienteling
vim
clear
rp generate-localization
nvim
gf
gitc
git pul
git pull
clear
gitc
git merge develop
npm run dev
npm i
cd retail
npm i
cd clienteling
clear
vim
gitc
git pull
cd retail
npm i
cd clienteling
vim
gitc
clear
npm run dev
clear
cd myclienteling-app-services
vim
npm run publish
npm publish
cd myclienteling-app-mobile
nvi
vim
npm i
npm run build_wave
nvim
clear
gitc
vim
gf
clear
gf
git config user.email
git config user.name
gf
cd retail
cd
vim
gf
clear
git pull
vim .ssh
gf
clear
git pull
vim
vim
git fetch
vim .ssh
git config user.email
cd retail
git config user.email
cd myclienteling-app-mobile
cd myclienteling-app-services
npm run dev
npm run build_wave
npm run dev
npm run build_wave
vim
clear
clear
gitc
vim
git fetch
git pull
vim
cd clienteling
vim
git reset --hard HEAD~1<\n>
git push --forse-with-lease
git push --force-with-lease
clear
vim
cd retail
npm i
vim
cd
vim
cd myclienteling-app-mobile
npm run build_wave
gitc
git pull
cd retail
npm i
cd clienteling
npm run dev
vim
nvim
clear
npm run dev
clear
gitc
nvim
cd retail
npm i
clear
vim
npm run build
cd lib 
vim
cd ..
vim
npm run build
cd lib
npm publish
cd ..
vim
gitc
vim
gitc
git pull
git fetch
git pull
gitc
git pull
gitc
git merge develop
nvim
git merge --abort<\n>
vim
git merge develop
cd retail
npm i
vim
npm run build
cd lib
npm publish
cd ..
np i
cd retail
npm i
vim
clear
vim
gitc
gitd
git fetch
git pull origin develop
cd retail
npm i
vim
gitc
git fetc
gf
git puyll
git pull
gitd
clear
cd clienteling
npm run dev
npm run update
ls
cd downloads
ls
npm install -g gh
gh copilot explain "how to set a project config for git"
clear
ls
ls | where name =~ cv
ls | where name =~ cv -i
ls | where name =~ cv 
ls | where name =~ cv | each { cp $it.name ~/Desktop/federico }
ls | where name =~ cv | each {|file| cp $file.name ~/Desktop/federico }
cd desktop
ls
cd federico
ls
cd desktop
ls
ls | where name =~ CV
cd downloads
ls | where name =~ CV
ls | where name =~ CV | each {|file| cp  $file.name ~/Desktop/federico }
cd federico
ls
cd downloads
ls | where name =~ cv -i | each {|file| cp  $file.name ~/Desktop/federico }
ls | where name =~ cv | each {|file| rm  $file.name }
ls | where name =~ CV | each {|file| rm  $file.name }
ls
clear
ks
ls
cd desktop
ls
mv Sprints_analysis.numbers ~/Desktop/federico
ls
cd federico
ls
clear
gf
vim
npm run build
cd lib
npm publish
cd ..
clear
vim
npm run build
cd lib
npm publish
cd lib
vim
cd lib
cd ll
cd ebsn
vim
gf
gitc checkout -b  feature/381-label
git checkout -b  feature/381-label
git push
git push -u origin feature/381-label
gh pr create --draft --title "My Draft PR" --body "This is a work in progress"<\n>
clear
rp generate-localization
vim
gitc
git merge feature/381-label
git push
vim
clear
gitd
gitc
git checkout -b  feature/382-barcode
vim
gf
git pull origin develop
gitc
git merge feature/381-label
git pull
git merge feature/382-barcode
git push
gitd
git checkout -b  feature/380-search
vim
gitc
gf
git pull
git checkout feature/383-documentation-calendar
git pull origin develop
clear
gitc
gf
git pull 
clear
gitc
git pull origin develop
gitc
git merge feature/380-search
git push
vim
clear
gf
git checkout -b feature/394-more-button
clear
vim
gitc
gf
git pull
clear
git checkout feature/379-add-product-from-wishlist
git pull origin develop
vim
gitc
git pull origin develop
clear
vim
gitc
git merge feature/394-more-button
git push
gf
clear
git checkout feature/395
git checkout -b feature/395-product
git commit --amend -m "feat: new ClientSearch component for handle advanced search #395"
clear
vim
clear
vim
gf
git pull origin develop
clear
gitc
git pull
git merge feature/395-product
git push
clear
gf
clear
gf
git checkout feature/378-loader-remove-item-wishlist
git checkout feature/390-netsales-skeleton
vim
gitc
gf
git pull
gitd
git reflog
vim
gf
clear
gitd
gitc
gf
vim
git checkout feature/392
git checkout -b feature/392
vim
gf
gitc
git checkout feature/371-newclient-registration
cd retail
npm i
cd clienteling
npm run tes:user
npm run test:user
gf
git pull
vim
gitc
clear
git checkout feature/403-totalcountview-format
gitc
gf
git pull origin develop
clera
vim
git push
fuck
thefuck
git push
thefuck
git push -u origin feature/392
npm run dev
npx expo start
gf
git pull
nvim
git pull
npm run start
vim
vim
npm run build
cd lib
npm publish
cd ..
clear
cd reatil
cd retail
npm i
npm run build
cd lib
npm publish
cd ..
npm run dev
gitc
gf
git pull
rp generate-localization
gitc
gitc
vim
vim
nvim
gitc
clear
vim
gf
git pull origin develop
cd retail
npm i
cd clienteling
vim
gf
git pull
git push
m
clear
npm run build
cd lib
npm publish
cd retail
cd ..
npm i
cd packages/ui
gf
git pull
vim
git checkout feature/407-newclient-disclaimers
gf
git pull origin develop
clear
git push
gitc
clear
vim
gf
git pull origin develop
git add .
git commit -m "feat: refactoring category block for product #411<\n>- added productSlider<\n>- refactored bannerslider<\n>close #411"
clear
gitc
gf
git pull
gitc
git merge develop
git pull origin develop
git push
gitc
git merge feature/392
git push
clear
gitc
rp generate-localization
vim
clear
npm run dev
clear
git merge feature/392
clear
gitd
clear
gitd
clear
git checkout -b feature/392-facets
clear
npm run build
cd lib
npm publish
cd ..
npm run build
cd lib
npm publish
cd ..
vim
gf
git pull develop
git pull origin develop
vim
clear
vim .config
vim
vim .config
vim
clear
nvim
git checkout feature/407-newclient-registration
git checkout origin feature/407-newclient-registration
gf
git checkout feature/407-newclient-registration
clear
npm run build
cd lib
npm publish
cd ..
npm i
nvim
npm run build
cd lib
npm publish
cd ..
npm i
gf
git pull origin develop
vim
clear
gitc
git pull
git merge feature/407-newclient-registration
git push
clear
vim
git checkout feature/415-client-card-component
git pull origin develop
vim
npm i
git checkout feature/417-update-user-disclaimer
git pull origin develop
nvim
vim
clear
nvim
gitc
git pull origin develop
npm run build
c dlib
cd lib
npm publish
cd ..
rp generate-localization
vim
git push -u origin feature/392-facets
cd retail
gf
git pull origin develop
vim
git pull origin develop
gitc
git merge feature/392-facets
git push
clear
gitc
gf
git pull
git pull origin develop
clear
gitc
gitd
clear
gf
gitpull
git pull
clear
vim
clear
clear
vim
clear
git fetch
git pull
vim
gf
git pull
clear
vim
clear
vim
gf
clear
gf
git pull 
clear
npm run build
cd lib
npm publish
cd ..
npm i
rp generate-localization
cd myclienteling-app-mobile
npm run dev
npm run build_wave
nvim
gf
git pull
cd clienteling
npm run update
gf
git pull 
npx lint-staged
vim
git checkout feature/416-pagination-refinement
git merge develop
vim
git push
gitc
gf
git pull
clear
gitd
clear
npm run update
clear
clear
npm run update
cd retail
npm i
cd clienteling
npm run update
npm run dev
tmux attach -t work
gd
gf
git pull
clear
clear
npm run dev
npm run dev
clear
npm run dev
clint project
npm run build_wave
clear
npm run build_wave
eas init
npm install -g eas-cli
eas init
clear
eas logout
eas login
clear
npm run build_wave
eas whoami
npm run build_wave
npm run update
vim
clear
npm run update
npm run build_wave
vim
gf
git pull
vim
clear
gf
clear
gf
git checkout feature/431-date-time-selection
cd retail
npm i
npm run build
clear
npm install -g eas-cli
npm install -g eas-cli --force<\n>
fnm
fnm list
rm -rf /Users/federicoreghini/.local/share/fnm/node-versions/v20.17.0/installation/lib/node_modules/eas-cli<\n>
npm install -g eas-cli --force<\n>
npm install -g eas-cli 
rm -rf /Users/federicoreghini/.local/share/fnm/node-versions/v20.17.0/installation/lib/node_modules/eas-cli<\n>
npm install -g eas-cli 
clear
npm run build
clear
gf
npm run build
clear
clear
clear
clear
vim
gf
npm run build
clear
cd packages
vim
cd retail
clear
npm run dev
docker compose up
gf
vim
git pull;
clear
gitc
git pull
gf
clear
npm run build
clear
npm i
vim packages/servixe
cd packages
vim
cd retail
npm i
cd clienteling
npm run build
cd services
vim
cd retail
cd packages
vim
cd ..
vim
npm i
cd clienteling
npm run build
vim
cd lib
cd retail
vim
npm i
vim
npm i
vim
cd packages/services
npm run build
vim
npm run build
npm publish
cd retail
npm i
cd packages/services
clear
cd retail
vim
npm i
cd packages/services
npm run build
npm publish
clear
cd retail
npm i
vim
npm i
vim
npm oi
npm i
clear
cd cl
npm run build
eas login
npm run build
clear
vim
cd retail
vim
cd cl
npm run build
vim
gtc
gitc
gf
git pull origin develop
cd retail
npm i
cd cl
npm run build
cd retail
vim
clear
vim
cd cl
npm run build
clear
vim
gitc
git merge feature/431-date-time-selection
clear
git push
clear
npm run dev
clint project
npm run dev
clear
nvim
gf
git pull
vim
npm install -g eas-cli 
rm -rf /Users/federicoreghini/.local/share/fnm/node-versions/v20.17.0/installation/lib/node_modules/eas-cli<\n>
npm install -g eas-cli 
npm run build
clear
npm run build
clear
cd myclienteling-app-mobile
cd ..
ls
cd
cd documents
ls
cd beije
ls
cd engineering
ls
cd clienteling
ls
cd myclienteling-app-services
vim
npm publish
vim
npm publish
vi
vim
cd retail
vim
npm publish
vim
npm i
vim
npm publish
vim
vim
npm publish
vim
npm publish
vim
npm publish
vim
npm publish
vim
npm publish
vim
npm publish
vim
npml
npm publish
vim
cd ..
git clone https://github.com/EngineeringRetailPlatform-Champion/myclienteling-app-components.git
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-components.git
https://github.com/EngineeringRetailPlatform-Champion/myclienteling-app-components.git
git clone https://github.com/EngineeringRetailPlatform-Champion/myclienteling-app-components.git
cd myclienteling-app-services
vim
npm publish
vim
npm publish
clear
vim
git push
vim
git push
vim
cd ..
cd test
cd ..
mkdir test/
cd test
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-services.git
git config user.email
cd ..
vim
ls
cd ..
ls
cd clienteling
ls
cd myclienteling-app-services
vim
git config -g user.email "federico.reghini@eng.it"
git config --global user.email "federico.reghini@eng.it"
git config --global user.name "federico-reghini-eng"
git config user.email
clear
git push
vi
vim
git push
vim
npm publish
git push
clear
vim
npm publish
clear
cd ..
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-components.git
ls
cd myclienteling-app-components
vim
git init
vim
git fetch
vim
git fetch
git checkout develop
vim
git checkout develop
vim
git checkout develop
clear
vim
clear
eas credentails
eas config
clear
npm run build
vim
cd myclienteling-app-mobile
vim
npm run ios-ts
vim
npm run ios-ts
npm i
gf
git pull
vim
git pull
nvim
npm i
npm run ios-tf
npm run build_wave
clear
vim
git add .
vim
clint project
npm run dev
claer
clear
vim
clear
npm run build
clera
clear
vim
cd myclienteling-app-services
vim
npm publish
npm run dev
npm run teest
npm run test
cd .config
cd nvim
ls
cd .config
vim
pip -v
echo $env.PATH<\n>
python -m pip --version
pip -v
wich python
which python
which python3
cd .config/
vim
cd .config
pip --version
python3 --version
python --version
which python
source ~/.config/nushell/config.nu
pip --version
python --version
python -m site --user-base<\n>
source ~/.config/nushell/config.nu
pip --version
source ~/.config/nushell/config.nu
pip --version
python -m site --user-base<\n>
ls /Users/federicoreghini/Library/Python/3.13/bin<\n>
ls /Users/federicoreghini/Library/Python/3.13
ls /Users/federicoreghini/Library/Python
ls /Users/federicoreghini/Library/Python/3.9
which -a python python3 python2<\n>
python --version
brew list | grep python<\n>
brew uninstall --ignore-dependencies python
brew list | grep python<\n>
brew cleanup<\n>
which python<\n>which python3<\n>
sudo rm -rf /Library/Frameworks/Python.framework<\n>sudo rm -rf /Applications/Python*<\n>
which python<\n>which python3<\n>
sudo rm -rf /usr/bin/python3
which -a python python3 python2<\n>
brew install python<\n>
which python<\n>which python3<\n>
python --version
python3 --version
pip3 --version
pip --version
which pip3
which pip
source ~/.config/nushell/config.nu
pip --version
clear
vim
nvim
vim
python -m venv ~/.venvs/nvim<\n>
source ~/.venvs/nvim/bin/activate<\n>
vim
cd gino
git remote add origin git@github.com:federicoReghini/moletta-gino-site.git
:qa
vim
git remote add origin git@github.com:federicoReghini/moletta-gino-site.git
clear
cd 
cd .ssh
ls
vim
git add .
git push
git push -u origin main
cd gino
clear
cd gino
git add .
git commit -m "new images"
vim
npm run dev
clear
vim
vim
cd .config
vim
source ~/.config/nushell/env.nu
clear
source ~/.config/nushell/config.nu
clear
npm run dev
npm i react-icons/fi
npm i react-icons
cd example
cd gino
source ~/.config/nushell/config.nu
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd nushell
vim
source ~/.config/nushell/config.nu
vim
source ~/.config/nushell/config.nu
clear
cd gino
clear
gf
npm run build
cd lib
npm publish
cd ..
npm i
gf
git pull
clear
vim
npm run dev
npm i react-swipable
npm i react-swipeable
npm run dev
npm i keen-slider
cd toto
cd ..
rm -rf toto
npx create-next-app@latest toto-site --typescript --tailwind --eslint --app
cd toto
ls
cd toto-site
cd toto
cd toto-site
cd projects
ls
cd toto-site
clear
npm install motion
npx tailwindcss init --ts<\n>
npm run dev
npm i @tailwindcss/aspect-ratio react-intersection-observer
npm run dev
npm run dev
docl
docker compose up
ping google.com
docker exec -it <container_id> bash
docker exec -it acbe9ad82214cac8af740e20253ddce9ca7796e372adc2a8f697a696edaba3d3 bash
clear
npx turbo build --filter=cli
npx turbo build --filter=cli
vim
npx turbo build --filter=@clienteling/cli
clint login
clint login
vim
cd ..
cd clienteling
npx turbo dev --filter=my-clienteling
c.ear
clear
clear
npm run dev
npm run dev
cd retail
npx turbo dev --filter=my-clienteling
eas device:add --platform ios --udid 00008130-0006313811E2001C
eas device
eas device:create --platform ios --udid 00008130-0006313811E2001C
cd clienteling
eas device:create --platform ios --udid 00008130-0006313811E2001C
npm run build
vim
gf
git pull
vim
git pull
vim
clear
gf
git pull origin feature/444-appointment-page-refactor
git push
clear
vim
clear
vim
npm run build
eas build --platform ios --profile development_client_simulator
docker compose up
docker compose down
docker compose up
vim
docker compose down
docker compose up
docker compose up -d
clear
docker compose logs -f
docker compose down
docker compose up -d
docker compose logs -f
clear
vim
gf
git push
git checkout feature/minor-fixes
git merge develop
vim
clear
gitc
gf
git pull
clear
rp generate-localization
clear
npm run dev
npm i
cd ui
vim
npm run dev
npm run build
npm run dev
gf
clear
vim
npm run build
npm run dev
npx tailwindcss init -p<\n>
npm run dev
cd toto
npm install tailwindcss @tailwindcss/postcss postcss
npm install tailwindcss @tailwindcss/postcss postcss
cd projects
ls
npx create-expo-module expo-skeleton-placeholder<\n>
cd expo-skeleton-placeholder
cd projects
cd expo-skeleton-placeholder
cd expo-skeleton
npm i expo-linear-gradient
vim
npm i
npm install
cd example
ls
npm run dev
npm run start
npx expo install react-native-reanimated
npm run start
vim
npm run start
cd ..
git init
git remote add origin git@github.com:federicoReghini/expo-skeleton-placeholder.git
vim
git add .
git commit -m "first commit"
git push
fuck,
git push --set-upstream origin main
git reset --soft HEAD~1
git config user.email "federicoreghini@gmail.com"
git config user.name "federicoReghini"
vim
git push origin <nome-del-branch> --force<\n>
git push origin main --force<\n>
clear
npm whoami
npm run build
npm publish
npm i
npm publish
npm publish --registry=https://npm.pkg.github.com
git remote add origin git@github.com:federicoReghini/expo-skeleton-placeh.git
vim
git remote add origin git@github.com:federicoReghini/expo-skeleton-placeh.git
npm publish --registry=https://npm.pkg.github.com
git add .
git push --set-upstream origin main
git commit -m "first commit"
git push
vim
git reset --soft HEAD~1<\n>
vim
git rm --cached .npmrc
vim
git reset --soft HEAD~1<\n>
clear
vim
npm publish
npm publish --registry=https://npm.pkg.github.com
vim
npm publish
npm i
npm publish
nvim
npm publish
clear
nvim
clear
npm run dev
vim
npm publish
vim
npm publish
vim
cd retail
npm i
cd ui
ls
vim
vim
cd retail
npm i
npm run dev
cd ui
cd example
vim
npm publish
vim
cd retail
npm i
cd ui
npm run dev
npm run start
vim
cd example
npm run start
clear
cd ..
vim
npm publish
npm run start
clear
cd ..
clear
vim
vi
gf
git pull
vim
npm run test:mock-activity
clear
gf
vim
npm run build
cd lib
npm publish
cd ..
clear
npm run test:mock-activity
clear
vim
clear
clear
npm run dev
clear
npm run dev
vim
cd ..
cd cli
clint login
npm run start
vim
npm run start
vim
npm run start
vim
cd retail
vim
npx turbo start --filter=my-clienteling
clear
nvim
clear
vim
cd lib
npm publish
cd ..
clear
npm i
vim
gf
git pull
npm i
clear
clear
cd packages/cli
vim
cd retail
git checkout feature/444-appointment-page-refactor
gf
git pull origin develop
nvim
vim
gitc
clear
git checkout feature/428-android-fix
gf
git pull origin develop
git push
clear
gitc
git checkout feature/447-skeleton-placeholder-substitution
npm i
cd ui
vim
cd retail
npm i
clear
vim
clear
git pull origin develop
vim
cd ui
vim
cd retail
clear
gitc
gf
git pull origin develop
git push
npm run start
clear
pip show requests
source ~/.config/nushell/config.nu
pip show requests
pip install requests
python -m venv venv<\n>
source venv/bin/activate<\n>
gf
git pull origin develop
git pull
git pull origin develop
clear
git push
clear
vim
cd
cd .config
activate_env
source ~/.config/nushell/config.nu
activate_env
activate_venv
source ~/.config/nushell/config.nu
activate_venv
python --version
which python
activate_venv
which python
which python3<\n>
$env.PATH = ($"($env.VIRTUAL_ENV)/bin" | prepend $env.PATH)<\n>
source ~/.config/nushell/config.nu
activate_venv
which python
overlay use  venv/bin/activate<\n>
virtualenv cheshire
pip install virtualenv<\n>
pip install virtualenv --break-system-packages<\n>
virtualenv cheshire
clear
which python
overlay use  venv/bin/activate.nu
overlay use  cheshire/bin/activate.nu
pip install requests pydantic cat<\n>
pip install requests pydantic
clear
vim
overlay use  cheshire/bin/activate.nu
docker compose up -d
gitc
git pull
npm i
clear
vim
clear
npm run build
clint login
cd cli
cd retail
cd packages/cli
vim
cd cli
clint logout
clint login
npm run build
clear
npx expo-doctor
npx expo check
npx expo-check
clear
npm run build
clear
vim
cd nvim
ls
vim
vim
clear
cd cheshire-cat-ai
clear
pip install requests pydantic
docker compose logs -f
clear
gf
vim
npm run test:mock-hractivity
nvim
clear
vim
gf
git checkout feature/450-mocked-planner-api
vin
vim
clear
gitc
clear
npm run ios-tf
vim
npm run ios-tf
npm install -g eas-cli 
sudo npm install -g eas-cli 
npm run ios-tf
vim
npm run ios-tf
vim
gf
gitc
clear
gitc
git pull
clear
vim
vm
vim
npm run ios-tf-prod
gitc
vim
gitc
vim
npm run ios-tf-prod
vim
git checkout release
git merge develop
npm i
npm run ios-tf-prod
vim
npm run dev
gitc
vim
gitd
gitD
git checkout production
vim
clear
cd myclienteling-app-mobile
npm run dev
clear
npm run ios-tf-prod
vim
clear
gitc
clear
npm run build_wave
clear
gitc
npm i
clear
c
clear
npm run ios-tf-prod
npm run dev
clear
gitc
vim
gitc
vim
npm i
npm run test:mock-hractivity
npm run ios-tf-prod
npm run build_wave
clear
clear
git checkout feature/450-mocked-planner-api
clear
vim
gf
git pull
clear
c;aer
clear
git merge develop
eas whoami
clear
gitc
git merge develop
clear
npm run ios-test-tf
npm i
gitc
vim
clear
gitc
vim
npm run ios-test-tf
npm run build_wave
clear
vim
clear
npm run dev
clear
cd nvim
vim
vim
clear
cd toto-site
ls
cd ..
ls
cd ..
ls
cd projects
ls
cd ../..
ls
cd projects
ls
cd toto-site
npm install embla-carousel-react<\n>
clear
tmux attach -t work
tmux detach
tmux
vim
vim
clear
cd clienteling
gitc
clear
gf
git pull
clear
clint project
npm run dev
npm run test:mock-hractivity
npm run  build
gf
cd lib
npm publish
cleaf
cd retail
npm i
cd ..
npm run  build
cd lib
npm publish
cd ..
npm run  build
cd lib
npm publish
npm i
cd ..
npm run test:mock-hractivity
npm run build_wave
npm run build
cd lib
npm publish
cd ..
gf
clear
clera
gf
git pull
clear
clint project
clear
nvim
clear
npm run test:mock-hractivity
npm run build
cd lib
npm publish
cd ..
npm i
cd ebsn
npm run test:mock-hractivity
npm run dev
vim
gf
vim
npm run build
cd lib
npm publish
cd ..
npm i
npm run test:mock-hractivity
npm run build
clear
npm run build
cd lib
npm publish
cd ..
clear
npm run build;
cd lib 
npm publish
cd ..
npm i
npm run dev
cd packages/ui
vim
cd retail
clear
vim
gitc
git checkout feature/455-update-planner-data
clear
claer
clear
gf
git pull
vim
clear
gitc
clear
cd packages/ui
npm run dev
vim
cd retail
cd packages/ui
vim
cd retail
gf
git push
clear
gf
npm run build;
cd lib
npm publish
cd ..
npm i
gf
npm run dev
vim
npm run build
cd lib
npm publish
cd nvim
vim
clear
gitc
gf
git pull
clear
npm i
git merge develop
nvim
git merge develop
vim
clear
nvim
vim
clear
clear
clear
gh copilot explain "sudo apt-get"<\n>
gh extension upgrade gh-copilot<\n>
gh --version
gh extension upgrade gh-copilot<\n>
brew uninstall -g gh
brew uninstall  gh
whic gh
which gh
npm uninstall -g gh<\n>
which gh
gh --version
gh extension upgrade gh-copilot<\n>
gh repo view
gh pr list
gh issue list
gh --version
gh auth status
gh copilot explain "sudo apt-get"<\n>
gh extension install github/gh-copilot
gh extension upgrade gh-copilot<\n>
gh extension remove gh-copilot
gh extension install gh-copilot
gh extension install github/gh-copilot
gh copilot explain "sudo apt-get"<\n>
gh copilot -h
gh copilot suggest "How to tag a commint"
clear
gh copilot explain "git tag"
clear
gitc
gf
git pull
clear
cd vin
cd nvim
cd ..
npm run build
cd lib
npm publish
npm i
cd ..
npm run build
cd lib
npm publish
cd ..
npm run build
cd lib
npm publish
npm i
gf
clear
npm install -g npm @11.3.0
npm install -g npm@11.3.0
clear
rp generate-localization
gf
git pull
clear
npm i
npm run dev
clear
gf
clear
npm run update
npm run update
npm run dev
clear
npm run build
npm run update
clear
npm run update
gf
clear
tmux attach -t work
clear
npm run dev
npm run update
cd ..
npm run build
cd lib
npm publish
cd ..
npm i
npm run dev
clear
npm run dev
clear
npm run update
cd myclienteling-app-services
vim
cd myclienteling-app-mobile
cd myclienteling-app-services
vim
npm i
npm run build_wave
clear
vim
gf
vim
npm publish
vim
gf
vim
gf
vim
gf
clear
gf
vim
gf
npm publish
vim
npm i
npm run build_wave
clear
vim
git remote -v
gf
npm run update
npm run build
clear
vim
npm run dev
npm run upda
npm run update
clear
gf
gf
vim
gf
vim
gf
cd
cd myclienteling-app-services
cd ..
ls
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-services.git mc-app-services
git config user.name
git config -g user.name
git config  user.name
clear
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-services.git mc-app-services
clear
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-services.git mc-app-services
git clone git@github.coam-eng:EngineeringRetailPlatform-Champion/myclienteling-app-services.git mc-app-services
cd ssh
vim
git clone git@github.com-eng:EngineeringRetailPlatform-Champion/myclienteling-app-services.git mc-app-services
ssh-keygen -p -f ~/.ssh/git_company_eng
vim
ssh-keygen -p -f ~/.ssh/git-company-eng
cd
cd .ssh
vim
ssh-keygen -p -f ~/.ssh/github-company-eng
eval "$(ssh-agent -s)"<\n>
let-env SSH_AUTH_SOCK = (ssh-agent -c | lines | where $it =~ 'SSH_AUTH_SOCK' | get 0 | split row '=' | get 1 | str trim)<\n>
cd nushell
cd .config
cd .ssh
vim
vim
source ~/.config/nushell/env.nu
cd .config/nushell
vim
source ~/.config/nushell/env.nu
vim
source ~/.config/nushell/env.nu
vim
source ~/.config/nushell/env.nu
vim
source ~/.config/nushell/env.nu
clear
clear
clear
cd .config/nushell
vim
nvim
clear
vim
clear
npm run dev
npm i
nvim
gf
clear
rp generate-localization
npm run dev
npm run update
clear
npm run update
rp generate-localization
npx lint-staged
clear
npm run dev
npm run update
vim
cd packages/ui
cd ..
cd cli
vim
npm run build
cd ..
clear
npm run update
cd myclienteling-app-services
cd myclienteling-app-mobile
clear
cd myclienteling-app-components
vim
clear
cd myclienteling-app-components
cd myclienteling-app-mobile
cd myclienteling-app-components
vim
clear
npm run dev
npm run build_wave
clear
eas build -p ios --profile preview
clear
vim
gf
vim
gf
npm run dev
npm run update
clear
npm run build_wave
npm run dev
clear
git pull
clear
npm run dev
npm run update
rp generate-localization
vim
cd nvim
vim
clear
npm install -g @anthropic-ai/claude-code
vim
claude
clear
nvim
gf
git pull
vim
claude
vim
claude
vim
cd clienteling
claude
vim
npm run dev
cd myclienteling-app-mobile
npm run dev
claude
clear
npm run dev
tmux attach -t work
clear
vim
git checkout feature/min-fixes
git pull origin develop
git pull
vim
clear
clear
cd clienteling
cd retail
clear
cloude
gitc
gf
git pull
vim
npm run dev
cd packages/ui
clear
npm run dev
clear
vim
cd clienteling
gf
npx lint-staged
vim
vim
clear
vi
vim
gf
git pull
gf
clear
npm run dev
vim
vim
nvim --version
clear
cd clienteling
npx expo-doctor@latest
npm run build 
clear
npm run build
cd retail
npm i
npm run build
cd clienteling
npm run build
cd retail
npm i
git checkout -b feature/expo-new-arch
clear
npx react-compiler-healthcheck@latest
cd clienteling
npm run dev
cd clienteling
clear
vim
npm run dev
cd clienteling
npm run dev
gitc
vim
cd retail
npm i
npm run dev
cd clienteling
nvim
clear
gitc
cd clienteling
cd retail
npmi
npm i
cd clienteling
npx expo-doctor@latest
vim
clear
npm run dev
cd retail
npm i
cd clienteling
npm run dev
clear
claude
clear
npm run build
vim
gitc
npm run dev
npm i
vim
gitc
np i
npm i
npm run dev
cd reatil
cd retail
npm i
clear
cd clienteling
npm run dev
vim
gitc
cd retail
npm i
cd clienteling
vim
gf
npm run build
cd lib
npm publish
cd ..
clear
git push
vim
git config user.name
vim
git config user.name "federicoReghini"
git config user.email "federicoreghini@gmail.com"
npm run dev
npm install sharp
node scripts/process-images.js
clear
npm run build
cd lib
npm p;
npm publish
cd ..
clear
npm run dev
node scripts/process-images.js
npm run build && npm run start
npm run build; npm run start
npm run start -p 3002
npm run dev
npm run build; npm run start
npm run build; npm run start --port 3002
npm run build; npm run start
lsof -i :3000 | grep LISTEN
kill 5108
clear
npm run start
lsof -i :3000 | grep LISTEN
npm run build
lsof -i :3000 | grep LISTEN
npm run start
clear
vim
clear
gitc
git pull
git pull origin develop
clear
nvim
git push
nvim
clear
gitc
git merge feature/min-fix
gitc
git merge feature/min-fixes
vim
npm i
clear
vim
npm run dev
npm run dev
npm run build && npm run lint
npx jest src/components/__tests__/Gallery.test.tsx
npm install --save-dev jest-environment-jsdom
npx jest src/components/__tests__/Gallery.test.tsx
npm install --save-dev @testing-library/react @testing-library/jest-dom @types/jest
npx jest src/components/__tests__/Gallery.test.tsx
npm install --save-dev @babel/preset-env @babel/preset-react @babel/preset-typescript babel-jest
npx jest src/components/__tests__/Gallery.test.tsx
npm run build && npm run start
npm run build; npm run start
npm run build
npm run start
npm run build
npm run start
npm run start
npm run build; npm run start 
npm run build
npm run dev
vim
gf
git cheocut feature/462-cloudchart-filters-improvement
git cheockut feature/462-cloudchart-filters-improvement
git checkout feature/462-cloudchart-filters-improvement
git pull origin develop
clear
git push
gitc
git checkout features/464-progress-bar
gf
git pull origin develop
clear
vim
gitc
git pull
git merge features/464-progress-bar
git push
clear
git checkout feature/469-planner-margins
gf
git checkout feature/469-planner-margins
git fetch
git pull
nvim
gitc
git pull
gitc
git merge features/464-progress-bar
git pull origin develop
git push
clear
gitc
gitd
clear
vim
gf
git pull 
vim
git pull
clear
vim
gf
nvi
vim
clear
gitc
gf
git pull
git merge develop
clear
git push
vim
gitc
vim
gf
git pull
vim
clear
npm run start
npm run build && npm start
clear
npm run dev
vim
gf
git pull
git push
clear
npm run build
npm run start
clear
npm run build
npm run start
npm run start
npm run build
npm run start
npm run build && npm run start
npm run build; npm run start 
npm run build
npm run start
npm run dev
ipconfig getifaddr en0
npm run build; npm run start 
npm run lint && tsc --noEmit
npm run lint; tsc --noEmit
npm run build; npm run start 
npm run dev
npm run build
tmux attach -t work
clear
clear
npm run start
clear
npm run dev
clear
vim
npm run start
clear
npm run start
clear
clear
npm run dev
clear
clear
clear
nvim
vim
vim
cd packages/ui
vim
cd packages/cli
cd retail
npx turbo start --filter=my-clienteling
cd clienteling
clint update
npm run update
clear
npm run update
vim
npm run update
vim
vim
gitc
git merge develop
clear
cd myclienteling-app-mobile
cd myclienteling-app-components
nvim
cd retail
npm i
cd clienteling
npm run build
clea
clear
npx expo-doctor@latest
cd retail
npm i
cd clienteling
npx expo-doctor@latest
npm run build
clear
eas build -p ios --profile preview
cd packages/cli
vim
npm run build
cd clienteling
npm run build
cd retail
npm i
vi
npm run dev
npm run start
clear
npm run dev
clear
npm run start
vim
vim
npm i
npm run build
cd clienteling
npm run build
gf
git pull origin develop
vim
git pull origin develop
clear
cd retail
npm i
nvim
npm run update
clear
npm run build
cd .config/nushell
vim
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
vim
source ~/.config/nushell/config.nu
vim
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd .config
cd ..
z --version
cd .config
clear
source ~/.config/nushell/env.nu
clear
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd .config
z --version
clear
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
z --version
cd .config
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd .config
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd .config
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
cd .config
zoxide --version<\n>
zoxide .config
zoxide z .config
source ~/.config/nushell/config.nu
source ~/.config/nushell/env.nu
cd .config
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd ..
clear
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd ..
which z
which cd
z
source ~/.config/nushell/.zoxide.nu
cd .config
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd .config
which zoxide
clear
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
cd .config
vim
cd ..
vim
cd .zoxide.nu
ls
la
vim .zoxide.nu
$nu.env-path
$nu.config-path
clear
source ~/.config/nushell/config.nu
cd .config
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
source ~/.config/nushell/env.nu
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
clear
cd .config
source ~/.config/nushell/config.nu
cd .config
source ~/.config/nushell/config.nu
cd ..
:qa
cd nvim
clear
source ~/.config/nushell/config.nu
clear
clear
npm run build
cd clienteling
npm run build
clear
source ~/.config/nushell/config.nu
clear
cd .config
env
cd .config
clear
source ~/.config/nushell/config.nu
cd .config
nushell --version
nu --version
cd .zshrc
cd ..
cd toto-site
cd ..
cd
:qa
:q
vim .zshrc
clear
cd toto-site
brew upgrade zoxide
zoxide --version<\n>
z ..
source ~/.config/nushell/config.nu
cd toto-site
zoxide -h
zoxide init
zoxide init nu
zoxide init nushell
cd toto-site
nushell --version
nu --version
which nushell
which nu
source ~/.config/nushell/config.nu
cd toto-site
source ~/.config/nushell/config.nu
cd toto-site
source ~/.config/nushell/config.nu
cd toto-site
clear
vim
clear
cd nushell
clewar
clear
vim
clear
nvim
clear
clear
cd myclienteling-app-components
clear
clear
docker compose up -d
cd cheshire-cat-ai
python -m venv venv
source venv/binactivate.nu
source venv/bin/activate.nu
gh copilot -h
gh copilot explain "Error: nu::parser::sourced_file_not_found<\n><\n>  × File not found<\n>   ╭─[entry #4:1:8]<\n> 1 │ source venv/bin/activate.nu<\n>   ·        ──────────┬─────────<\n>   ·                  ╰── File not found: venv/bin/activate.nu<\n>   ╰────<\n>  help: sourced files need to be available before your script is run<\n>"
source cheshire/bin/activate.nu
pip install cat
docker compose logs -f
clear
pip install requests pydantic
vim
clear
source cheshire/bin/activate.nu
vim
clear
nvim
clear
gf
git pull origin develop
vim
clear
cd retail
nvim
vim
clear
npm i
clear
vim
clear
vim
npx expo-doctor@latest
ivm
vim
npm i
clear
vim
npm run build
npm run start
npm run dev
vim
clear
gitc
git pull
gf
vim
npm i
vim
npm i
clear
npm run start
npm run dev
clear
npm run dev
npm run update
npm run build
cd packages/ui
npm run dev
vim
npm run dev
npm run build
clear
npm run dev
npm run build
cd packages/cli
vim
npm run build
clear
vim
npm run build
npm run build
vim
vim
clear
npm run build
vim
npm run build
clear
vi
cd myclienteling-app-mobile
npm i
nvim
clear
npm runb build
npm run build
clear
npm run dev
npm run dev
npm i
npm run dev
npm run build_wave
npm run dev
npm run build_wave
clear
npm run build_wave
clear
vim
clear
cd retail
gf
git pull
clear
cd nvim
vim
clear
vim chat-boutique
cd chat-boutique
vim
cd retail
clear
npm run dev
cd
cd .ssh
vim
cd beije
ls
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-mobile.git
git clone git@github.com-eng:EngineeringRetailPlatform-Champion/myclienteling-app-mobile.git
ls
rm -rf myclienteling-app-mobile
git config user.email
clear
cd .ssh
vim
clear
vim
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-mobile.git
clear
vim
clear
vim
npm run build
cd lib
npm publish
cd ..
clear
npm i
vim
npm run build
cd lib
npm publish
cd ..
npm run dev
clear
vim
npm run dev
npm run start
vim
cd .config
npm run dev
clear
npm run update
vim
vim
npm run update
cleqr
clear
npm run dev
vim
npm run build
cd lib
npm publish
cd ..
npm i
clear
vim
cd nvim
vim
cd .config
vim
mkdir mcphub
touch servers.json
touch mcphub/servers.json
rm servers.json
vim
npm install -g mcp-hub@latest
vim
clear
vim
vim mcphub
vim
clear
vim
tmux attach -t work
clear
clear
gf
git pull
cd packages/ui
npm run dev
vim
clear
vim
gf
nvim
vim
brew update neovim
which neovim
which nvim
nvim -v
brew update nvim
clear
vim
clear
cd retail
vim
vim
clear
git log
clear
git status
git add .
vim
git commit -m "refactor(product): remove unused variant param<\n><\n>Remove the unused variant parameter from the useLocalSearchParams hook in<\n>the Product component, keeping only the necessary id parameter."
git push
clear
git checkout -b feature/expo-53
clear
npx expo-doctor@latest
npm i -g eas-cli
npx expo install expo@^53.0.0 --fix
vim
npm install @types/react@^19 --workspace=my-clienteling<\n>
vim
npm install @types/react@^19 --workspace=my-clienteling --force
npx expo install expo@^53.0.0 --fix
npx expo-doctor@latest
npx expo-doctor@latest --fix
npx expo install expo@^53.0.0 --fix
npx expo-doctor@latest
cd presenter
npx expo install expo@^53.0.0 --fix
npx expo install expo@^53.0.0 --fix --force
npx expo install expo@^53.0.0 --fix -- --force
npx expo-doctor@latest
vim
npm i
vim
cd packages/ui
npx
clear
npx expo install expo@^53.0.0 --fix -- --force
cd retail
vim
npm i
npx expo-doctor@latest
npx expo-doctor@latest
npm i -g eas-cli
npm install -g eas-cli --force<\n>
rm -rf ~/.local/share/fnm/node-versions/v20.17.0/installation/lib/node_modules/eas-cli<\n>npm install -g eas-cli<\n>
npx expo-doctor@latest
npm why expo-modules-autolinking<\n>
vim
npm i
npx turbo run clean
vim
clear
npm i
vim
clear
vim
npm i
vim
npm i
vim
npm i
vi
vim
npm i
vim
npm i
vim
npm i
vim
npm i
vim
npm i
npx expo-doctor@latest
npm why metro
npx turbo run clean
vim
npm i
brew upgrade neovim
brew upgrade nvim
cd .config
nvim
darwin-rebuild switch --flake ~/.config/nix#mini
nvim -v
nvim
darwin-rebuild switch --flake ~/.config/nix#mini
nvim
brew tap homebrew/bundle
darwin-rebuild switch --flake ~/.config/nix#mini
man brew
brew -v
nvim
darwin-rebuild switch --flake ~/.config/nix#mini
nvim
darwin-rebuild switch --flake ~/.config/nix#mini
nvim -v
nvim
brew -v
brew install neovim
nvim -v
nvim
clear
nvim
darwin-rebuild switch --flake ~/.config/nix#mini
clear
nvim -v
cleara
clear
nvim
clear
vim
npm i
npm i --force
cd clienteling
npm run build
cd retail
npx turbo run dev --filter=my-clienteling
cd clienteling
npm run build
clear
nvim
gitc
nvim
vim
vi
vim
npm run build_wave
pip install --user pipx
brew install pipx<\n>
pipx ensurepath<\n>
vim
clear
vim
cd retail
clear
npm i
nvim
clear
gitc
cd clienteling
nvim
vim
clear
vim
clear
nvim
gitc
vim
gitc
clear\
clear
npm run dev
clear
gf
nvim
nvim
pipx install vectorcode
pipx ensurepath<\n>
clear
nvim
vim
vim
clear
gf
cd retail
vim
nvim
git fetch
git checkout feature/472-dynamic-form-planning
clear
npm i
npm run dev
gitc
vim
gitc
nvim
vim
gitc
vim
nvim
gitc
vim
gitc
vim
gitc
nvim
gitc
vim
clear
nvim
clear
nvim
vim
nvim
vim
vim
clear
vim
gf
clear
cd nvim
vim
vim
gitc
gf
git pull
nvim
tmux detach
tmux
vim
nvim
vim
clear
nvim
cd myclienteling-app-mobile
npm run dev
npm run dev
cd myclienteling-app-mobile
cd myclienteling-app-services
vim
nvim
vim
clear
clear
clear
npm run dev
<\n>
npm run dev
npm run build_wave
gf
git push
git pull
clear
gf
git pull
nvim
vim
cd packages/ui
vim
nvim
gtic
gitc
git pull origin develop
clear
nvim
clear
npm run update
cd retail
npm run dev
npm run update
npm i
gf
git pul
git pull
npm run dev
npm run update
clear
nvim
gf
git pull
git pull origin develop
git push
clear
vim
nvim
vim
nvim
vim
clear
nvim
clear
clear
nvim
gf
clear
vim
gf
nvim
gf
git pull origin develop
nvim
git pull origin develop
nvim
vim
nvi
nvim
vim
gf
git pull
cloude code update
claude update
clear
nvim
clear
gf
git pull
git pull origin feature/479-android-bugs
git push
clear
gf
git pull
clear
gitc
git pull
clear
nvim
clear
git merge feature/472-dynamic-form-planning
git push
gitc
clear
clear
npm run build
nvim
npm run build
cd lib
npm publish
cd ..
npm run dev
tmux attach -t work
gf
clear
clear
nvim
npm run build
cd lib
npm publish
nvim
gf
git pull origin feature/481-product-search
clear
nvim
npm i
clear
nvim
cd ..
cd ebsn
npm run test:l-r
npm run build
cd lib
npm publish
nvim
gf
git checkout feature/485-custom-route
git pull origin feature/483-category-tree
nvim
gitc
git pull origin feature/485-custom-route
clear
git push
clear
npm run dev
npm run update
nvim
clear
git checkout feature/482-address-infos
nvim
gitc
gf
git pull
git pull origin feature/487-warehouse-post-login
git push
npm run dev
npm run update
clear
npm run update
nvim
gitc
npm run build
cd lib
npm publish
cd ..
nvim
gitc
gf
git pull
clear
git checkout feature/488-email-form-modal
gf
git checkout feature/488-email-form-modal
gitc
git pull origin feature/488-email-form-modal
clear
git push
npm run dev
npm i
npm run update
nvim
gitc
nvim
npm run dev
nvim
gitc
clear
gf
gitc
git merge feature/482-address-infos
git push
clear
npm run update
nvim
npm run update
nvim
clear
gitc
gf
git checkout feature/android-modal-exceed-screen
gf
git pull origin develop
clear
npm run dev
clear
gitc
git merge feature/android-modal-exceed-screen
git push
npm run update
clear
nvim
clear
npm run dev
nvim
npm run update
gf
nvim
nvi
vim
clear
nvim
gf
git pull
gf
git pull
gf
nvim
gf
git pull
clear
nvim
gf
clear
npm run update
npm run dev
clear
nvim
vim
nvim
python3 -m venv venv && source venv/bin/activate && pip install fastapi uvicorn pydantic
ng new frontend --routing --style=css --skip-git --skip-install
python3 -m venv venv && source venv/bin/activate and pip install fastapi uvicorn pydantic
python3 -m venv venv and source venv/bin/activate and pip install fastapi uvicorn pydantic
python3 -m venv venv; source venv/bin/activate; pip install fastapi uvicorn pydantic
pip install fastapi uvicorn pydantic
npm install -g @angular/cli
cd /Users/federicoreghini/Documents/beije/test_ai
ng new frontend --routing --style=css --skip-git
cd frontend
npm install
cd backend
pip install filelock
python3 -m venv venv<\n>source venv/bin/activate<\n>pip install fastapi uvicorn pydantic filelock
venv/bin/pip install fastapi uvicorn pydantic filelock
ng test --watch=false --browsers=ChromeHeadless
exit
exit
ng test --watch=false --browsers=ChromeHeadless
ng add @angular/material --defaults
ng test --watch=false --browsers=ChromeHeadless
npm run start
npm start
npm install @angular/animations
cd /Users/federicoreghini/Documents/beije/test_ai/backend
venv/bin/uvicorn main:app --reload
cd /Users/federicoreghini/Documents/beije/test_ai/frontend
curl http://localhost:8000/users
curl http://localhost:8000/permissions
npm start
cd /Users/federicoreghini/Documents/beije/test_ai/backend
venv/bin/pip install websockets
venv/bin/uvicorn main:app --reload
venv/bin/uvicorn main:app --reload
lsof -i :8000 | grep LISTEN | awk '{print $2}' | xargs kill -9
cd /Users/federicoreghini/Documents/beije/test_ai/frontend
curl http://localhost:8000/users
ng serve
curl http://localhost:8000/users
curl http://localhost:8000/users/4
curl http://localhost:8000/auth/me/4
curl http://localhost:8000/permissions
cd /Users/federicoreghini/Documents/beije/test_ai/frontend && ng serve
ng serve
curl http://localhost:8000/auth/me/4
venv/bin/uvicorn main:app --reload
npm start
clear
clear
gf
git pull
nvim
clear
nvim
clear
nvim
gf
git pull
clear
nvim
clear
nvim
gitc
cd packages/ui
nvim
gitc
vim
gf
git pull
npm run dev
npm run update
npm run dev
nvim
gf
nvim
nvim
clear
npm run update
clear
npm run dev
npm run update
clear
git checkoute -b refactor/product-search-to-infinite-query
git checkout -b refactor/product-search-to-infinite-query
git add .
cd retail
npx lint-staged
git push
clear
nvim
clear
gf
clear
gf
git checkout feature/488-email-form-modal
git pull
clear
git merge feature/product-search-to-infinite-query
git merge refactor/product-search-to-infinite-query
gitc
git pull origin feature/488-email-form-modal
nvim
clear
gitc
git pull origin feature/488-email-form-modal
clera
clear
nvim
nvim
clear
nvim
tmux attach -t work
npm run dev
tmux attach -t work
gitc
gf
git pull
clear
clear
gf
gitc
git pull
clear
gf
git pull
git log
clear
gitc
git merge refactor/product-search-to-infinite-query
git push
clear
clear
nvim
cd myclienteling-app-moblie
cd myclienteling-app-mobile
npm run test
clear
nvim
clear
npm run test
clear
clear
darwin-rebuild switch --flake ~/.config/nix#mini
clear
clear
nvim
gf
git pull
clear
git push
clear
npm run dev
clear
clear
npm run dev
npm run update
clear
clear
nvim
nvim
clear
npm run dev
nvim
clear
cd ..
npm run build
cd lib
npm publish
npm i
npx lint-staged
nvim
gf
clear
gf
clear
cloude code update
cloude -v
npm install -g @anthropic-ai/claude-code<\n>
claude -v
npm install -g @anthropic-ai/claude-code<\n>
npm cache clean --force<\n>
npm install -g @anthropic-ai/claude-code<\n>
rm -rf /Users/federicoreghini/.local/share/fnm/node-versions/v20.17.0/installation/lib/node_modules/@anthropic-ai/claude-code<\n>
npm install -g @anthropic-ai/claude-code<\n>
claude -v
claude 
claud whoami
claude whoami
claude mcp
claude
clear
nvim
clear
nvim
clear
nvm
cd ..
npm run build
cd lib
npm publish
cd ..
npm i
gf
cd ..
clear
darwin-rebuild switch --flake ~/.config/nix#mini
cd nix
ls
claude
cd nix
darwin-rebuild switch --flake ~/.config/nix#mini
nvim
claude doctor
darwin-rebuild switch --flake ~/.config/nix#mini
clear
darwin-rebuild switch --flake ~/.config/nix#mini
clear
claude
clear
nviim
darwin-rebuild switch --flake ~/.config/nix#mini
clear
nvim
cd .config/nushell
nvim
fnm -v
fnm ls
clear
nvim
clear
nvim
clear
clear
clear
activate_venv -n cheshire
activate_venv 
venv/bin/uvicorn main:app --reload
activate_venv
activate_venv --name cheshire
activate_venv -h
activate_venv cheshire
activate-venv -n cheshire
source cheshire/bin/activate.nu
clear
nvim
clear
source cheshire/bin/activate.nu
/usr/bin/python3 /Users/federicoreghini/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /Users/federicoreghini/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/zsh/envVars.txt
nvim
clear
claude
clear
cd cheshire-cat-ai
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
cd
cd .config/nushell
nvim
source ~/.config/nushell/config.nu
source cheshire/bin/activate.nu
source ~/.config/nushell/config.nu
nvim
source ~/.config/nushell/config.nu
clear
cd cheshire-cat-ai
ls
cd ..
ls
cd be-ai-fashion-agent
mkdir be-ai-fashion-agent
cd be-ai-fashion-agent<\n>
/usr/bin/python3 /Users/federicoreghini/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/printEnvVariablesToFile.py /Users/federicoreghini/.windsurf/extensions/ms-python.python-2025.4.0-universal/python_files/deactivate/zsh/envVars.txt
mkdir -p app/models app/controllers app/middleware app/routes app/utils app/config docs
mkdir app
mkdir app/models
mkdir app/controllers app/middleware app/routes app/utils app/config docs
clear
nvim
clear
cd nvim
ls
cp .env.example .env
docker --version
docker run -d --name fashion-retail-mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=password mongo:latest
docker ps
brew install mongosh
mongosh --version
mongosh mongodb://localhost:27017/fashion-retail --eval "db.runCommand({ ping: 1 })"
mongosh --eval "show dbs"
mongosh --version
mkdir -p db
mkdir -p scripts
npm install
npm run seed
docker ps
DEBUG=mongoose:* npm run seed
docker stop fashion-retail-mongodb && docker rm fashion-retail-mongodb
chmod +x start-mongodb.sh && ./start-mongodb.sh
chmod +x setup-db.sh && ./setup-db.sh
docker ps
docker stop fashion-retail-mongodb && docker rm fashion-retail-mongodb
docker run -d --name fashion-retail-mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin123 -e MONGO_INITDB_DATABASE=admin -v mongodb_data:/data/db mongo:latest
docker rm -f fashion-retail-mongodb
docker run -d --name fashion-retail-mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin123 -e MONGO_INITDB_DATABASE=admin -v mongodb_data:/data/db mongo:latest
docker ps
mongosh "mongodb://admin:admin123@localhost:27017/fashion-retail?authSource=admin" --eval "db.runCommand({ ping: 1 })"
npm run seed
cd nvim
nvim
nvm
nvim
nvim
cd nvim
nvim
clear
nvim
vim
nvim
npm run dev
npm run build
cd lib
npm publish
clear
npm i
nvim
clear
cd packages/cli
cd clienteling
npm run dev
clear
nvim
clear
nvim
gitc
git fetch
git checkout feature/490-fix-planner
npm run dev
nvim
clear
nvim
gitc
git merge feature/490-fix-planner<\n>
clear
git push
clera
tmux attach -t work
nvim
clear
clear
npm run update
nvim
npm run update
cd .config/nvim
nvim
clear
clear
gf
nvim
cd clienteling
nvim
nvim
ncim
vim
nvim
clear
gf
gitc
git pull
cd packages/ui
nvim
cd retail
npm i
cd packages/ui
cd retail
cd clienteling
npx expo-doctor
cd retail
npx turbo run clean
nvim
npm run dev
clear
npm i
npm run dev
npm run def
npm run dev
nvim
npx turbo run dev --filter=my-clienteling
clear
npm run dev
expo start
nvim
nvim
clear
nvim
nvim
gitc
git merge develop
vim
npm i
gitc
nvim
npx expo start
gh copilot explain "how i remove my last local commit"
clear
git reset --hard HEAD~1
clear
nvim
gitc
nvim
clear
gitc
clear
nvim
clear
gitc
clear
nvim
vim
gf
git pull
clear
nvim
clear
nvim
gf
git pull
nvim
gitc
git pull
git merge feature/490-fix-planner<\n>
clear
gitc
git merge develop
git push
clear
gitc
git reset --hard HEAD~1
clear
git merge feature/490-fix-planner<\n>
git push
clear
npm run update
npm run update
clear
npm run dev
npm run update
nvim
gitc
clear
gf
gitc
git pull
clear
git checkout feature/donut-pie-percentage
nvim
nvim
cd packages/ui
nvim
npm run dev
nvim
gf
git pull
clear
gf
nvim
cd retail
cd
cd .ssh
gf
git pull
clear
gitc
git pull
git merge feature/donut-pie-percentage
git push
clear
nvim
git checkout -b feature/modal-android
nvim
clrea
clear
gitc
gitd
gitD
gitd
gitD
gitd
gitD
gitc
clear
cd projects
ls
cd beije
ls
cd projects
mkdir dojo
cd dojo
git clone git@github.com:BeijePeopleFirst/DOJO-scrum-app.git
ls
cd DOJO-scrum-app
ls
nvim
git config user.email
git config user.email "federico.reghini@peoplefirst.ws"
git config user.email
git config
git config user.name "FedeRBeije"
nvim
cd DOJO-scrum-app
git reset --hard HEAD~1
git reset --soft HEAD~1
git commit --amend --author="federico.reghini@peoplefirst.ws"
git rebase -i HEAD~1
git reset --hard
nvim
clear
git reset --soft --orphan temp-branch
git commit --amend --author="federico.reghini@peoplefirst.ws"
git commit --amend --author="FedeRBeije federico.reghini@peoplefirst.ws"
git commit --amend --author="FedericoReghini federico.reghini@peoplefirst.ws"
git commit --amend --author="FedeRBeije <federico.reghini@peoplefirst.ws>"
git push --force-with-lease origin main
nvim
npm run update
clear
clear
npm run dev
npm run update
clear
nvim
clear
git checkout -b feature/update-packages
clear
npx expo-doctor
npx expo-doctor --verbose
npm install expo@latest
npx expo-doctor --verbose
npx expo install --check
npm run dev
npx expo install expo@^53.0.0 --fix
npm install @types/react@~19.0.10 @types/react-dom@~19.0.7
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono
npm install
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono/apps/native/my-clienteling
cp package.json package.json.backup
npm install --legacy-peer-deps
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono
npm install
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono/apps/native/my-clienteling
npm install --legacy-peer-deps
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono/apps/native/my-presenter
npm install --legacy-peer-deps
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono
npm install
npm view @tanstack/react-router version
nvim
cd retail
nvim
npm i
clear
claude
clear
npm run dev
clear
nvim
clear
cd clienteling
npx expo-doctor --verbose
cd retail
npm i
npx expo-doctor 
nvim
nvim
clear
npx turbo run clean
rm -rf node_modules
rm -rf package-lock.json
npm i
npx expo-doctor 
npx expo-doctor 
npx expo-doctor --verbose
cd clienteling
npx expo-doctor --verbose
npx expo install --check
npx expo-doctor --verbose
npm why @expo/config-plugins
claude
npx expo-doctor --verbose
npm why expo
claude
npx expo-doctor --verbose
npm run build
cd packages/cli
npm run build
nvim
cd retail
npm install @clack/prompt --workspace=cli
npm install @clack/prompt --workspace=@clienteling/cli
npm install @clack/prompts --workspace=@clienteling/cli
cd clienteling
cd packages/cli
npm run build
cd clienteling
npm run build
nvim
npx lint-staged
nvim
cd retail
npm install --save-dev prettier<\n>
cd clienteling
npx lint-staged
nvim
git stash pop
nvim
git stash pop
nvim
clear
gitc
clera
clear
nvim
git stash clear<\n>
clrea
clear
clear
cd clienteling
npm run dev
nvim
gf
npm run update
clear
clear
clear
nvim
rm ~/.local/state/nvim/shada/main.shada
nvim
nvim
rm ~/.local/state/nvim/shada/main.shada
nvim
clear
gf
git checkout refactor/491-route
nvim
gitc
nvim
gitc
npx lint-staged
nvim
git commit --amend
nvim
git push --force-with-lease 
clear
nvim
nvim
nvim
gitc
nvim
cd retail
npm i @shopify/flash-list@2.0.0-rc.2 --workspace=my-clienteling
cd packages/ui
nvim
cd reatil
cd retail
npm i
npm run dev
clear
gf
git pull
clear
nvim
clear
gitc
git pull origin develop
clear
git push
clear
nvim
npm run dev
clear
nvim
gf
git pull
nvim
gf
git pull
git push
clear
nvim
git log --since="1 week ago" --pretty=format:"%h - %s (%an, %ar)"
git log --since="1 week ago" --pretty=format:"- %s (%h)" --no-merges
nvim
gf
git pull
nvim
clear
gf
git pull
clear
nvim
clear
npm run dev
clear
nvim
tmux attach -t work
clear
source ~/.config/nushell/config.nu
clear
clear
gf
git pull
clear
clear
source ~/.config/nushell/config.nu
clear
gf
clear
npm run dev
nvim
brew install fd
nvim
clear
npm run dev
clear
nvim
clear
nvim
cd packages/ui
nvim
cd retail
clear
gf
gp
gf
git pull
nvim
clear
brew install lua-language-server
nvim
clear
nvim
cd engineering
mkdir ofetch
npx create-expo-app@latest ofetch-demo
cd ofetch-demo
npm install ofetch
clear
mkdir -p src/api
mkdir src
mkdir src/api
npm run dev
clear
npx expo start
nvim
gf
nvim
git pull origin master
nvim
git add .
nvim
gf
git pull
clear
npm run update
nvim
clear
nvim
gf
git pull
npm run update
clear
nvim
gf
git pull
nvim
gitc
git merge refactor/491-route
git push
clear
gitd
clear
gf
git pull
npm run update
clear
nvim
clea
clear
git pull
nvim
npm run dev
clea
clear
gitc
git pull origin develop
nvim
npm run build
cd packages/cli
nvim
cd retail
npx turbo run dev --filter=my-clienteling
clear
cd clienteling
npm run build
clear
nvim
npm run dev
cd retail
rg "axios/dist/node/axios.cjs"
npm i
nvim
cd clienteling
expo start
npm run start
nvim
nvim
cd retail
npm i
npm run start
cd clienteling
npm run start
clear
npm run start
cd retail
npm i
cd clienteling
npm run start
cd retail
npx turbo run clean
npm i
cd clienteling
nvim
cd retail
npx turbo run clean
npm i
cd clienteling
nvim
npm i
cd retail
npm i
cd clienteling
nvim
cd re
npm run start
npm i
nvim
npm i
clear
npm i
npm run start
nvim
npm i
tmux attach -t work
clear
nvim
gitc
clear
git pull
clear
npm run dev
cd reatil
cd retail
npm i
npm run dev
cd clienteling
nvim
cd clienteling
nvim
clear
gf
clear
gf
git pull
ollama codestral:22b
ollama list
ollama run codestral:22b
clear
source ~/.config/nushell/config.nu
nvim
npm run dev
clear
nvim
git checkout -b feature/cli-mock
nvim
clear
cd packages/cli
nvim
clear
gitc
mkdir -p packages/cli/src/__mocks__/api
mkdir packages/cli/src/__mocks__/api
clear
nvm
nvim
\clear
clear
gf
git branch list
gh copilot explain "how to list remote branches with git"
git branch -r
gf
git checkout feature/495-add-product-refactor
nvim
nvim
nvi
git commit --amend
vim
clear
clear
nvim
nvim
gitc
npm run update
nvim
npm run update
npm run dev
cd retail
npx turbo dev --filter=my-clienteling
clear
cd packages/cli
nvi m
nvim
cd clienteling
nvim
clera
clear
gf
nvim
gitc
git pull
clear
gitc
gitd
clear
gitc
nvim
clear
clear
npm run dev
clear
nvim
clear
nvim
nvim
gitc
gf
git ull
git pull
clear
clear
gf
git pull origin master
vim
clear
gf
git pull
clear
gitc
nvim
cd clienteling
node scripts/utils.ts
node src/scripts/utils.ts
cd packages/cli
nvim
cd retail
nvim
cd packages/cli
node src/mock/utils.ts
node src/commands/mock/utils.ts
node src/commands/mock/dev.ts
clear
node src/commands/prepare/start.ts
cd clienteling
tmux attach -t work
tmux detach
tmux
tmux detach
nvim
cd myclienteling-app-mobile
clear
git push
clear
npm run build_wave
clear
git push
clear
npm run build_wave
nvim
npm run build_wave
clear
npm run build_wave
nvim
npm run ios-test-tf
clear
nvim
npm run ios-test-tf
nvim
npm run ios-tf
clear
npx expo install expo@latest
npx expo-doctor
npx expo install --check
npx expo install --check --force
nvim
vim
npx expo install expo@~52.0.46
npx expo install expo@~52.0.46 --force
npm install expo~52.0.46 --force
nvim
npm i
nvim
npm i
npx expo-doctor
npx expo install --check
cd myclienteling-app-mobile
nvim
npx expo-doctor
nvim
nvim
clear
npm run ios-tf
nvim
npm i
npm run ios-tf
clear
nvim
cd myclienteling-app-components
nvim
clear
gf
git pull
nvim
git pull
nvim
npm i
nvim
npm run build
clear
nvim
npm publish
nvim
npm i
clear
npm run ios-tf
clear
npm run ios-test-tf
npm run build_wave
nvim
nvim
clear
nvim
cd packages/cli
npm run build
clint mock
clint mock start
clint mock build
clera
clear
cd clienteling
nvim
clint mock start
nvim
git stash
nvim
gitc
git stash list
git stash apply stash@{0}<\n>
nvim
clint mock start
nvim
clint mock start
nvim
cd packages/cli
npm run build
npm run dev
clint start
clint start --clear --port 8081
npm run build
cd clienteling
nvim
npm run start
nvim
npm run start
nvim
npm run start
clear
nvim
nvim
clear
npm i
npm run start
nvim
gh copilot explain "how to remove a stash"
clear
nvim
clear
tmux attach -t work
clear
clear
npm run  build
clear
clint mock build
clear
npm run  build
clint mock build
npm run  build
clint mock build
npm run  build
clint mock build
nvim
npm run  build
clear
clear
vim
cd clienteling
clint mock build
clear
nvim
cd packages/cli
npm run  build
clear
cd clienteling
clint mock build
vim
npm run  build
clear
clear
nvim
clear
nvim
clear
gitc
gf
git pull
clear
gitc
git merge feature/cli-mock
clear
clint mock build
cd clienteling
clint mock build
clear
nvim
clint mock build
clear
nvim
clear
git stash drop
clera
clear
gitc
git pull
git merge develop
git push
clear
gf
clear
gitc
gitd
gitc
cd retail
npm i
cd packages/cli
nvim
gitc
npx expo start
clear
nvim
clint mock start
clear
nvim
clint mock start
clear
npx expo start
clear
nvim
clint mock build
nvim
cd retail
npx turbo start --filter=my-clienteling
cd clienteling
clint mock start
nvim
nvi
vim
nvim
gf
gitc
git pull
git merge develop
nvim
git pushn
git push
clear
gitc
cd clienteling
npm run update
cd packages/cli
nvim
npm run build
clear
npm run update
cd retail
npm i
cd clienteling
npm run update
nvim
nvim
vim
npm run build
npm run update
vim
npm run build
npm run update
clear
vim
npm run update
npm run build
vim
npm run build
npm run update
vim
vim
npm run update
clear
nvim
gitc
git merge develop
gf
git pull
git push
clear
gitc
clera
clear
gitc
git merge develop
nvim
clear
npx expo install --check
nvim
cd retail
npm i
npx expo install --check
npx expo-doctor
npm run build
npm install -g eas-cli
clear
npm run build
clear
cd packages/cli
nvim
npm run build
clear
npm run build
clera
clear
nvim
npm run build
clera
clear
npm run start
clear
nvim
vim
npm run start
vim
nvim
npx expo start --clear
cd retail
npx turbo clean
rm -rf package-lock.json
rm -rf node_modules
cd clienteling
cd retail
npm i
cd clienteling
npm run start
nvim
npm run build
clear
npm run build
nvim
npm run build
clear
vim
nvim
npm run build
npx expo-doctor
npx expo install --check
npx expo-doctor
npm run build
npm run start
clear
cd retail
npm i
npm run start
npx expo-doctor
npm run build
clear
npm run start
npx turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
clear
npm run start
nvim
clear
nvim
clear
gf
clear
git checkout -b feature/expo-53-495
gf
git pull origin develop
clear
gitc
git pull origin feature/495-add-product-refactor
nvim
npx lint-staged
nvim
npx expo lint
nvim
vim
npm i
npx turbo clean
rm -rf package-lock.json
rm -rf node_modules
npm i
nvim
npm i
npx expo lint
nvim
npm i
clera
gitc
nvim
gitc
git push
clear
gitc
clear
git pull
gitc
git pull
git merge feature/update-packages
nvim
clear
git pull origin develop
nvim
clear
gitc
gf
git pull origin feature/498-refactor-clients
git pull origin feature/500-opportunities-client-form
clear
gitc
git push
gitc
git pull origin feature/495-add-product-refactor
clera
clear
npm run start
cd retail
npx turbo clean
rm -rf node_modules package-lock.json
nvim
npm i
cd clienteling
npm run start
clear
nvim
clear
gf
git checkout feature/500-opportunities-client-form
gitc
git pull
gitc
git merge develop
clear
nvim
nvim
vim
npm run start
nvim
gf
git checkout feature/503-opportunity-detail
nvim
git checkout feature/503-opportunity-detail
clear
nvim
gitc
clear
git pull
gf
nvim
vim
ff
gf
git pull master
git pull origin master
clear
nvim
npm run build
clear
gf
git checkout feature/504-planner-opportunity-section
nvim
npm run start
clear
nvim
gitc
gf
clear
nvim
npm run build
cd ..
vim
cd ebsn
npm run build
clear
clear
cd myclienteling-app-mobile
nvim
gitc
vim
npm i
nvim
ios-tf-prod
npm run ios-tf-prod
nvim
npm run build
cd lib
npm publish
cd ..
npm run ios-tf-prod
clear
nvim
gf
git checkout feature/503-opportunity-detail
git pull
clear
nvim
npm i
nvim
clear
nvim
gitc
vim
gitc
nvim
npm run build
cd lib
cd ..
vim
npm run build
cd lib
npm publish
npm run start
cd retail
npm i
cd clienteling
npm run start
cd retail
npx turbo clean
rm -rf node_modules package-lock.json
npm i
cd clienteling
npm run start
clear
j
clear
:qa
clear
nvim
clear
nvim
node -v
clear
vim
node -v
cd clienteling
nvim
npx expo lint
npx @eslint/migrate-config .eslintrc.js
npm install @eslint/js @eslint/eslintrc -D
vim
clear
npx expo lint
nvim
clear
npm run build-wave
npm run build_wave
npm run start
cd retail
npx turbo clean
rm -rf node_modules package-lock.json
npm i
nvim
git pull
nvim
git pull
nvim
npm i eslint
nvim
npm install --save-dev @typescript-eslint/eslint-plugin@latest @typescript-eslint/parser@latest
nvim
npx turbo clean
rm -rf node_modules package-lock.json
npm i
npx turbo clean
rm -rf node_modules package-lock.json
npm i
vim
nvi
npm run start
clear
vim
gf
nvim
cd downloads
ls
productExplorerApp
cd productExplorerApp
ls
vim
cd ..
rm -rf productExplorerApp
npx create-expo-app ProductExplorerApp --template blank@53
npx expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context  expo-camera expo-location
cd productExplorerApp
npx expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context  expo-camera expo-location
nvim
cd ..
rm -rf productExplorerApp
npx create-expo-app ProductExplorerApp
npx create-expo-app ProductExplorerApp --template
rm -rf productExplorerApp
npx create-expo-app ProductExplorerApp --template
cd productExplorerApp
npx expo install expo-camera expo-location
nvim
npx expo install react-native-gesture-handler
clear
vim
zip -r productExercise.zip productExplorerApp
zip -r productExercise.zip productExplorerApp/
zip compress productExercise.zip productExplorerApp/
zip compress
zip compress productExplorerApp
zip compress --help
# Use the external zip binary explicitly<\n>run zip -r ProductExplorerApp.zip ProductExplorerApp
which zip
tmux 
gf
clear
gf
git pull
clear
nvim
cd
cd ssh
ls
cd retail
cd ..
vim
npm run build
cd lib
npm publish
clear
npx turbo clean
rm -rf node_modules package-lock.json
npm i
clear
npm run start
nvim
gf
git pull
git push
clear
gf
git pull
npm run start
gf
git pull
nvim
cd clienteling
vim
cd retail
cd myclienteling-app-mobile
npm run build
clear
vim
cd downloads
ls
cd RnExercise
cd clienteling
vim
cd ..
vim
npm run build
cd lib
npm publish
vim
clear
npx turbo clean
rm -rf node_modules package-lock.json
gf
git pull
npm run start
clear
npm i
cd ..
nvim
gf
git pull
nvim
gf
git pull
vim
npm run build
cd lib
npm publish
cd ..
npm run start
npx turbo clean
rm -rf node_modules package-lock.json
npm i
vim
gf
npm run start
npm install -g eas-cli
npx expo-doctor
nx
npx expo install --check
vim
npm run build
vim
clear
npm run start
vim
cd retail
npx turbo clean
rm -rf node_modules package-lock.json
clear
clear
npm i
npm run start
npm run build
clear
npm run build
npx turbo clean
rm -rf node_modules package-lock.json
npm i
vim
npx turbo clean
rm -rf node_modules package-lock.json
npm i
cd clienteling
npm run build
clear
vim
vim
npx turbo clean
rm -rf node_modules package-lock.json
npm i
npm run build
vim
npx turbo clean
rm -rf node_modules package-lock.json
npm i
npm run start
clea
clear
npm run build
rm -rf node_modules package-lock.json apps/native/my-clienteling/node_modules apps/native/my-clienteling/package-lock.json
npm install
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono/apps/native
npm install --workspace=my-clienteling
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono
git status
npm ci
cd retail
npm ci
cd clienteling
vim
rm -rf node_modules package-lock.json 
npm ci
npm i
npm ci
vim
npx expo start --no-dev --minify
vim
rm -rf node_modules package-lock.json 
npx turbo clean
npm i
npx expo start --no-dev --minify
clear
npm ci
cd retail
npm ci
vim
npm i
cd clienteling
npm ci
npx expo start --no-dev --minify
clear
vim
clear
git checkout -b expo-52
npm run build
npm run start
gitc
nvim
npm run start
vim
gf
git push
clear
npx expo start --no-dev --minify
git checkout -b release/27
npx expo install expo@~52.0.46
npx expo-doctor
npx expo install --check
npm cache clean --force && rm -rf node_modules package-lock.json && cd apps/native/my-clienteling && rm -rf node_modules package-lock.json && cd ../../.. && npm install
npm cache clean --force && rm -rf node_modules package-lock.json && cd apps/native/my-clienteling && rm -rf node_modules package-lock.json ; cd ../../.. ; npm install
npm cache clean --force ; rm -rf node_modules package-lock.json ; cd apps/native/my-clienteling ; rm -rf node_modules package-lock.json ; cd ../../.. ; npm install
cd /Users/federicoreghini/Documents/beije/engineering/retail-platform-mono/apps/native/my-clienteling
npx expo install --check
vim
clera
gitc
clear
gitc
npx expo install expo@~52.0.46
npx expo-doctor
vim
clea
gitc
nvim
clear
vim
clear
npm run start
npm run update
npm run start
npm run update
clear
npm run update
clear
nvim
gf
vim
git pull
clear
npm run build
clear
npm run build
clear
vim
clear
nvim
vim
gf
git pull
clear
npm run start
npm run update
nvim
npm run start
npm run update
vim
npm run update
clear
vim
npm run update
clear
nvim
npm run update
clear
npm run update
clear
nvim
npm run update
npm run start
npm run update
nvim
clear
clea
clear
gitc
clear
git pull
gf
git pull
clear
cd myclienteling-app-mobile
gitc
clear
cd myclienteling-app-mobile
npm run test
npm i
nvim
npm i --force
npm run dev
clear
npm i
npm run dev
clear
nvim
vim
clear
rm -rf node_modules package-lock.json 
npm i
npm run dev
npm i
npm run dev
gf
clear
clear
nvim
npm run build
cd lib
npm publish
cd ..
npm run build
cd lib
npm publish
cd ..
nvim
npm run build
rm -rf  lib
npm run build
cd lib
npm publish
cd ..
clear
cd retail
clear
npm i
npm run start
nvim
clear
gf
git pull
nvim
git checkout -b feature/518
gf
git pull origin feature/521-handle-remove-opportunity
clear
git checkout -b release/sprint-17
clear
git push
fuck
git push -u origin release/sprint-17
clear
vim
clear
git checkout -b feature/519
clear
nvim
clear
gitc
gf
git pull
clear
gitc
clear
vim
clear
git commit --amend
git reset --soft HEAD~1
git checkout -b feature/523
vim
clear
npm run build
cd lib
npm publish
npm
npm i
npm run start
clear
gitc
gf
gf
gitc
git pull
clear
gitc
clear
gitc
gf
git pull
clear
gf
git pull
gitc
git pull
cd ..
vim
source ~/.config/nushell/config.nu
clear
vim
cd nvim
vim
nvim
clear
clear
gitc
nvim
clear
vim
clear
gf
clear
clear
nvim
gitc
gf
gp
source ~/.config/nushell/config.nu
gp
clear
npm run start
gf
gp
source ~/.config/nushell/config.nu
gp
clear
clera
clear
gf
gp
clear
cd packages/ui
vim
cd retail
cd myclienteling-app-services
gf
gp
git reset --soft HEAD~1
clear
npm run start
nvim
gf
gp
clear
gf
nvim
vim
clear
npm run start
nvim
vim
gf
npx expo run:android
cd .zshrc
cd
cd .zshrc
ls
cd zsrch
cd .config
brew install openjdk@17<\n>
vim
source ~/.zshrc
cd .zshrc
vim
java --version
echo $JAVA_HOME
source ~/.zshrc
clear
java --version
source ~/.zshrc
java --version
cd retail
npx expo run:android
clear
nvim
gf
gp
clear
nvim
gf
vim
clear
clear
npm run start
clear
clear
gf
git pull
gitc
git pull origin release/sprint-17
npm run start
clear
vim
gf
nvim
gf
gp
clear
source ~/.config/nushell/config.nu
npm run start
gf
gitc
git pull origin feature/523
clear
npm run update
vim
npm run update
clear
nvim
clear
gitc
gf
git pull origin feature/523
git push
clear
gitc
git pull origin release/sprint-17
git push
clear
gitd
clear
nvim
vim
clear
npm run update
vim
npm run update
<\n>clera
clera
clear
gf
vim
clear
git checkout -b backup/twilio-mct3-react
cd retail
npx turbo clean
vim
clear
git push
vim
git push
clear
clera
clear
gitc
gitd
clear
npx turbo clean
rm -rf node_modules package-lock.json 
npm i
clear
vim
clear
cd clienteling
npm run start
cd retail
cd apps/my-clienteling
npm run start
clear
nvim
gf
clear
cd clienteling
cd retail
cd apps/my-clienteling
cd my-clienteling
clear
cd retail
clear
git checkout refactor/calendar
vim
cd my-clienteling
vim
gf
gp
clear
vim
clear
vim
npm run start
cd retail
tmux attach -t work
clear
vim
vim
gf
gp
gitc
git merge refactor/calendar
git push
gitc
clear
gf
gp
nvim
vim
clear
vim
cd
curl -sS https://webi.sh/golang | sh; \<\n>source ~/.config/envman/PATH.env
go --version
go version
go version
node -v
go
source ~/.config/nushell/config.nu
go
clear
tmux detach
tmux
cd nushell
vin
vim
source ~/.config/nushell/config.nu
vim
source ~/.config/nushell/config.nu
go version
source ~/.config/nushell/config.nu
go version
which go
ls /usr/local/go/bin/go
/usr/local/go/bin/go version
vim
source ~/.config/nushell/config.nu
vin
vim
source ~/.config/nushell/config.nu
nushell
vim
source ~/.config/nushell/config.nu
go version
clear
clear
cd projects
ls
mkdir bootdev
cd bootdev
bootdev run 148c8301-4cda-46fc-9a4f-6613c647939c
go install github.com/bootdotdev/bootdev@latest
bootde --version
bootdev --version
cd nushell
vim
source ~/.config/nushell/config.nu
go version
which bootdev
echo $env.HOME<\n>
ls ($env.HOME | path join "go/bin")<\n>
source ~/.config/nushell/config.nu
bootdev --version
bootdev
ls ~/go/bin/bootdev<\n>
echo $env.PATH<\n>
which bootdev
source ~/.config/nushell/config.nu
echo $env.PATH | where {|p| $p =~ 'go/bin' }<\n>
bootdev help<\n>
bootdev --version<\n>
clear
vim
bootdev run 148c8301-4cda-46fc-9a4f-6613c647939c
bootdev login
bootdev run 148c8301-4cda-46fc-9a4f-6613c647939c
bootdev run 148c8301-4cda-46fc-9a4f-6613c647939c -s
cd ..
rm bootdev
cd ..
ls
mkdir workspace
cd workspace
mkdir golang
cd golang
mkdir hellogo
cd hellogo
go mod init example.com/username/hellogo
vim
cat go.mod
bootdev run 7dc6a0c9-d3d8-4536-8e88-ca88fee35049
bootdev run 7dc6a0c9-d3d8-4536-8e88-ca88fee35049 -s
touch main.go
vim main.go
go run
go run main.go
vim main.go
go run main.go
bootdev run 52dda666-1573-49c3-a1b2-cb54bbf892e9 -s
bootdev run 52dda666-1573-49c3-a1b2-cb54bbf892e9 
go run main.go
bootdev run 52dda666-1573-49c3-a1b2-cb54bbf892e9 
bootdev run 52dda666-1573-49c3-a1b2-cb54bbf892e9 -s
vim main.go
bootdev run 52dda666-1573-49c3-a1b2-cb54bbf892e9 
bootdev run 52dda666-1573-49c3-a1b2-cb54bbf892e9 -s
go build
./hellogo
vim
bootdev run 54c794e4-55d8-4c43-8d95-b22a3ebdca2f -s
go install
cd ..
hellogo
bootdev run 576b7605-b5d7-42aa-92a9-7c8e63929a09 -s
cd hellogo
cd ..
mkdir mystrings
cd mystrings
cd hellogo
vim
cd m
cd mystrings
go mod init example.com/username/mystrings
touch mystrings.go
vim mystrings.go
go build
bootdev run 2c32a5fc-6827-48f9-a033-392881ff3ca5 -s
cd hellogo
vim
go build
vim
go build
./hellogo
B
bootdev run 5e5236b3-9ce4-45de-8759-ac3afabf0cbb -s
go mod init example.com/username/datetest
cd ..
go mod init example.com/username/datetest
cd datetest
ls
vim
mkdir datetest
cd datetest
go mod init example.com/username/datetest
vim main.go
go get github.com/wagslane/go-tinytime
cat go.mod
go build
./datetest
bootdev run 9c49ad86-aee5-4f56-8df2-59ae5cdb194d -s
clear
tmux attach -t work
tmux
tmux 
tmux attach
cd ebsn
clear
cd clienteling
clear
tmux new-session -s work
clear
cd clienteling
cd retail
clear
cd packages/ui
vim
clear
cd apps/my-clienteling
vim
gf
gp
vi
vim
clear
cd packages/ui
vim
cd m
cd clienteling
cd apps/my-clienteling
clear
vim
cd apps/my-clienteling
npm run start
clear
vim
clear
bootdev run 67de86ba-5228-4ec6-b2ea-a59aa4944405
bootdev run 67de86ba-5228-4ec6-b2ea-a59aa4944405 -s
man curl
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues -> tmp/issues.json
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues > tmp/issues.json
ls
mkdir tmp/issues.json
ls
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues > tmp/issues.json
cd tmp
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues > issues.json
cd ..
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues -o tmp/issues.json
cd tmp
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues -o issues.json
cd ..
file tmp/issues.json<\n>
rm -r tmp/issues.json
ls
cd tmp
ls
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues -o issues.json
ls
bootdev run f8584cac-3fae-4cf9-9a74-38d45f9d6fc9 -s
cd ..
bootdev run f8584cac-3fae-4cf9-9a74-38d45f9d6fc9 -s
ls
rm -r tmp/issues.json
ls
bootdev run f8584cac-3fae-4cf9-9a74-38d45f9d6fc9 
rm -r tmp/issues.json
ls
cd tmp
ls
cd ..
bootdev run f8584cac-3fae-4cf9-9a74-38d45f9d6fc9 -s
bootdev run f8584cac-3fae-4cf9-9a74-38d45f9d6fc9 
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues -o tmp/issues.json
bootdev run f8584cac-3fae-4cf9-9a74-38d45f9d6fc9 -s
bootdev run f8584cac-3fae-4cf9-9a74-38d45f9d6fc9 
cd tmp
ls
cd ..
rm -rf tmp
ls
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues -o tmp/issues.json
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues -o /tmp/issues.json
ls
bootdev run f8584cac-3fae-4cf9-9a74-38d45f9d6fc9 -s
curl -X POST https://api.boot.dev/v1/courses_rest_api/learn-http/users -H "Content-Type: application/json" -d "{<\n>  "role": "QA Job Safety",<\n>  "experience": 2,<\n>  "remote": true,<\n>  "user": {<\n>    "name": "Dan",<\n>    "location": "NOR",<\n>    "age": 29<\n>  }<\n>}" -o /tmp/user.json
bootdev run 9b8c679a-ac43-4d72-aed3-78f4e2a51724 -s
curl -X POST https://api.boot.dev/v1/courses_rest_api/learn-http/users -H "Content-Type: application/json" -d '{<\n>  "role": "QA Job Safety",<\n>  "experience": 2,<\n>  "remote": true,<\n>  "user": {<\n>    "name": "Dan",<\n>    "location": "NOR",<\n>    "age": 29<\n>  }<\n>}' -o /tmp/user.json
bootdev run 9b8c679a-ac43-4d72-aed3-78f4e2a51724 -s
jq --version
bootdev run c18860ae-cf7c-47b6-9abb-4e2084e3268e -s
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq '.[]title, .[]estimate'
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq '.[]title' | jq '.[]estimate'
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq '.[] | {title, estimate}'<\n>
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq '.[] | {title, estimate}'<\n> -o /tmp/issue_info.json
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues -o /tmp/issue_info.txt | jq '.[] | {title, estimate}'<\n> 
bootdev run bbbe7d5d-5eed-4ceb-884d-07f77ff735b7
bootdev run bbbe7d5d-5eed-4ceb-884d-07f77ff735b7 -s
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' > /tmp/issue_info.txt && curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .estimate' >> /tmp/issue_info.txt<\n>
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' > /tmp/issue_info.txt; curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .estimate' >> /tmp/issue_info.txt<\n>
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' > /tmp/issue_info.txt<\n>curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .estimate' >> /tmp/issue_info.txt<\n>
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' > /tmp/issue_info.txt
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' >> /tmp/issue_info.txt
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' > /tmp/issue_info.txt
mkdir /tmp/issue_info.txt
bootdev run bbbe7d5d-5eed-4ceb-884d-07f77ff735b7 -s
rm -r /tmp/issue_info.txt
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' > /tmp/issue_info.txt<\n>curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .estimate' >> /tmp/issue_info.txt<\n>
mkdir /tmp/issue_info.txt
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' > /tmp/issue_info.txt<\n>curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .estimate' >> /tmp/issue_info.txt<\n>
ls
ls /tmp
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq -r '.[] | .title' > /tmp/issue_info.txt
curl -s https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq '.[].title' > /tmp/issue_info.txt
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues | jq '.[].title' > /tmp/issue_info.txt
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues <\n>  | from json <\n>  | get title <\n>  | save --force /tmp/issue_info.txt<\n>
rm -r /tmp/issue_info.txt
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues <\n>  | from json <\n>  | get title <\n>  | save --force /tmp/issue_info.txt<\n>
curl https://api.boot.dev/v1/courses_rest_api/learn-http/issues <\n>  | from json <\n>  | get estimate <\n>  | save --append /tmp/issue_info.txt<\n>
bootdev run bbbe7d5d-5eed-4ceb-884d-07f77ff735b7 -s
bootdev run dff17f87-1ce8-43ce-a43b-2cb611ce76f1 -s
go mod init github.com/federicoReghini/pokedexGo
ls
mkdir pokedex
cd pokedex
go mod init github.com/federicoReghini/pokedexGo
vim
touch main.go
cd pokedex
go build
cd ..
vim main.go
cd ..
rm -rf pokedex
mkdir pokedexcli
cd pokedex
cd pokedexcli
go mod init github.com/federicoReghini/pokedexcli
touch main.go
vim main.go
go build
./pokedexcli
cd pokedex
clear
bootdev run 6c884808-f220-4d1b-9520-288ef266859d -s
clear
npm run build
cd ..
clear
cd apps/my-clienteling
cd packages/ui
cd packages/cli
vim
cd apps/my-clienteling
npm run build
clear
go test ./
vim
cd retail
vim
cd apps/my-clienteling
bootdev run d062dd5f-2f28-41cc-8436-ed896d5ef137
bootdev run d062dd5f-2f28-41cc-8436-ed896d5ef137 -s
npm run build
clear
npm run start
clear
vim
clear
vim
nvim --version
clear
cd ebsn
clear
npm run build
cd lib
npm publish
clear
vim
cd retail
npm i
vi
git stash
clear
gitc
gf
gp
git stash branch feature/gauge
clear
npm run start
clear
npm run update
clear
vim
gitc
git merge feature/gauge
git push
clear
cd nvim
vim
clear
vim
clear
go run .
go run . | tee repl.log
go run . | save repl.log
bootdev run 2d4ed658-b546-4bf1-b569-57e5e321c1ef
bootdev run 2d4ed658-b546-4bf1-b569-57e5e321c1ef -s
clear
go run ,
go run .
bootdev run 7d7ba7b9-f840-49e5-8767-42007b0a104f
go run .
bootdev run 7d7ba7b9-f840-49e5-8767-42007b0a104f
bootdev run 7d7ba7b9-f840-49e5-8767-42007b0a104f -s
go run .
bootdev run 7d7ba7b9-f840-49e5-8767-42007b0a104f
bootdev run 7d7ba7b9-f840-49e5-8767-42007b0a104f -s
gf
gitc
gp
npm run start
go run .
bootdev run 813eafe1-2e1d-42a0-b358-53e0f4d4fdc8
bootdev run 813eafe1-2e1d-42a0-b358-53e0f4d4fdc8 -s
mkdir internal
mkdir internal/pokecache/cache.go
ls
go run .
go test ./internal/pokecache
bootdev run f2ba2b87-38fe-467c-abd7-14716f955169
bootdev run f2ba2b87-38fe-467c-abd7-14716f955169 -s
gitc
clear
npm run build
clear
clear
vim
npm i
vim
npm run build
clear
nvim
npm run build
npx turbo clean
rm -rf node_modules package-lock.json 
npm i
clear
vim
npm run build
vim
npx turbo clean
rm -rf node_modules package-lock.json 
npm i
npm run build
clear
clear
npx expo-dol
clear
npx expo-doctor
npm why @expo/config-plugins
vim
npx turbo clean
rm -rf node_modules package-lock.json 
npm i
npx expo-doctor
vim
npx expo install --check
npx expo-doctor
npm why @expo/config-plugins
vim
npx turbo clean
rm -rf node_modules package-lock.json 
npm i
clear
npm i -g eas-cli
clear
npm run build
clear
go run .
npx turbo clean
rm -rf node_modules package-lock.json 
clear
npm i
clear
vim
npm run build
npm run start
clear
vim
npx turbo clean
rm -rf node_modules package-lock.json 
vim
npm i
npm ci
npm ci
npm run start
clear
npm run start
npm run build
clear
vim
bootdev run e53abbb4-5d8a-4feb-ba08-828f03311e51 -s
go run .
bootdev run e53abbb4-5d8a-4feb-ba08-828f03311e51 -s
npm run start
touch test.js
vim test.js
node test.js
vim
clear
go run .
clar
clear
bootdev run ed962683-cb2d-4989-99e9-5cfa144810b5
bootdev run ed962683-cb2d-4989-99e9-5cfa144810b5 -s
go run .
bootdev run ed962683-cb2d-4989-99e9-5cfa144810b5 -s
clear
go run .
clear
go run .
clear
go run .
clear
git init
git remote add origin git@github.com:federicoReghini/pokedexcli.git
git config user.name "federicoReghini"
git config user.email "federicoreghini@gmail.com"
git commit --amend --author="federicoreghini@gmail.com"
git commit --amend --author="federicoReghinifedericoreghini@gmail.com"
git commit --amend --author="federicoReghini federicoreghini@gmail.com"
git commit --amend --author="federicoReghini <federicoreghini@gmail.coam>"
git push
git push --force
clear
gf
gitc
gp
clear
tmux attach -t work
clear
clear
clear
vim
clera
vim
gitc
clear
vim
cd ~/.ssh
ls
vim
clerar
clear
vim
gf
git pull master
git pull origin master
vim
git pull
git push
clear
vim
clear
vim config
cd apps/my-clienteling
npm run start
clear
vim
vim
gf
clear
git pull
npm run start
clear
gf
clear
gp
cleawr
clear
vim
npm list @typescript-eslint/eslint-plugin @typescript-eslint/parser
npm install @typescript-eslint/eslint-plugin@^8.38.0 @typescript-eslint/parser@^8.38.0 --workspaces
vim
vim
npm install --save-dev @typescript-eslint/parser @typescript-eslint/eslint-plugin
vi 
gf
clear
gitc
gp
clear
gf
gp
cd packages/ui
npm run start
tmux attach -t work
clear
vim
gitc
gf
gp
clear
gf
npm run start
cd retail
npm i
cd apps/my-clienteling
cd retail
npx turbo clean
rm -rf node_modules package-lock.json 
npm i
clear
npm run start
gf
gp
vim
vim
clear
cd ..
npm run build
cd lib
npm publish
npm i
npm run s
cd ..
npm run build
cd lib
npm publish
npm run start
cd ..
npm run build
cd lib
npm publish
npm i
npm run start
cd apps/my-clienteling/node_modules/@project-fe-gpa/ebsn-front-services/services/hashtagServices/hastagServices.js
cd retail
cd apps/my-clienteling/node_modules/@project-fe-gpa/ebsn-front-services/services/hashtagServices/hastagServices.js
cd clienteling
clear
cd ..
npm run build
cd lib
npm publish
clear
vim
npx turbo clean
npm run start
rm -rf node_modules package-lock.json 
npm i
vim
npm i
vim
clear
gf
vim
clear
vim
gitc
git checkout feature/522-edit-hashtags
npm run start
git checkout -b feature/522-rendering-solution
vim
bootdev run 65e6780d-fdde-447a-9898-b30b73793a3a -s
cd ..
clear
cd ..
bootdev run 65e6780d-fdde-447a-9898-b30b73793a3a -s
clear
bootdev run 0552b1c3-49d9-4d4b-b44d-e91188a79c92 -s
clear
man git
git config --global init.defaultBranch master
cat ~/.gitconfig
git config --global user.email "federicoreghini@gmail.com"
git config --global user.name "federicoReghini"
cat ~/.gitconfig
clear
bootdev run 69fb8a76-9456-47e2-9804-05466614882e -s
clear
cd ..
mkdir webflyx
cd webflyx
git init
bootdev run fda2c302-cb1e-4ed1-910c-609d85d33e4a -s
clear
touch contents.md
echo "# contents" > countents.md
cat contents.md
vim
"# contents" | save contents.md
"# contents" | save --append contents.md
cat contents.md
git status
bootdev run f330368c-734c-4708-971b-2ad33b4b7f52 -s
git add contents.md
git status
bootdev run 10bf6614-7c0e-4710-9c84-4fee200d63e4 -s
git commit -m "A: add contents.md"
bootdev run 321d7b2d-60b8-433c-9123-210bbf49c758 -s
git log
git --no-pager log -n 10
bootdev run 865b32b2-1493-48aa-b32e-a1e7418bc609 -s
vim
xxd contents.md
git log -n 10
ls -al
cd .git/objects
ls -al
cd b5
ls -al
cat 5b19dcac7f2c52df828f9128a70d8fc59f9f84
xxd 5b19dcac7f2c52df828f9128a70d8fc59f9f84
xxd 5b19dcac7f2c52df828f9128a70d8fc59f9f84 | save /tmp/commit_object_hex.txt
ls
vim
cd webflyx
vim
bootdev run 4efdf7b5-dd51-40ea-99e3-4e221e24bd0f -s
clear
cd b5
ls -al
git cat-file 5b19dcac7f2c52df828f9128a70d8fc59f9f84
git cat-file -p 5b19dcac7f2c52df828f9128a70d8fc59f9f84
git cat-file 5b19dcac7f2c52df828f9128a70d8fc59f9f84
cd webflyx
git cat-file 5b19dcac7f2c52df828f9128a70d8fc59f9f84
git cat-file -p 5b19dcac7f2c52df828f9128a70d8fc59f9f84
git log -1
git cat-file -p b55b19dcac7f2c52df828f9128a70d8fc59f9f84
git cat-file -p b55b19dcac7f2c52df828f9128a70d8fc59f9f84 | save /tmp/catfileout.txt
bootdev run 7affbcbd-1455-43f3-868a-b10662921a91 -s
git log -1
git cat-file -p e0bf8212d8e6e1005d5ec2880088b3fa7879b660
git cat-file -p 0b2b966842607e2dbd949b2b612f10546b9b1a1e
git cat-file -p 0b2b966842607e2dbd949b2b612f10546b9b1a1e | save /tmp/blobfile.txt
bootdev run ce822188-75cf-4c5a-92b9-17b2878ac9f1 -s
touch titles.md
"# Titles<\n><\n>- A River Runs Through It<\n>- Fight Club<\n>- 12 Years a Slave<\n>- The Big Short<\n>- 12 Monkeys" | save --append titles.md
cat titles.md
git add titles.md
git commit -m "B: add titles"
git log -1
git cat-file -p a8e4d8c8d0eeae51ab139a883d58f00705f73aac
bootdev run 71127960-79af-452d-a732-0c44908ca7bf -s
git cat-file -p 1861cffc30a7dde857071a32d89e5bc32c66ca88
git cat-file -p 85773695c3bd42368741850a7f34f1640af5a18c
mkdir quotes
touch quotes/starwars.md
touch quotes/dune.md
git status
clear
vim
clear
git add .
git commit -m "C: add quotes"
git cat-file -p 85773695c3bd42368741850a7f34f1640af5a18c
git cat-file -p 1861cffc30a7dde857071a32d89e5bc32c66ca88
bootdev run 1e2eb318-2a6f-44a0-bc93-e9cdd9510ebe -s
git config --add webflyx.ceo "ThePrimeagen"
git config --add webflyx.cto "TheLaneagen"
git config --add webflyx.valutation "mid"
git config --list --local
bootdev run 8c3b66a7-a454-480b-a0db-9cd34a721cef -s
git config list
git config --add webflyx.valuation "mid"
bootdev run 8c3b66a7-a454-480b-a0db-9cd34a721cef -s
git config --get webflyx.valuation
bootdev run ea9fe1c9-5284-4aae-95eb-1c6a834aa7c1 -s
git config --unset webflyx.cto
git config list
git config --unset webflyx.valutation
git config --unset webflyx
git config --add webflyx.ceo "Warren"<\n>git config --add webflyx.ceo "Carson"<\n>git config --add webflyx.ceo "Sarah"
git config list
git config --unset-all webflyx.ceo
bootdev run 9473bfc6-37ac-4644-ab55-76e8d88d8a27 -s
git config --remove-section webflyx
git config list
bootdev run c2b04b80-e061-4305-96e4-33a1f6e4d959 -s
git branch
bootdev run 8b4b9cd5-af15-4d71-b790-299fd2150a93 -s
git config --global list
git config --list --global
git config --add --global init.defaltbranch "main"
git config --list --global
git config --add --global init.defaultbranch "main"
git config --list --global
git config --unset-all init.defaltbranch
git config --list --global
git config --unset-all --global init.defaltbranch
git config --list --global
git config --unset-all --global init.defaultbranch
git config --list --global
git config --add --global init.defaultbranch "main"
git config --list --global
git branch
git branch -m master main
bootdev run 34d03c25-be7c-4f27-84a4-2c98f2a752ed -s
git switch -c add_classics
git branch
bootdev run 02f31255-f521-4317-946a-a8a9ca67e7cf -s
git switch main
git branch
git switch add_classics
bootdev run 7b1f541b-a333-4ac0-8317-8165530c0998 -s
clear
vim
cd ..
vim
source ~/.config/nushell/config.nu
gits
touch classics.csv
"title, director, year<\n>One Crazy Summer, Savage Steve Holland, 1986<\n>The Princess Bride, Rob Reiner, 1987<\n>The Goonies, Richard Donner, 1985<\n>The Breakfast Club, John Hughes, 1985<\n>Monty Python and the Holy Grail, Terry Gilliam, 1975" | save --append classics.csv
git add .
git commit -m "D: classics.csv file added"
git log
bootdev run da54c8cb-2b06-45ab-b8bb-157bc2446432 -s
git log --oneline
git log --oneline --decoration=full
git log --oneline --decoration full
git log --oneline --decorate full
git log --oneline --decorate=full
bootdev run 4c6ecd20-8510-4b37-918a-763fbade5e05 -s
vim
cat .git/refs/heads/main
find .git/refs/heads/main
find .git/refs/heads/main/0e96b168568b7adf11af4aac8988c0df3c7fb92a
clear
gf
clear
vim
clear
gits
source ~/.config/nushell/config.nu
gits
gits
vim
touch test.js
cd webflyx
node test.js
node test
node text.js
clear
node text.js
vim text.js
rm text.js
ls
rm -rf test.js
clera
clear
cleear
clear
"# contents<\n><\n>- titles.md: The movie titles in the WebFlyx collection<\n>- classics.csv: A comma-separated list of classic movies<\n>- quotes: A directory of files containing memorable quotes from movies" | save --force contents.md
cat contents.md
git add .
git commit -m "E: new contents"
git log --oneline --graph --all
git log --oneline --graph docs
git log --oneline --graph 
git log --oneline --all 
git log --oneline --graph 
git log --oneline --graph --all
bootdev run 5a03b470-0ae5-45be-83e2-dd548497214f -s
git merge add_classics
git log --oneline --decorate --graph --parents
bootdev run 41af0d0d-9805-4dd0-b7f8-6526a6d42ec8 -s
gitd
git switch -c update_titles
source ~/.config/nushell/config.nu
gitS
gitS testing
gitd
gits
gitd
clear
gits
ls
cat titles.md
"- The Curious Case of Benjamin Button" | save --append titles.md
cat titles.md
vim titles.md
clear
git log --oneline
git add .
git commit -m "G: new title"
git log --oneline
bootdev run 9e41bec4-ca71-41a0-bcbd-9cdb5a08867c -s
gits
git merge update_titles
gitlF
gitd
bootdev run e15fb7d6-7bbb-4185-bd12-f46613207d1c -s
git log --oneline
git switch -c update_dune 688db41
gitlF
git log --oneline -n 1
bootdev run 079797b4-66f7-4b95-a5fd-a1163dba32d9 -s
cat quotes/dune.md
vim quotes/dune.md
git add .
git commit -m "H: new quote on dune"
vim quotes/dune.md
git add .
git commit -m "I: new quote on dune part 2"
git rebase main
git log --oneline 
bootdev run 64c4ccc9-1f14-4b70-83fc-829d91efe335 -s
"* The Internship" | save --force titles.md
cat titles.md
gti add .
git add .
git commit -m "J: override"
bootdev run bb5f3005-894f-4d2f-80d1-75f4f143dd0d -s
git log
git log --oneline 
git reset --soft 77579d9
git log --oneline 
bootdev run cc5ecbd6-a740-408a-9b69-5fe961aef13e -s
git reset --hard 77579d9
cat titles.md
bootdev run eb5c6d9f-6203-4174-8e32-e261a707d7fe -s
cd ..
mkdir webflyx-local
ls
cd webflyx-local
git init
bootdev run 0443e68c-dc97-4eda-bcac-a44578c9eb68 -s
git remote add origin ../webflyx
bootdev run ad1ac5e6-8ce7-4fc8-b603-6a359ba9c715 -s
find .git/objects
ls .git/objects
bootdev run 26a9aebe-7e7b-4ad7-9de1-1e8bda7b1296 -s
git fetch
ls .git/objects
bootdev run 874bc151-49f5-4e84-b7b4-a20d4260871d -s
git log
bootdev run d8b81b4d-9341-46e9-b452-6673b07e36d1 -s
git log origin/update_dune --oneline
bootdev run 1f90b5ff-af72-4dd8-a32f-9d3c73ecd218 -s
git merge origin/main
git log
git log --oneline 
bootdev run eb6e6c58-4948-4438-af6e-daff6eaa10e7 -s
vim .git
cd ..
cd webflyx-
cd webflyx
vim .git
git config
git config list
clear
gh whoami
gh auth login
cd ..
rm -rf webflyx-local
ls
cd webflyx
clera
clear
git remote add origin git@github.com-personal:federicoReghini/webflyx.git
git ls-remote
bootdev run c465d09d-b53a-4276-978c-cc2c9f4e02ad -s
git push origin main
gits
git config list
git merge update_dune
git pull origin main
git log --oneline 
gitd
bootdev run 68fb19fe-ef3d-4d11-ad8a-3d009cc64319 -s
gitS add_classics
vim classics.csv
git add .
git commit -m "L: new classic"
git push origin add_classics
vim
git config --global pull.rebase true
gits
git pull
git pull origin main
git config list
gitd
clear
bootdev run b9bb7c2e-793a-4c9a-bc43-ca21556a4b6f -s
mkdir secure
touch secure/passwords.txt
"root: 12345<\n>admin: 54321<\n>lane: 00000<\n>prime: APICJJY$$PO!NJ@L" | save --append secure/passwords.txt
cat secure/passwords/txt
cat secure/passwords.txt
touch guilty_pleasures.md
"# Guilty Pleasures (tell no one)<\n><\n>- The Notebook<\n>- The Love Guru<\n>- Birdemic: Shock and Terror<\n>- Troll 2<\n>- Manos: The Hands of Fate<\n>- Sharknado" | save --append guilty_pleasures.md
touch .gitignore
"secure<\n>guilty_pleasures.md" | save --append .gitignore
cat .gitignore
git add .
git commit -m "M: ignore"
bootdev run 130bca89-8624-402c-a522-327e5c497159 -s
brew install pandoc
pandoc -g
pandoc -h
touch advert.md
"# WebFlyx: The Future of Content<\n><\n>You thought you knew what the web was capable of. You were _wrong_. WebFlyx is taking the world of online entertainment to an entirely new level. Grab a copy of it at your local electronics store today!<\n><\n>**Available on Floppy Disk!**<\n><\n>_While supplies last._" | save --append advert.md
cat advert.md
pandoc advert.md -o advert.html
open advert.html
vim
vim .gitignore
vim
clear
git add .
git commit -m "N: ignore part 2"
bootdev run 03550ba5-9699-468f-aa60-67df8fa47b6f -s
vim
git rm --cached advert.html
git log --oneline 
git reset --soft f274168
git log --oneline 
git add .
git commit -m "N: ignore part 2"
git log --oneline 
bootdev run 03550ba5-9699-468f-aa60-67df8fa47b6f -s
bootdev run 14b7179b-ced3-4141-9fa5-e67dbc3e5242 -s
cd ..
cd golang
ls
mkdir ~/.gatorconfig.json
touch ~/.gatorconfig.json
vim ~/.gatorconfig.json
rm -rf ~/.gatorconfig.json
touch ~/.gatorconfig.json
vim ~/.gatorconfig.json
clear
npm run start
clear
clear
source ~/.config/nushell/config.nu
clear
clear
ls
go mod init github.com/federicoReghini/Blog-aggregator
ls
rm go.mod
ls
mkdir gator
cd gator
go mod init github.com/federicoReghini/Blog-aggregator
clear
cd gator
clear
touch main.go
mkdir internal
touch internal/config
cd ..
vim
ls
cd gator
cd internal
go mod init internal.com/federicoReghini/internal
cd ../..
vim
vim main.go
cd gator
go run .
cat ~/.gatorconfig.json
go run .
bootdev run 5e53c561-f059-49aa-b06c-5c5535fa6df0 -s
clear
git init
git remote add origin git@github.com:federicoReghini/Blog-aggregator.git
clear
git add .
git commit -m "First commit"
git push origin main
vim
git push origin main
clear
vim
cd ..
vim
gitc
source ~/.config/nushell/config.nu
gf
gp
clear
vim
cd gator
go run .
go run . login
go run . login alice
cat ~/.gatorconfig.json
go run . login alice
cat ~/.gatorconfig.json
git add .
clear
bootdev run dca1352a-7600-4d1d-bfdf-f9d741282e55 -s
clear
clear
gf
clear
vim
brew install postgresql@15
clear
gitS feature/524
git add .
clear
vim
psql -hversion
psql --version
brew install postgresql@15
psql --version
clear
psql --version
brew info postgresql@15<\n>
ls /opt/homebrew/opt/postgresql@15/bin/psql<\n>
source ~/.config/nushell/config.nu
psql --version
source ~/.config/nushell/config.nu
psql --version
source ~/.config/nushell/config.nu
psql --version
vim
source ~/.config/nushell/config.nu
psql --version
clear
source ~/.config/nushell/config.nu
psql --version
brew services start postgressql@15
brew services start postgresql@15
brew tap homebrew/services<\n>
brew services start postgresql@15
source ~/.config/nushell/config.nu
brew services start postgresql@15
which brew
brew services --version
brew --version
brew tap --version
brew tap homebrew/services<\n>
brew tap<\n>
brew help services
brew tap homebrew/services
brew untap homebrew/services
brew tap homebrew/services
brew help services
source ~/.config/nushell/config.nu
brew help services
brew  services
brew services
brew update
brew services
brew update-reset
brew --version
brew services
brew doctor
git -C "/opt/homebrew/Library/.homebrew-is-managed-by-nix" remote add origin https://github.com/Homebrew/brew<\n>
clear
pg_ctl -D "/opt/homebrew/var/postgresql@15" start<\n>
/opt/homebrew/opt/postgresql@15/bin/pg_ctl -D /opt/homebrew/var/postgresql@15 start<\n>
/opt/homebrew/opt/postgresql@15/bin/pg_ctl -D /opt/homebrew/var/postgresql@15 stop
/opt/homebrew/opt/postgresql@15/bin/pg_ctl -D /opt/homebrew/var/postgresql@15 start<\n>
psql postgres
source ~/.config/nushell/config.nu
psql postgres
bootdev run 74bea1f2-19cd-4ea9-966e-e2ca9dd1dfa9 -s
/opt/homebrew/opt/postgresql@15/bin/pg_ctl -D /opt/homebrew/var/postgresql@15 stop
source ~/.config/nushell/config.nu
pgstop
pgstart
pgstop
clear
bootdev run 74bea1f2-19cd-4ea9-966e-e2ca9dd1dfa9 -s
go install github.com/pressly/goose/v3/cmd/goose@latest
goose -v
goose --version
mkdir sql/schema
touch sql/schema/001_users.sql
vim
pgstart
psql "postgres://federicoreghini:@localhost:5432/gator"
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator up
psql gator
clear
goose postgres postgres://federicoreghini:@localhost:5432/gator down
psql gator
clear
cd ~/.gatorconfig
cd ~/.gatorconfig.json
clear
cd 
ls
vim .gatorconfig.json
cd gator
c;ear
clear
cd .gatorconfig.json
cd
vim .gatorconfig.json
cd gator
bootdev run d049abb2-c733-4986-a33a-73f05e2ea06c -s
git add .
vim
go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
touch sqlc.yaml
vim sqlc.yaml
mkdir sql/queries
touch sql/queries/users.sql
clear
sqlc --version
sqlc version
sqlc generate
go get github.com/google/uuid
sqlc generate
go get github.com/lib/pq
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator up
cd gator
sqlc generate
go run . register lane
go run . register 
go run . register lane
pgstart
pgstop
pgstart
sqlc generate
go run . register lane
cd
vim .gatorconfig.json
cd gator
go run . register lane
vim .gatorconfig.json
cd 
vim .gatorconfig.json
cd gator
:w
clear
psql postgres
clear
go run . login alice
clear
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
bootdev run 8279802c-a867-4ba6-9d06-25625bc42544 -s
cd gator
bootdev run 8279802c-a867-4ba6-9d06-25625bc42544 -s
git add .
cd sql/schema
sqlc generate
cd gator
sqlc generate
clear
go run . reset
psql postgres
clear
bootdev run 6619ebf8-44ab-4a2b-a536-0b17d116c15e -s
go install github.com/bootdotdev/bootdev@v1.20.1<\n>
sqlc generate
go run . users
psql postgres
go run . register lane
go run . users
go run . register kahya
bootdev run 371be77c-711d-4072-8392-81732ed87512 -s
go run . agg https://www.wagslane.dev/index.xml
bootdev run 7347666d-7967-4c77-84c5-a0306bee8d05 -s
go run . agg https://www.wagslane.dev/index.xml
go run . agg 
bootdev run 7347666d-7967-4c77-84c5-a0306bee8d05 -s
go run . agg 
bootdev run 7347666d-7967-4c77-84c5-a0306bee8d05 -s
save sql/schema/002_feeds.sql
vim
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator up
cd gator
psql postgres
clear
sqlc generate
clear
sqlc generate
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
cd gator
sqlc generate
psql postgres
clear
go run . addFeed
go run . addFeed weg https://www.wagslane.dev/index.xml
clear
bootdev run f0126e90-414e-4a45-b6b6-758d59af012c -s
go run . addfeed "Hacker News RSS" "https://hnrss.org/newest"
go run . addfeed Hacker News RSS https://hnrss.org/newest
go run . addfeed "Hacker News RSS" "https://hnrss.org/newest"
go run . addFeed weg https://www.wagslane.dev/index.xml
go run . addFeed "weg" "https://www.wagslane.dev/index.xml"
go run . addFeed "weg test" "https://www.wagslane.dev/index.xml"
go run . addFeed "Hacker RSSD" "https://www.wagslane.dev/index.xml"
psql postgres
go run . addFeed "Hacker RSSD" "https://www.wagslane.dev/index.xml"
go run . addFeed "Hacker RSSD" "https://www.wagslane.dev/index.xl"
psql postgres
clear
bootdev run f0126e90-414e-4a45-b6b6-758d59af012c -s
go run . addfeed "Hacker News RSS" "https://hnrss.org/newest" 
bootdev run f0126e90-414e-4a45-b6b6-758d59af012c -s
go run . feeds
psql postgres
clear
bootdev run 3c66635a-cf05-471e-8ad8-ff3a80a6b177 -s
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
cd gator
sqlc generate
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
cd gator
sqlc generate
go run . feeds
bootdev run 3c66635a-cf05-471e-8ad8-ff3a80a6b177 -s
go run . feeds
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator up
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
cd gator
psql postgres
clear
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
cd gator
sqlc generate
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
clear
cd gator
sqlc generate
go run . follow "https://hnrss.org/newest"
cd
vim .gatorconfig.json
cd gator
:w
psql postgres
clear
sqlc generate
go run . following
sqlc generate
go run . following
sqlc generate
go run . following
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
go run . addfeed "Hacker News RSS" "https://hnrss.org/newest"
go run . reset
psql postgres
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
go run . register holgith 
go run . reset
go run . register holgith 
go run . addfeed "Lanes Blog" "https://www.wagslane.dev/index.xml"
clear
sqlc generate
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
go run . addfeed "Lanes Blog" "https://www.wagslane.dev/index.xml"
go run . reset
go run . addfeed "Lanes Blog" "https://www.wagslane.dev/index.xml"
clear
go run . register holgith
go run . addfeed "Lanes Blog" "https://www.wagslane.dev/index.xml"
git run l reset
go run . reset
go run . register holgith
go run . addfeed "Lanes Blog" "https://www.wagslane.dev/index.xml"
sqlc generate
go run . addfeed "Lanes Blog" "https://www.wagslane.dev/index.xml"
go run . reset
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
go run . reset
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
claer
clear
psql -U federicoreghini -d gator -c "TRUNCATE TABLE $(psql -U federicoreghini -d gator -t -c \"SELECT string_agg('\"' || tablename || '\"', ', ') FROM pg_tables WHERE schemaname = 'public'\") RESTART IDENTITY CASCADE;"<\n>
let tables = (psql -U federicoreghini -d gator -t -A -c "SELECT string_agg('\"' || tablename || '\"', ',') FROM pg_tables WHERE schemaname='public'")<\n>psql -U federicoreghini -d gator -c $"TRUNCATE TABLE ($tables) RESTART IDENTITY CASCADE;"<\n>
psql postgres
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
clear
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
let tables = (psql -U federicoreghini -d gator -t -A -c "SELECT string_agg('\"' || tablename || '\"', ',') FROM pg_tables WHERE schemaname='public'")<\n>psql -U federicoreghini -d gator -c $"TRUNCATE TABLE ($tables) RESTART IDENTITY CASCADE;"<\n>
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
let tables = (psql -U federicoreghini -d gator -t -A -c "SELECT string_agg('\"' || tablename || '\"', ',') FROM pg_tables WHERE schemaname='public'")<\n>psql -U federicoreghini -d gator -c $"TRUNCATE TABLE ($tables) RESTART IDENTITY CASCADE;"<\n>
psql postgres
clear
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
cd sql/schema
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
goose postgres postgres://federicoreghini:@localhost:5432/gator down
goose postgres postgres://federicoreghini:@localhost:5432/gator up
goose -dir sql/schema postgres "your-connection-string" status
cd gator
goose -dir sql/schema postgres "your-connection-string" status
cd
vim .gatorconfig.json
2025/08/16 20:15:12 goose run: no next version found<\n>clear
goose -dir sql/schema postgres "postgres://federicoreghini:@localhost:5432/gator?sslmode=disable" status
goose -dir sql/schema version
goose -dir sql/schema postgres "postgres://federicoreghini:@localhost:5432/gator?sslmode=disable" version
ls -la sql/schema/ | grep -E "\.sql$"
clear
cd sql/schema
goose postgres "postgres://federicoreghini:@localhost:5432/gator" version
goose postgres "postgres://federicoreghini:@localhost:5432/gator" status
goose postgres "postgres://federicoreghini:@localhost:5432/gator" up
goose
goose version
goose postgres "postgres://federicoreghini:@localhost:5432/gator" version
goose postgres "postgres://federicoreghini:@localhost:5432/gator" --version
goose postgres "postgres://federicoreghini:@localhost:5432/gator" status
pgstop
pgstart
goose postgres "postgres://federicoreghini:@localhost:5432/gator" status
goose postgres "postgres://federicoreghini:@localhost:5432/gator" version
goose postgres "postgres://federicoreghini:@localhost:5432/gator" up
psql postgres
cd gator
cd sql/schema
goose postgres "postgres://federicoreghini:@localhost:5432/gator" up
clear
goose postgres "postgres://federicoreghini:@localhost:5432/gator" up
clear
cd gator
sqlc generate
clear
vim
vim
cd nvim
vim
sqlc generate
bootdev run a5f72e6a-6af3-4568-9eb7-079a3809a46c -s
bootdev run dbc877bf-a777-416e-ac07-f6ca9559f48c -s
sqlc generate
bootdev run b1eb06af-f46e-40c1-a64f-836248122bb0 -s
:qa
cd ..
ls
cd ..
ls
cd webflyx
clear
bootdev run 741621f9-90a8-4fb6-92f0-db577628563d -s
cd ..
git clone git@github.com-personal:federico-reghini-eng/megacorp.git
cd megacorp
vim
bootdev run b7439eef-e733-4a11-9cd9-68d7526c071a -s
git config --local rerere.enabled false
rm -rf .git/rr-cache
bootdev run c45435f3-5649-4cbe-8d8f-0a4361bc7a08 -s
gitS add_contrib
cd ..
rm -rf megacorp
git clone git@github.com-personal:federicoReghini/megacorp.git
cd megacorp
gitS add_contrib
touch federicoReghini.txt
"https://github.com/federicoReghini" | save --append federicoReghini.txt
cat federicoReghini.txt
git add .
git commit -m "add myself as a contributor"
git push
git push -u origin add_contrib
gits
gitd
clear
cat .git/HEAD
bootdev run a42f300a-1a89-4ecc-b8f1-39ee88b0a17d -s
git reflog
gitS slander
git reflog
touch slander.md
"# Breaking News<\n><\n>MegaCorp CEO Lane enjoyed the live-action Last Airbender movie<\n>MegaCorp CTO ThePrimeagen is a fan of The Notebook (and most other Nicholas Sparks content)"| save --append slander.md
git commit -m "B: slander"<\n>
git add .
git commit -m "B: slander"<\n>
git reflog
bootdev run 015e56de-861b-4694-931d-d6fce619fe37 -s
gits
gitd
gits
gitD
bootdev run 4f9601a7-4365-4dbc-99c4-fd8260b97312 -s
git reflog
git cat-file -p 59eec14
git cat-file -p 99245ffb16c7eed0de312152ef4285189ec9919b
git cat-file -p a091da2ef20c5a1c59453a8048c6f7023167aa6b
touch slander.md
"# Breaking News<\n><\n>MegaCorp CEO Lane enjoyed the live-action Last Airbender movie<\n>MegaCorp CTO ThePrimeagen is a fan of The Notebook (and most other Nicholas Sparks content)"| save --append slander.md
git add .
git commit -m "B: recovery"<\n>
git push
bootdev run 3dff7de9-0a17-4242-9787-f4d64ae05d0b -s
gitS add_customers
vim
git add .
git commit -m "C: added orgs and customers"<\n>
gits
vim
git add .
git commit -m "D: add jayson to customers"
bootdev run 92ea654a-3112-4649-a46e-e06bb38ec709 -s
git push
gits
git merge main
git status
bootdev run 9973d6bd-37d9-49a2-8529-ab59adec9d1d -s
vin
vim
bootdev run e37ed7bf-cddb-4092-a617-220ab0e1fea6 -s
git add .
git commit -m "E: resolve conflict with stupid Greg's customer"
git log
git log --oneline 
bootdev run fbdb042c-4652-4413-b0e9-0083976eb8c4 -s
gir reset --hard
git reset --hard
git log --oneline 
git reset faa685c
git log --oneline 
bootdev run 4f043687-ce97-4c5e-9e28-f6d7c7a8df4b -s
git merge main
vim
git log --oneline 
vim
clear
git merge main
vim
git add .
git commit -m "E: fine, Greg can have this one."
bootdev run 9d1f10a1-8810-437e-b828-6b60e2dd83da -s
gits
git merge add_customers
gitd
git log --oneline 
gitlF
bootdev run b43c7b1d-a333-4b58-b677-d6d3459ecc43 -s
gitS delete_records
vim
git add .
git commit -m "G: changed partners"
bootdev run 27b1273d-1326-4314-8d50-c57d3b78526b -s
git log
git log --oneline 
git reset 388bb73
git log --oneline 
git reset --soft 388bb73
git reset --soft e569ccb
vim
git add .
git commit -m "F: removed records"
gits
vim
git add .
git commit -m "G: changed partners"
bootdev run 27b1273d-1326-4314-8d50-c57d3b78526b -s
git merge delete_records
git checkout --theirs customers/all.csv
git checkout --ours orgs/partners.txt
git add .
git commit -m "H: merge delete_records"
gitd
bootdev run 16379aaa-64a1-49bb-8ad2-acc33fac1761 -s
gitS banned
"first_name,last_name,company,title<\n>Kayha,tbd,TheMarchOfTime,sidekick<\n>sam,ctrlman,closedai,ceo" | save customers/banner.txt
vin
vim
git add .
git commit -m "I: create banned.tct file"
git commit --amend
git lo
git log --oneline 
gits
"first_name,last_name,company,title<\n>Ballan,Agrandian,Boots.lore,Protagonist<\n>sam,ctrlman,closedai,ceo" | save customers/banned.txt
"first_name,last_name,company,title<\n>Ballan,Agrandian,Boots.lore,Protagonist<\n>sam,ctrlman,closedai,ceo" | save customers/banned.csv
vim
git add .
git commit -m "J: create banned.csv"
gits
git log --oneline 
git reset --hard dd6641a
git log --oneline 
"first_name,last_name,company,title<\n>Kayha,tbd,TheMarchOfTime,sidekick<\n>sam,ctrlman,closedai,ceo" | save customers/banned.csv
git add .
git commit -m "I: create banned.csv file"
gits
bootdev run c2d1622b-1891-4280-aa7d-44acc1ac71a4 -s
giits
gits
git rebase main
git log --oneline --all
git branch
bootdev run 7654a0e4-96c0-4ba5-846d-3015e55f7d04 -s
vim
git checkout --ours customers/partners.csv
vim
git checkout --ours customers/banned.csv
git add .
git rebase --continue
git log --oneline 
bootdev run 2c292dd2-8ae9-40a7-8697-b4b141a1fed2 -s
gits
gitd
bootdev run ff370fac-aab9-4be9-b04a-1d1cfe9013c6 -s
gitS favs
"# Favorite Customers<\n>* Walter White, Heisenberg, Chemist" | save customers/favs.md
git add .
git commit -m "K: add favs.md"
gitS favs2
gits
"# Favorite Customers<\n>* Jesse Pinkman, Heisenberg's Assistant" | save customers/favs.md
git add .
git commit -m "L: add favs.md"
bootdev run 6a1c20a0-31cc-4a74-8d88-8cb347a8c930 -s
git config --local rerere.enabled true
gits
git rebase main
vim
git add .
git rebase --continue
gits
git rebase main
gti add .
git add .
git rebase --continue
bootdev run cf3f0957-04e1-41cf-8c96-d380b9f6a9ad -s
gits
gitD
git merge favs
gitd
bootdev run 6cc8524b-27e5-4c5a-aea4-b6fedff3d6f3 -s
git push
gitS temp_main
bootdev run f4dcf2a4-6bf9-49bf-9527-49a08d9e6a5a -s
git rebase -i HEAD~3
bootdev run b1245477-a09f-4c6b-87cc-ebf45780fcf8 -s
git log --oneline 
gitd
gits
git branch -m temp_main main
gits
bootdev run b4080c32-7c5e-4c48-ba0f-b5fbdbe994be -s
git push origin main --force
bootdev run 0bf9e947-1e83-43b3-a7fd-322a7c6caf04 -s
gitS add_scanner
vim
./scripts/scan.sh
git add .
git commit -m "K: scanned"
vim
./scripts/scan.sh
git add .
git commit -m "L: scanned"
vim
./scripts/scan.sh
git add .
git commit -m "M: scanned"
bootdev run df75d8a8-f665-455a-b4b0-b0404c775f25 -s
git push
vim
git rebase -i HEAD~3
bootdev run 1b6fc7a9-40f5-4180-9fe2-9bcd4747b024 -s
git push --force
clear
gits
gitd
git pull
git log --oneline 
git pull origin main
git log --oneline 
bootdev run f4b8e9f8-d31a-4920-9eb8-a09c8942f746 -s
vim
git stash
git stash list
bootdev run 9b640625-47b2-4cf1-b2ec-5ed860d96cf0 -s
git stash pop
bootdev run 70036e73-63a8-49eb-ab2a-280702d4aa56 -s
git stash -m "good marketing"
vim
git stash -m "bad marketing"
git stash list
bootdev run 87a2cbb8-a1ba-47fb-a730-bee777a000ad -s
./scripts/apux.sh ./scripts/scan.sh | grep ' sh'
vim
./scripts/apux.sh ./scripts/scan.sh | grep ' apux'
git add .
git commit -m "L: apux"
bootdev run 36a71535-6f5f-4b96-8b3e-b3cac8f8c302 -s
git stash list
git stash apply stash@{1}
git add .
git stash drop stash@{1}
git stash list
git stash pop
vim
git add .
git commit -m "M: apux"
bootdev run 255d529d-d150-48fe-b2d5-cd2552b31e19 -s
vim
git log --oneline 
git reset --soft ee816d9
vim
git add .
git commit -m "M: apux"
bootdev run 255d529d-d150-48fe-b2d5-cd2552b31e19 -s
git log --oneline 
git revert a84fb5d
bootdev run 4739f014-45dc-4de6-ab9d-4f04e326e606 -s
git diff
git log --oneline 
git diff 1a7650d a84fb5d
gits
gitS add_partners
vim
git add .
git commit -m "O: partners"
vim
git add .
git commit -m "P: partners"
git stash drop
bootdev run 5a52d245-b1c1-4724-9552-50e49f1d22da -s
git log --oneline 
gits
git log 2 --oneline 
git log -n 2 --oneline 
git log --oneline 
gits
git log --oneline -n 2
gits
git cherry-pick 28cdeb6
git log --oneline 
gitd
gits
gitD
clear
bootdev run 2b249442-a709-4bd9-a08d-a07a42f668b3 -s
git bisect start
git log --oneline 
git bisect bad HEAD
git bisect good 0d16f95
vim
git bisect good
vim
git bisect bad
vim
git bisect bad
vim
git bisect good
git show 4663ea9c07a3b24d6524ce83fc6c4e0a891d9618
git commit revert 4663ea9c07a3b24d6524ce83fc6c4e0a891d9618
git revert 4663ea9c07a3b24d6524ce83fc6c4e0a891d9618
git bisect reset
git log --oneline 
git revert 4663ea9c07a3b24d6524ce83fc6c4e0a891d9618
bootdev run a20a043e-c69f-437e-b8a2-efeefe1c0e2b -s
touch scripts/bisect.sh
vim
chmod +x scripts/bisect.sh
git bisect start
git bisect bad HEAD
git log --oneline 
git bisect good 0d16f95
git bisect run ./scripts/bisect.sh
vim
git worktree list
vim
git worktree list
bootdev run 0f4c1e0f-2fea-4b55-b105-c7d145e776fc -s
vim
mv ultracorp ../
ls
cd .
cd ..
ls
bootdev run 0f4c1e0f-2fea-4b55-b105-c7d145e776fc -s
cd megacorp
b
bootdev run 0f4c1e0f-2fea-4b55-b105-c7d145e776fc -s
cd ..
cd ultracorp
gits
cd megacorp
vim
git branch
git bisect end
git bisect reset
git bisect end
git branch
git worktree remove ultracorp
git branch
bootdev run 84e7ac26-8d2f-4c67-afb1-bbd6b39f4f93 -s
cd ..
vim
cat ../ultracorp/.git
ls
vim
cd workspace
ls
ls -la ultracorp/.git
ls -l ultracorp/.git
cat ultracorp/.git
cd megacorp
bootdev run 84e7ac26-8d2f-4c67-afb1-bbd6b39f4f93 -s
cd workspace
rm -rf ultracorp
cd megacorp
bootdev run 84e7ac26-8d2f-4c67-afb1-bbd6b39f4f93 -s
clear
cd megacorp
git log --oneline 
clear
git tag -a "candidate" -m "first sw version"
git tag
git lo
git log --oneline 
bootdev run 08279dd8-c768-4778-bdb6-853a072ff3c6 -s
git tag -a v1.0.0 -m "first sw version"
git tag
git push origin tags
git push origin --tags
bootdev run 5f8324c5-1495-4697-ba25-e177a379aa32 -s
cd workspace
ls
cd goland
ls
cd golang
ls
cd gator
cd gator
pgstop
pgstart
clear
clear
cd sql/schema
goose postgres "postgres://federicoreghini:@localhost:5432/gator" up
clear
psql postgres
clear
cd gator
cd sql/schema
clear
clear
sqlc generate
clear
sqlc generate
clear
go run . agg
go run . agg 1s
clear
goose postgres "postgres://federicoreghini:@localhost:5432/gator" up
sqlc generate
clear
go run . Browse
go run . browse
go run . browse 10
git add .
touch README.md
vim README.md
go install github.com/your-username/gator@latest<\n>
go install github.com/federicoReghini/gator@latest<\n>
go build
gator --version
gator register
clear
go install .
gator register
clear
vim
cd .config
ls $env.HOME/go/bin<\n>
ls ~/go/bin<\n>
cd gator
go install .
gator
clear
which gator
vim
cd ..
ls
cd gator
vim
go install .
vim
clear
vim
ls ~/go/bin<\n>
gator 
clear
vim
clear
clear
clear
vim
clear
cd nvim
nvim --version
nvim update
which nvim
brew update nvim
brew upgrade nvim
nvim --version
brew update --force --quiet<\n>brew upgrade<\n>
brew uninstall --cask wezterm<\n>brew install --cask wezterm<\n>
brew install --cask wezterm
brew upgrade nvim
clear
