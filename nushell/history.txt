cd
clear
cd nushell
$env.EDITOR
vim .zshrc
config nu
clear
cd
which nu
nvim config.nu
$nu.config-path
$nu.env-path
clear
cd
nvim config.nu
nvim env.nu
source env.nu
source config.nu
cd
nvim
source env.nu
source config.nu
cd
:q
$nu.env-path
cd nushell
cd
nvim .zshrc
cd nushell
cd
tmux
tmux ls
cd
nvim .zshrc
cd .config
nvim
clear
nvim
cd skhd
source skhdrc
nvim
source skhdrc
brew services restart skhd<\n>
nvim
brew services restart skhd<\n>
nvim
clear
cd client
clear
cd packages/cli
clear
cd config
clear
nvim
clear
cjkdaf
mouse
clear
cd
sh <(curl -L https://nixos.org/nix/install)
cd .zshrc
clear
cd .config/nix
clear
cd
nvim .zshrc
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nvim .config/nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim .config/nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
tmux
clear
cd .config/nix
nvim
cd ..
nvim
clear
cd nvim/lua/fede
nvim
clear
nvim
clera
clear
nvim
clear
nvim
s
ls
cd retail
ls
cd packages
ls
cd clint
clear
nvim
cd retail
nvim
clear
cd clint
nvim
git checkout -b clint/rust
gitc
git checkout develop
git checkout clint/rust
nvim
git checkout develop
cd retail
nvim
clear
nvim
cd
cd .config/nushell
nvim
cd nvim
cd clienteling
npm run dev
clint project
npm run dev
npm run update
clear
cd retail
clear
:qa
clear
nvim
cd .config
nvim tmux
ls
cd tmux
ls
source ~/.config/tmux/tmux.conf
nvim
clear
tmux detach
tmux attach -t work
clear
source ~/.config/tmux/tmux.conf
clear
clera
clear
cd
clear
cd nushell
clear
cd nvim/lua/fede
nvim
clear
nvim
source ~/.config/nushell/config.nu<\n>
gitd
nvim
source ~/.config/nushell/config.nu
gitd
gitc
nvim
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
gitc
clear
git branches
git --help
git branch --help
git branch --list
cd retail
git branch --list
lines
git branch | lines
gitc
git branch | lines | fzf --multi
git branch | lines | fzf --multi | first
git branch | lines | fzf --multi | second
clear
git branch | lines | fzf --multi 
git branch | lines
clear
git branch
git branch | lines
clear
git branch | lines | fzf
clear
git branch
git branch --list
clear
git branch | lines | fzf --multi 
git branch | fzf
git branch | lines | fzf
source ~/.config/nushell/config.nu
gitc
git checkout clint/rust
cd develop
git checkout develop
clear
clera
clear
git branch | lines
git branch
clear
git branch | fzf
git branch | ls
clear
gitc
source ~/.config/nushell/config.nu
clear
source ~/.config/nushell/config.nu
clear
git branch | fzf | describe
clear
git branch | fzf | describe
git branch | fzf 
gitc
git branch | fzf | into string | str trim
source ~/.config/nushell/config.nu
gitc
fs
source ~/.config/nushell/config.nu
gitc
clear
gf
clear
git fetch
clear
nvim
clear
nvim
cd client
cd src/assets
ls
cd  images
ls
npm run dev
clear
git fetch
clear
git fetch
gd
gf
gitc
clear
npm run dev
npm run update
clear
npm run update
clear
nvim
clear
cd retail
gitc
clear
gitc
clear
nvim
clear
clear
cd retail
clear
cd clint
cd clint
mkdir src/commands/
touch src/command/mod.rs
clear
cargo install clap
clear
nvim
cargo run -- login --global
cargo run -- login 
clear
cd packages/cli
cargo run -- logout
cargo install ini
cargo add ini
cargo run -- logout
clear
git add .
git commit -m "rust"
gitc
clear
nvim
clear
nvim .zshrc
clear
cd fede
nvim
nix search ripgrep
nix-shell search ripgrep
clear
nix search nixpkgs ripgrep
cd nix
nvim
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nvim
nvim
clear
clear
cd .config
nvim
nix search nixpkgs sketchybar
cd nix
nvim config.nu
nvim flaker.nix
nvim
clerar
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nvim flaker.nix
nvim
cd nix
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
rm -rf ~/Library/Fonts/HackNerdFont-Bold.ttf
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
cd ~/Library/Fonts/
ls
rm -rf | first 9
ls | where # <= 10
ls
ls | get 2
ls | $in
ls | $#
ls | where name =~ Hack
ls | where name =~ Hack | each { rm $in.name } | null
ls
ls | where name =~ Hack | each { rm -rf $in.name } | null
ls
ls | where name =~ Hack and type == file | each { rm -rf $in.name } | null
ls
ls | where name =~ Hack and type == file | each { rm $in.name } | null
ls
ls | where name == HackNerdFont-BoldItalic.ttf and type == file | each { rm $in.name } | null
ls
finder
find
clear
ls | where name == HackNerdFont-BoldItalic.ttf and type == file | each { rm $in.name } | null
ls
rm -rf HackNerdFont-BoldItalic.ttf
ls
rm -rf HackNerdFont-Italic.ttf
rm -rf HackNerdFont-Regular.ttf
ls
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
ls
rm -rf HackNerdFontMono-Regular.ttf
rm -rf HackNerdFontMono-Bold.ttf
rm -rf HackNerdFontMono-BoldItalic.ttf
rm -rf HackNerdFontMono-Italic.ttf
ls
rm -rf HackNerdFontPropo-Italic.ttf
rm -rf HackNerdFontPropo-Bold.ttf
rm -rf HackNerdFontPropo-BoldItalic.ttf
rm -rf HackNerdFontPropo-Regular.ttf
ls
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
cd
cd nu
nvim
clear
cd
nvim .zshrc
source ~/.zshrc
clear
sketchybar
clear
brew services start sketchybar
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim flake.nix
cd nvim
nvim
clear
nvim
clear
cd .config
nvim
clear
nvim
clear
cd client
clear
cd client
cd retail
clear
git checkout -b mc/feature/expo
clear
clear
npm i -g eas-cli
npx expo-doctor@latest
npx expo install --check
npx expo install expo@^52.0.0 --fix
clear
nvim
git push
fuck
thefuck
git push -u origin mc/feature/expo
npm run dev
clear
npm run dev
clear
git checkout -b MC/feature/expo
git checkout -b MC/feature/expo_52
gitc
git branch -d MC/feature/expo_52
clear
git checkout -b MC/feature/expo_52
nvim
clear
nvim
gitc
clear
clear
cd packages/cli
cd packages/cli
clear
npm install csv-parser --workspace=packages/cli
clear
nvim
clear
npm run buiold
npm run build
clear
npm run build
clint make-issues --path=~/Desktop/to-do-rp-csv
clint project
nvim
clear
npm run build
clint make-issues --path=~/Desktop/to-do-rp-csv
clint -h
clint help make-issues
clint make-issues -p ~/Desktop/to-do-rp-csv
clint make-issues --path ~/Desktop/to-do-rp-csv
npm run build
clint make-issues --path ~/Desktop/to-do-rp-csv
clint make-issues --path ~/Desktop/todo.csv
clear
curl -H "Authorization: Bearer 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" \<\n>     https://api.github.com/repos/organization_name/repository_name/issues<\n>
curl -H "Authorization: Bearer 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" \<\n>     https://api.github.com/repos/EngineeringRetailPlatform/retail-platform-mono/issues<\n>
curl -H "Authorization: Bearer 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" \<\n>     https://api.github.com/EngineeringRetailPlatform/retail-platform-mono/issues<\n>
npm run build
clint make-issues --path ~/Desktop/todo.csv
npm run build
clint make-issues --path ~/Desktop/todo.csv
npm run build
clint make-issues --path ~/Desktop/todo.csv
npm run build
clint make-issues --path ~/Desktop/todo.csv
clear
clint make-issues --path ~/Desktop/todo.csv
clint make-issues --path ~/Desktop/todos.csv
cd
cd ~/Desktop
ls
ls | where name =~ todo
cd packages/cli
clint make-issues --path ~/Desktop/todo.csv
npm run build
npm run dev
clint make-issues --path ~/Desktop/todo.csv
npm run bl
npm run build
clint make-issues --path ~/Desktop/todo.csv
gh 
nix search nixpkgs gh
cd nix
nvim flake.nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
gh -v
clear
npm run build
clint make-issues --path ~/Desktop/todo.csv
gh auth status
gh issue list --repo <owner>/<repo-name><\n>
gh issue list --repo EngineeringRetailPlatform/retail-platform-mono
gh issue create --title "Test Issue" --body "This is a test issue body" --repo "EngineeringRetailPlatform/retail-platform-mono"<\n>
cd
cd retail
open ~/Desktop/todo.csv
cd ~/Desktop/todo.csv
cd
cd ~/Desktop/todo.csv
cd Desktop
open todo.csv | to json > todo.json<\n>
clear
clint make-issues --path ~/Desktop/todo.csv
npm run build
clint make-issues --path ~/Desktop/todo.csv
clear
cd retail
cd ..
ls
git clone git@github.com:EngineeringRetailPlatform/ebsn-front-services.git
rm -rf ebsh-front-services
git clone git@github.com:EngineeringRetailPlatform/ebsn-front-services.git
rm -rf ebsh-front-services
ls
rm -rf ebsn-front-services
ls
rm -rf ebsh-front-services
git clone git@github.com:EngineeringRetailPlatform/ebsn-front-services.git
cd ebsn-front-services
cd ebsn-front
clear
npm i
npm run test
clear
npx jest ./src/backofficeService/backofficeService.spec.ts
cd ebsn-front
ls
cd src
ls
npx jest ./src/services/backofficeService/backofficeService.spec.ts
clear
npx jest ./src/services/backofficeService/backofficeService.spec.ts
nvim
npx jest ./src/services/backofficeService/backofficeService.spec.ts
open todo.csv
open todo.csv | from csv --separator ';'
open todo.csv 
clear
npm run build
clint make-issues --path ~/Desktop/todo.csv
clear
cd tmux
nvim
clear
nvim
clear
clear
npx jest ./src/services/backofficeService/backofficeService.spec.ts
npx jest ./src/services/backofficeService/backofficeService.spec.ts
clint make-issues --path ~/Desktop/todo.csv
clear
clint make-issues --path ~/Desktop/todo.csv
open todo.csv 
clear
open todo.csv 
clear
nvim
gitc
clear
cd presenter
npx expo install expo@^52.0.0 --fix
npx expo doctor
npx expo-doctor
npx expo install --check
cd client
npx expo-doctor
npx expo install --check
clear
turbo clean
cd retail
turbo clean
npx @turbo/codemod@latest update
clear
npx expo-doctor
npx expo-doctor
npm i
clear
nvim
nvim
npm i
nvim
npx expo-doctor
npx expo-doctor
nvim
clear
npx expo install --check
clear
clear
nvim
clear
cd packages/cli
nvim
clear
cd rust
ls
cd example
clear
cargo run
c
cargo run
cargo run 
cargo run ciao
cargo run
cargo run write
cd .config
nvim
cd fede
nvim
clear
nvim
clear
cd desktop
clear
open todo.csv
open todo.numbers
open todo.csv
open --raw todo.csv
open --raw todo.csv | from csv
open --raw todo.csv 
<\n>   · ──┬─<\n>   ·   ╰── CSV error: rec
clear
open --raw todo.csv 
open --raw todo.csv | from csv --separator ';'
gh copilot explain "how can i use nushell to run for each row from a csv readed with nushell to create an issue where 3 columns should be use for the message of the issue and writed in md"
gh copilot explain "how can i use nushell to run for each row from a csv readed with nushell to create an issue where 3 columns should be use for the message of the issue and writed in md. the command should be this: gh issue create --title "Test Issue" --body "This is a test issue body" --repo "EngineeringRetailPlatform/retail-platform-mono""
gh copilot explain "how can i use nushell to run for each row from a csv readed with nushell to create an issue where 3 columns should be use for the message of the issue and writed in md. the command should be this: gh issue create --title "Test Issue" --body "This is a test issue body" --repo "EngineeringRetailPlatform/retail-platform-mono" the body it should be a md like follow ### Epic \n $it.epic \n ### As \n User \n ### I want to \n $it.IwantTo \n ### So that \n $in.SoThat "
open --raw todo.csv | from csv --separator ';' | each { println!($it)}
open --raw todo.csv | from csv --separator ';' | each { |row| println!($row)}
open --raw todo.csv | from csv --separator ';' | each { |row| }
gh copilot explain "how can i use nushell to run for each row from a csv readed with nushell to create an issue where 3 columns should be use for the message of the issue and writed in md. the command should be this: gh issue create --title "Test Issue" --body "This is a test issue body" --repo "EngineeringRetailPlatform/retail-platform-mono" the body it should be a md like follow ### Epic \n $it.epic \n ### As \n User \n ### I want to \n $it.IwantTo \n ### So that \n $in.SoThat "
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"### Epic \n ($row.Epic) \n ### As \n User \n ### I want to \n ($row.IwantTo) \n ### So that \n ($row.SoThat)" --repo "EngineeringRetailPlatform/retail-platform-mono"}
gh project view <project_id> --json columns --repo EngineeringRetailPlatform/retail-platform-mono
gh project view Product Board --json columns --repo EngineeringRetailPlatform/retail-platform-mono
gh project view 
gh auth refresh -s read:project
gh project view 
gh project -h
gh project list --owner EngineeringRetailPlatform
gh project view PVT_kwDOCoNLR84AsTvm --json columns --repo EngineeringRetailPlatform/retail-platform-mono
gh project view PVT_kwDOCoNLR84AsTvm 
gh project view PVT_kwDOCoNLR84AsTvm --json columns --owner EngineeringRetailPlatform
gh project view PVT_kwDOCoNLR84AsTvm  --owner EngineeringRetailPlatform
gh project view 1  --owner EngineeringRetailPlatform
gh project view 5  --owner EngineeringRetailPlatform
gh issue status
gh issue status --owner EngineeringRetailPlatform
cd retail
gh issue status
gh issue status --json projectCard
gh issue status --json projectCards
gh issue status --json projectItems
gh issue list --json number,title --jq '.[] | {number, title}'<\n>
gh project cards list --project-id <a93fb6e7> --json content_url<\n>
gh project field-list
clear
nvim
cd nix
nvim
cd nushell
nvim
clear
clear
nvim
vim
source ~/.config/nushell/config.nu
q
source ~/.config/nushell/env.nu
q
clear
source ~/.config/nushell/config.nu
clear
vim 
gh issue
which nu
clear
c;ear
clear
cd client
nvim
clear
nvim
npx jest ./src/services/backofficeService/backofficeService.spec.ts
npm i
nvim
clear
gitc
npm run dev
clear
npm run dev
clear
clear
cd retail
cd desktop
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | null) \n # So that \n ($row.SoThat | null)" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono"} | null<\n>
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | null) \n # So that \n ($row.SoThat | null)" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono"}
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | null) \n # So that \n ($row.SoThat | null)" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-monoa" }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | null) \n # So that \n ($row.SoThat | null)" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"user story, Epic ($row.Epic)" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw todo.csv | from csv --separator ';' | each { |row| }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')"--label $"Epic ($row.Epic)" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')"--label $"'Epic ($row.Epic)'" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"Epic ($row.Epic)" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
clear
open --raw todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"Epic ($row.Epic)" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
cd retail
open --raw ~/Desktop/todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"Epic ($row.Epic)" --label "user story" --project "Product Board" --repo "EngineeringRetailPlatform/retail-platform-mono" }
open --raw ~/Desktop/todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic | null) \n # As \n User \n # I want to \n ($row.IwantTo | 'insert') \n # So that \n ($row.SoThat |'insert')" --label $"Epic ($row.Epic)" --label "user story" --repo "EngineeringRetailPlatform/retail-platform-mono" }
clear
cd retail
clear
nvim
clear
git fetch
gf
clear
nvim
git fetch
git checkout MyClientelingMock
clear
npm run dev
clear
open --raw ~/Desktop/todo.csv | from csv --separator ';' | each { |row| gh issue create --title $row.Title --body $"# Epic \n ($row.Epic) \n # As \n User \n # I want to \n ($row.IwantTo) \n # So that \n ($row.SoThat)" --label $"Epic ($row.Epic)" --label "user story" --repo "EngineeringRetailPlatform/retail-platform-mono" }
clear
nvim
clear
cd nix
nvim
dal
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
cd nushell
nvim
source ~/.config/nushell/config.nu
nvim
vim
v
vim
clear
nvim
clear
cd cognito
cd packages/cognito
nvim
clear
nvim
cd ..
nvim
cd cognito
npm publish
nvim
npm publish
cd services
nvim
cd retail
cd packages/services
nvim
clear
cd cognito
npm publish
cd queue
cd ..
ls
rm -rf monclient-app-queue-services
git clone git@github.com:EngineeringRetailPlatform-Moncler/monclient-app-mulesoft-queue-manager.git
git checkout develop
cd queue
cd monclient-app-mulesoft-queue-manager
git checkout develop
clear
git fetch
npm i
npm run dev
nvim
npm run dev
npm i
npm run dev
nvim
npm install --save @babel/runtime
clear
npm run dev
clear
npm install --save @babel/runtime
npm run dev
nvim
clear
nvim
cd nix
nvim
nvi
vim
npm i
npm run dev
clear
nvim
vim
npm i
npm run dev
clear
nvim
cd retail
clear
nvim
cd lua
cd nvim
nvim
clear
nvim
clear
nvim
nvim
npm run dev
clear
nvim
gg
gf
git pull
clear
nvim
cd .config
nvim
git fetch
git pull
nvim
vi
vim
npm run dev
clear
nvim
clear
nvim
cd client
npx lint-staged
cd retail
gf
git pull
nvim
git pull
nvim
gf
git pull
clear
git whoami
git config list
clear
cd retail
clear
nvim
gf
git pull
gitc
clear
npm i
clear
nvim
npm run dev
clear
cd retail
clear
turbo clean
npx @turbo/codemod@latest update
nvim
npx @turbo/codemod@latest update
clear
nvim
vnim
nvim
clear
nvim
npm run build
npm i
npx expo-doctor
npx expo install --check
npm run build
cd packages/cli
npm run build
clear
npx lint-staged
gh copilot explain "<\n>/Users/federicoreghini/Documents/beije/engineering/retail-platform-mono/apps/native/my-clienteling/src/constants/Colors.ts<\n>  1:1  error  Definition for rule '@typescript-eslint/no-empty-object-type' was not found     @typescript-eslint/no-empty-object-type<\n>  1:1  error  Definition for rule '@typescript-eslint/no-wrapper-object-types' was not found  @typescript-eslint/no-wrapper-object-types<\n>"
nvim
clear
clera
clear
gitc
nvim
npm run dev
npm i
clear
clear
npm rund ev
vim
nvim
clear
nvim
cd ebsn-front
cd example
cd ebsn-front
clear
git fetch
git pull
git pull master
git pull origin master
nvim
gitc
clear
gitc
gitd
nvim
cd nushell
nvim
clear
clerar
clear
clear
git pull
clear
source ~/.config/nushell/config.nu
gitd
git checkout MyClientelingMock
clear
npm run build
npm publish
nvim
cd nvim
npm run dev
nvim
npm i
cd lib
cd ..
npm run build
cd lib
npm publish
clear
clear
ear
clear
cd ..
clear
nvim
npm run build
cd lib
npm publish
clear
cd ..
npm i
gf
clear
gh copilot explain "how to map all keypmas of tmux"
nvim
cd tmux
nvim
tmux attach
tmux kill-session -t work
tmux ls
cd client
cd retail
clear
tmux attach -t work
gh copilot explain "create new session with name"
gh copilot explain "create new session within tmux with name"
clear
cd client
clear
cd client
clear
tmux new-session -s work
tmux kill-session -t work
source ~/.config/tmux/tmux.conf
gh copilot explain "how to re source tmux config within tmux"
:source-file ~/.config/tmux/tmux.conf
:source ~/.config/tmux/tmux.conf
source ~/.config/tmux/tmux.conf
clear
gh copilot explain "how to change index of a window in tmux"
clear
cd clien
clear
clear
nvim
gf
nvim
clear
cd nvim
npm run dev
nvim
clear
clear
gf
clear
gid
gitd
clear
npm run dev
clear
clera
clear
vim ebsn
cd ebsn-front
vim
cd ebsn-front
clear
gf
clear
npm run test:assisted-sales
npm i
nvim
clear
git fetch
clear
nvim
clear
git pull origin MC/feature/newcontact
npm run test:assisted-sales
clera
clear
npm run dev
clear
nvim
gf
npm run dev
clear
vim
cd .config
nvim
nvim
clear
nvim
vim
nvim
nvim
cd
vim .zshrc
clear
nvim .config
clear
nvim
cd .config
nvim
source ~/.config/tmux/tmux.conf
tmux attach -t work
tmux detach
source ~/.config/tmux/tmux.conf
tmux source-file ~/.config/tmux/tmux.conf<\n>
clear
nvim
clear
cd client
clear
nvim
nvim
cd
clear
ls
la
clear
ls -l
nvim .tmux.conf
clear
ls
clear
tmux detach
tmux attach -t work
tmux ls
tmux source-file ~/.config/tmux/tmux.conf
cd .config
nvim
tmux list-keys | grep C-q<\n>
nvim
tmux source-file ~/.config/tmux/tmux.conf
nvim
tmux source-file ~/.config/tmux/tmux.conf
tmux list-keys | grep C-q<\n>
find ~ /etc -name "tmux.conf"<\n>
clear
tmux attach -t work
tmux detach
tmux list-keys | grep C-q<\n>
tmux list-keys | grep C-q
tmux source-file ~/.config/tmux/tmux.conf
tmux list-keys | grep C-q
tmux list-keys | grep C-s
nvim
cd .config
nvim
tmux source-file ~/.config/tmux/tmux.conf
nvim
tmux list-keys | grep C-o
tmux list-keys | grep C-t
nvim
tmux source-file ~/.config/tmux/tmux.conf
tmux list-keys | grep C-t
tmux list-keys | grep C-q
tmux list-keys | grep C-
nvim
clear
nvim
tmux source-file ~/.config/tmux/tmux.conf
tmux list-keys | grep C-q
tmux list-keys | grep C-s
clear
nvim
nvim
cd packages/utils
npm init -y
npx tsc --init<\n>
cd packages/utils
clear
mkdir src
touch src/validation/email.ts
mkdir src/validation
touch src/validation/email.ts
clear
cd reatil
npm install --save-dev jest ts-jest @types/jest --workspace=packages/utils<\n>
npm install --save-dev jest ts-jest @types/jest --workspace=utils
nvim
cd ..
nvim
cd retial
cd retail
turbo gen workspace --type package --name utils
cd packages/utils
nvim
cd ..
cd ..
clear
cd utils
cd retail
npm install --save-dev jest ts-jest @types/jest --workspace=utils
npm install --save-dev typescript --workspace=utils
cd packages/utils
npm run build && npm run test
npm run build and npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
clear
npm run test
clear
npm run build
npm run test
npm run build
npm run test
npm run build
clear
npm run build
clear
npm run build
clear
npm run build
node cjs-test.js
node esm-test.mjs
npm run build
node cjs-test.js
node esm-test.mjs
npm run build
node esm-test.js
npm run build
cd retail
npm i
cd client
npm run dev
cd retail
npm i
c;ear
clear
cd ..
npx create vite utils --template vanilla-ts
npm create vite utils --template vanilla-ts
npm run build
cd utils
npm run build
clear
turbo gen workspace --type package --name @clienteling/utils --copy packages/services
clear
q
:q
cd packages
clear
turbo gen workspace --type package --name @clienteling/utils --copy @eng-retail-platform/front-services
cd retail
npm i
npm run dev
cd packages/utils
npm run build
npm run test
npm run build
clear
npm run build
clear
npm run test
npx ts-jest config:init
npm run test
clear
npm i
npm run dev
cd client
nvim
npm run build
clear
npm run build
clear
npm run dev
npm i
cd retail
npm i
clear
npm run build
turbo gen workspace --type package --name @clienteling/utils --copy @clienteling/twilio
cd packages
turbo gen workspace --type package --name @clienteling/utils --copy @clienteling/twilio
cd retail
npm i
cd utils
nvim
npm run test
nvim
npm run build
clear
npm run build
clear
cd retail
nvim
tubo clean
turbo clean
nvim
npm i
cd packages/utils
npm run build
npm run test
clear
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
npm run test
npm run build
cleawr
clear
npm run build
clear
npm run build
clear
npm i
clear
turbo dev --filter=my-clienteling
npx @turbo/codemod@latest update
turbo dev --filter=my-clienteling
nvim
turbo dev --filter=my-clienteling
clear
nvim
nvim
clear
cd client
npm run dev
turbo dev --filter=my-clienteling
npm i --save-del @babel/highlight --workspace=my-clienteling
turbo dev --filter=my-clienteling
clear
nvim
clear
gf
turbo clean
npx @turbo/codemod@latest update
nvim
clear
npm i
cd client
npm run dev
clear
cd retail
nvim
npm i --save-dev  typescript@latest
clear
nvim
clear
turbo dev --filter=my-clienteling
nvim
turbo dev --filter=my-clienteling
clear
nvim
clear
cd retail
clear
turbo gen workspace --type package --name @clienteling/utils 
clear
cd packages/utils
clear
npm init jest@latest
cd retail
npm i --save-dev  jest@latest
npm i --save-dev  jest@latest --workspace=@clienteling/utils
nvim
npm i --save-dev  jest@latest --workspace=utils
npm i --save-dev --workspace=@clienteling/utils jest@latest
cd packages/utils
npm run teset
npm run test
npm install --save-dev --workspace=@clienteling/utils  ts-jest
npm install --save-dev --workspace=@clienteling/utils  @types/jest
npm run test
npm run build
npm run test
npm i
clear
npm i
npm run test
clear
npm i
npm run test
npm run build
npm i
cd client
npm run dev
cd retail
npm i
clear
gf
cd retail
cd reatil
cd retail
gf
nvim
clear
clear
clear
nvim
cler
clear
cd client
clear
git checkout -b feature/247-refactor
clera
clear
nvi
nvim
clear
npm run dev
clear
gf
git fetch
vim
clear
git push
clear
gitc
gf
git pull
gitd
clear
nvim
clear
cd packages
nvim
clear
cd reatil
cd retail
nvim
vim
cd retail
cd client
nvim
clear
clea
clear
clear
cd packages
npm run build
cd packages
cd utila
cd utils
npm run build
cd reatil
cd retail
npm i
clear
npm run build
cd utils
npm run build
cd twilio
cd ../twilio
clear
npm run build
cd retail
npm i
cd utils
npm i
npm run build
cd reatil
cd retail
npm i
nvim
cd my-presenter
cd utils
npm run build
clear
npm run build
clera
clear
npm run build
npm run tst
npm run test
cd retail
npm i
nvim
cd client
nvim
gf
clear
cd retail
clear
cd apps
ls
cd web
ls
npx create vite pkgs-test
npm create vite pkgs-test
cd pkgs-test
npm i
cd pkgs-test
npm run dev
gf
clear
nvim
clear
cd retail
turbo dev --filter=pkgs-test
clear
nvim
npm i
cd utils
nvim
npm run build
cd retail
nvim
cd pkgs-test
cd utils
npm run build
cd utils
nvim
npm run build
nvim
npm run build
nvim
npm run build
nvim
npm run build
clear
cd utils
npm run build
npm run dev
cd retail
gf
clear
clear
nvim
cd retail
clera
clear
nvim
npm run dev
npm i
gd
gf
clear
git pull
clear
npm run build
clear
cd lib
clear
cd ..
npm run build
cd lib
npm publish
clear
npm run dev 
claer
clear
npm i
npm run dev 
clera
clear
nvim
cd nushell
nvim
npm run dev 
ls -a
ls -l
la
clear
cd client
gf
clear
git pull
clear
nvim
git clone https://github.com/EngineeringRetailPlatform/retail-platform-mono.wiki.git
https://github.com/EngineeringRetailPlatform/retail-platform-mono.wiki.git
git clone github.com:EngineeringRetailPlatform/retail-platform-mono.wiki.git
clear
nvim
cd ..
git clone github.com:EngineeringRetailPlatform/retail-platform-mono.wiki.git wiki
nvim
cd wiki
nvim
clear
cd wiki
clear
clera
clear
cd retail
clear
cd utils
npm run dev 
gf
clear
nvim
npx lint-staged
tmux attach -t work
clear
clear
clear
nvim
nvime
nix search nixpkgs mozilla
vim nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
vim nix
cd aerospace
osascript -e 'id of app "Firefox"'
nvim
osascript -e 'id of app "Postman"'
npm run build
cd lib
npm publish
clear
npm i
cd ..
npm run build
cd lib
npm publish
cd packages/utils
npm run build
cd utils
npm run test
npm run build
cd queue
clear
cd queue
clear
npm run test
clear
npm run test
nvim
clear
cd services
nvim
cd packages/services
clear
nvim
npm run dev
clear
gf
clear
npm run dev
npm run test
clear
gf
git pull
nvim
clear
gitc
git checkout pipeline/develop
git merge develop
git push
git checkout pipeline/test
git merge test
git merge develop
git push
git checkout pipeline/production
git merge develop
git push
clear
gitc
clear
cd queue
nvim
npm run dev
clera
clear
nvim
clear
cd retail
cd pkgs-test
npm run preview
clear
cd ..
nvim
clear
cd ..
cd retail
clear
cd retail
clear
npm run dev
clear
gf
git pull
nvim
clear
aerospace lsit-apps
aerospace list-apps
tmux attach -t work
clear
cd aerospace
aerospace list-apps
nvim
clear
cd .config
clear
clear
cd example
clear
clear
clear
ls
clea
clear
cd documents
ls
cd projects
ls
git clone git@github.com:federicoReghini/toto.git
mkdir toto
cd toto
git init
nvim
git config --global init.defaultBranch main
clear
cd ..
ls
ls
la
cd .git
cd toto
nvim
cd
la
vim .git
cd .git
nvim
cd
clera
clear
cd ~/.gitconfig
cd .gitconfig
git config --global --list<\n>
vim ~/.gitconfig
cd ~/.gitconfig
vim ~/.gitconfig
cd .ssh
nvim
git fetch
nvim
git fetch
clear
git branch -M main
clear
bun create qwik@latest
npm create qwik@latest
npm run qwik add tailwind
cd toto
npm run qwik add motion
npm install motion
npm run start
npm run preview
clear
cd ..
cd toto
nvim
clear
npm create qwik@latest
npm run qwik add motion
npm run qwik add tailwind
clear
npm install motion
nvm ls
clear
nvm
nvm ls
clear
nvim
nvim
cd ..
cd toto
clear
nvim
npm run preview
npm run dev
clear
npm run lint
npm run dev
clear
nvim
cd .config
nvim
clear
nvim
npm run dev
cd toto
clear
cd documents
cd downloads
cd ..
ls
cd downloads
ls
npm run dev
clear
clear
:qa
clear
nvim
clear
nix search nixpkgs syncthing
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim
gf
npm run dev
npm install --save react-native-signature-canvas --workspace=my-clienteling
npm run build
npm install -g eas-cli
npm run build
clear
eas device:create
npm run build
clear
gitc
npx expo-doctor
npx expo install --check
nvim
npx expo install expo@latest
npx expo install --fix
npx expo-doctor@latest
npx expo install --check
npx expo install --fix
npx expo-doctor
npx expo install metro@^0.81.0 && metro-resolver@^0.81.0 && metro-config@^0.81.0
npx expo install metro@^0.81.0 
npx expo install metro-resolver@^0.81.0 
npx expo install metro-config@^0.81.0 
npx expo-doctor@latest
npx expo install metro@latest
npx expo-doctor@latest
nvim
npx expo-doctor@latest
npx expo install --fix
npx expo install --check
clear
npm run build
clear
npx lint-staged
nvim
ear
clear
turbo gen workspace --type app --name mc 
cd apps/native/mc
npx create-expo-app@latest
nvim
npx create-expo-app@latest
nvim
cd ..
cd retail
npm i
turbo clean
clear
nvim
npm i
clear
nvim
cd mc
npm run dev
cd packages/cli
npm run build
nvim
cd ..
ls
cd cli
nvim
npm run build
cd retail
npm i
clear
cd packages/cli
npm run build
cd mc
npm run dev
clint login
npm run dev
cd ..
nvim
cd mc
npm run dev
clear
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nix search nixpkgs wezterm
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
y
cd .config/nix
nvim 
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim
clear
nvim
npx expo-doctor@latest
npm why metro
nvim
clear
cd ..
cd mycli
nvim
cd clienteling
nix search nixpkgs vscode
clear
nvim
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
q
clear
cd .config/nix
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
vim nix
nvim
clear
nvim
clear
nvim
clear
npm run dev
clear
nvim
cd retail
gitc
nvim
clear
clear
npm i
clear
clear
npm run de
vim nix
nvim
gf
git pull
nvim
git pull
nvim
npm run build
cd lib
npm publish
cd ..
clear
npm i
nvim
npm run dev
git reset --soft HEAD~1
nvim
clear
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
which stow
clear
stow .
nvim
cd
la
cat .zshrc ~/.config/.zshrc
clear
cd .config
nvim
cd
vim .zshrc
cd .config
vim .zshrc
cd
nvim
cd .config
stow .
ls -a
rm .DS_Store
ls -a
stow .
clear
cd $HOME
cd $env.HOME
ls -lah .zshrc
clear
cd .config
vim nix
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
cd
vim
clear
cd .config
clera
clear
clear
clear
nvim
clear
cd ebsn
clear
nvim
npm i
clear
gf
vim
nvim
clear
nvim
gf
git pull origin develop
nvim
npm run test:light-report
npm i
npm run test:light-report
clear
nvim
git pull
nvim
clear
npm run dev
clear
npm run dev
npx expo-doctor
npx expo install --fix
clear
npm run dev
clear
npm i
nvim
npm run build
cd lib
npm run publish
npm publish
cd ..
clear
npm run test:light-report
c;ear
clear
npm run dev
cd
la
vim .zshrc
cd .config
npm run build
cd lib
npm publish
npm i
nvim
clear
clera
clear
cd ..
clear
nvim
clear
cd projects
ls
cd toto
clear
cd toto
clear
npm run dev
clear
nvim
clear
git push
nvi
nvim
git init
git add remote origin git@github.com:federicoReghini/toto.git
git remote add origin git@github.com:federicoReghini/toto.git
git add .
git commit -m "first commit"
git push -u origin main
git push -u origin main
clear
nvim
gf
gp
git pull
clear
git config --help
git config ls
git config
git config --help
git config list
git config pull.rebase --help
git config list
clear
nvim
npm run dev
clear
npm i react-native-signature-canvas --filter=my-clienteling
nvim
npm i
:qa
npm run build
cd toto
cd ..
mkdir hackethon
cd hackethon
touch pf.js
nvim
clear
cd hackethon
vim pf.js
node pf.js
node da2.js
node day2.js
npm run dev
clear
npm run dev
gf
nvim
clear
clear
git checkout package/core
git checkout -b package/core
cd core
cd packages/core
cd retail
cd packages/core
cd retail
cd packages/core
clear
clear
nvim
cd ..
cd retail
turbo gen workspace --type packages --name ui 
cd packages/ui
cd retail
cd packages/ui
npx create-expo-app --template expo-template-blank-typescript
npx -p @storybook/cli sb init --type react_native
npx degit chromaui/intro-storybook-react-native-template#main taskbox
npm i
npm run storybook:ios
npx expo-doctor
npx expo install --check
clear
npm i
clear
npm run storybook:ios
npm i
npm expo-doctor
npx expo-doctor
npx expo install --check
nvim
npm run storybook:ios
npm start -- --reset-cache
npm run storybook:ios
npm run start
npm run storybook:ios
nvim
clear
npm i
npm run storybook:ios
clear
cd toto
cd ..
npx degit chromaui/intro-storybook-react-native-template#main taskbox
cd taskbox
nvim
npm i
npm run storybook:ios
nvm ls
cd
curl -fsSL https://fnm.vercel.app/install | bash
cd 
la
la | where name === .fnm
la | where name == .fnm
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
node
clear
nvm
which nvm
which node
clear
which fnm
clear
cd
la
la | where name == .fnm
^ls
^nvm
which fnm
fnm
fnm install node
fnm install 20.17.0
sudo find / -name ".fnm" 2>/dev/null<\n>
sudo find / -name ".fnm"<\n>
find ~ /etc -name ".fnm"
sudo find ~ /etc -name ".fnm"
^find ~ /etc -name ".fnm"
clear
find . -name ".fnm"
sudo find / | where $it =~ /\.fnm$/ | each { echo $it }<\n>
sudo find / | where $it =~ /\.fnm$/ 
ls ~ --recursive | where name =~ /\.fnm$/<\n>
cd .config
la
which fnm
find .fnm
la | where name == .fnm
cd 
la | where name == .fnm
clear
fnm --versom
fnm --version
fnm list-version
fnm list-remote
fnm install "v23.3.0"
fnm list
fnm use "v23.3.0"
source ~/.config/nushell/config.nu
split column --help
source ~/.config/nushell/config.nu
fnm use "v23.3.0"
node -V
node --version
fnm use default
node --version
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
clear
nvim
clear
fnm use default
cd ui
clear
fnm use default
clear
cd toto
cd ..
ls
cd taskbox
npm run storybook:ios
npm i
npm run storybook:ios
clear
nvim
turbo clean
nvim
clear
fnm --version
clear
cd retail
clear
npm i
npm run storybook:ios
nvim
cd packages/ui
npm run storybook:ios
clear
nvim
turbo clean
nvim
npm i
npm run storybook:ios
clear
nvim
npm i
cd client
npm run dev
nvim
cd packages/cli
npm run build
clint login
nvim
clear
npm run build
cd ui
cd client
npm run dev
clear
cd ui
clear
npm run start
npm install chromium-edge-launcher --workspace=ui
npm install chromium-edge-launcher --workspace=packages/ui
nvim
npm install chromium-edge-launcher --workspace=packages/ui
npm run storybook:ios
clear
nvim
nvim
npmi
npm i
npm run storybook:ios
turbo clean
nvim
npm i
npm run storybook:ios
clear
npm run start
npx expo-doctor
npx expo install --check
nvim
npm run start
npx expo install --check
clear
npm run start
cd client
nvim
cd ui
clear
npm run start
cd ../..
cd ui
clear
cd ui
npm run start
clear
cd cliet
cd client
cd cliet
npm run start
nvim
cd retail
turbo clean
npm i
cd client
npm run start
clear
nvim
cd retail
gitc
gitd
clear
npm run start
clear
gf
git pull origin develop
npm run build
cd lib
npm publish
clear
cd toto
cd ..
ls
cd taskbox
nvim
cd ..
cd hackethon
node day2.js
cd ..
nvim
clear
npm i
git pull
nvim
nvim
turbo clean
npm i
npm run dev
gf
:qa
node day3.js
k
node day3.js
cargo run
cargo build
cargo run main
nvim
cmear
clear
npm run dev
clear
clear
nvim
clear
npm run dev
cargo ru
cargo run main
clear
cargo run main
cargo run main non_existent_file.txt
cargo run main main.rs
cargo run main non_existent_file.txt
cargo run main src/main.rs
clear
npm run test:prod-serv
nvim
gf
npm run build
cd lib
npm publish
clear
cd ..
clear
npm i
npm run dev
clear
git reset --hard HEAD~1<\n>
nvim
git push --force<\n>
clear
nvim
gfr
gf
git pull
clear
npm run test:l-r
gf
clear
gf
npm run test:l-r
eas device:create
eas device:list
clear
npm run build
cd lib
npm publish
cleawr
clear
clear
gf
clear
npm i
clear
clera
clear
nvim
clear
npx turbo dev --filter=my-clienteling
clear
npm run dev
clear
cd example
clint login
clear
npm run dev
npm run build
clint project
clint eas-build
clear
npm run build
npx eas build --platform ios --development_client ios --clear-cache
clear
npm install -g eas-cli
npm run build
clear
npm run test:l-r
cd ..
npm run test:l-r
gf
cd packages/ui
# With NPM<\n>npx create-expo-app --template expo-template-storybook .
npm run ios
nvim
cd ui
npm run storybook:ios
clear
npm run storybook:ios
clear
nvim
cd ..
nvim
npm i
cd retail
npm i
clear
npx create-expo-app 
cd packages
nvim
mkdir ui
cd ui
npx create-expo-app 
ls
npx storybook@latest init
cd ui
ls
npx expo customize metro.config.js
npm run ios
nvim
cd ..
clea
cd ..
nvim
clear
clear
cd retail
clear
cargo run main
cd ../../../..
ls
rm -rf nexy-payment
git clone git@github.com:Project-FE-GPA/nexi-payment.git
rm -rf nexi-payment
git clone git@github.com:Project-FE-GPA/nexi-payment.git
ls
cd nexi-payment
npm i
clear
nvim
source ~/.config/tmux/tmux.conf
clear
nvim
tmux detach
tmux
cd nexi-payment
clear
nvim
gitc
git checkout origin develop
gh copilot explain "how to checkout to a remote branch"
git checkout origin/develop 
clear
npm i
npm run pre-build
cd
ls
la
find .netrc
vim .netrc
la
which .netrc
touch .netrc
vim .netrc
nvim
clear
cd ..
git clone git@github.com:ilgianlucapapa/eng-payment.git
ls
cd eng-payment
npm i
cd payment
cd eng-payment
npm run pre-build
pod --version<\n>
sudo gem update cocoapods
npm run pre-build-clean
cargo run main
cd projects
ls
cd hackethon
ls
cd hackethon
node day3.js
npm run ios
cd eng-payment
npm run start
npm run pre-build
npm run start
clear
cd toto
clear
cd toto
cd public
ls
gh copilot explain "how to rename a file from terminal"
gh copilot explain "how to copy the col name of a value in nushell"
ls
cd where # = 4
ls where # = 4
ls | where # = 4
gh copilot explain "how to get the index col in nushell for filtering"
ls | table | autoview --index
ls | where index = 4
ls | where index == 4
ls
mkdir videos
mv bricks.mov videos
ls
cd videos
ls
clear
vim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
cd toto
public/videos
cd public/videos
ffmpeg -i brick.mov
ls
ffmpeg -i bricks.mov
ffmpeg -i bricks.mov -c:v libx264 -c:a aac bricks.mp4<\n>
clear
npm run start
clear
npm run start
clear
nvim
cd eng-payment
clear
cd
cd .config
nvim
git pull
clear
npm i
cd
ls
cd downloads
ls
clear
git checkout origin/feature/310-bar-chart
clear
gitc
git checkout origin feature/310-bar-chart
git checkout feature/310-bar-chart
clear
gf
git pull
nvim
npm i
clear
npm i
npm run dev
gf
git pull
cd my-presenter
nvim
nvim
clear
clear
cd client
cd
vim .zshrc
clear
cd .config
nvim
whic z
which z
which zoxide
tmux attach -t work
clear
nvim
gf
git pull
nvim
nvim
clear
cleaqr
clear
gitc
git checkout -b feature/309-pie
gitc
git pull feature/310-bar-chart
git merge feature/310-bar-chart
clear
npm run start
npm run dev
nvim
vim adyen-pos-mobile-ios-main
npm run test:l-r
clear
git checkout feature/307-ui-package
clear
cd packages/ui
npm i
clear
cd packages/ui
nvim
cd ..
nvim
cd ..
clear
cd packages
git pull
nvim
git pull
cd ui
clear
cd ui
cd retail
npm i
npm i @storybook/addon-actions --workspace=packages/ui
npm run start
npm run storybook
cd packages/ui
nvim
npm run storybook
npx storybook automigrate
npx storybook:ios
npx storybook:start
npm run storybook:start
gitc
gf
cd retail
nvim
cd retail
nvim
clear
clear
nvim
gf
git pull
gf
npm run test
tsc --noEmit --fix
npm run test
nvim
gitc
git merge feature/310-bar-chart
nvim
npm run dev
npm i
npm run dev
git push -u origin feature/309-pie
npm install @react-native-masked-view/masked-view react-native-linear-gradient --workspace=my-clienteling
git pull
clear
nvim
gitc
nvim
clear
nvim
gitc
git merge feature/309-pie
git push
gitd
clear
gitd
clear
npm run build
npm run dev
npm run build
npm install -g eas-cli
npm run build
clear
cleear
clear
cd eng-payment
clear
cd eng-payment
cd
cd downloads
cd eng-payment
nvim
clear
npm run dev
clear
npm run dev
npm run build
clear
vim adyen-pos-mobile-ios-main
xed adyen-pos-mobile-ios-main
cd adyen-pos-mobile-ios-main
ls
xed POSSampleApp
cd toto
npm init builder.io@latest
npm run dev
clear
nvim
clear
nvim
cleawr
clear
gf
git checkout feature/307-ui-components-library
clearw
clear
mkdir packages/ui-expo
cd packages/ui-expo
npx create-expo-app@latest
npx create-expo-app@latest .
npm run start
npm run ios
cear
clear
npm i
cd retail
npm i
npm run ios
npx expo-doctor
cd ..
rm -rf ui-expo
turbo gen workspace --type packages --name ui-expo --copy 
ls
cd ui-expo
npm i
turbo clean
rm -rf node_modules
clear
npm i
nvim
cd ..
rm -rf ui-expo
clear
turbo gen workspace --type packages --name stories --copy 
ls
cd stories
nvim
cd retail
npm i
nvim
cd stories
npm run ios
clear
npm run dev
clear
cd stories
npm run dev
cd ..
cd ui
nvim
npm run dev
cd ..
cd stories
npm run dev
clear
cd ..
nvim
cd ..
rm -rf stories
clear
nvim
clear
clear
cd toto
cd ..
ls
cd taskbox
npm run dev
npm run start
npm i
npm run start
clear
ls
cd ..
cp taskbox
cp taskbox ~/documents/beije/engineering/retail-platform-mono/packages
cp -r taskbox ~/documents/beije/engineering/retail-platform-mono/packages
cd packages
ls
cd teskbox
cd taskbox
cd retail
npm i
clear
npm run start
clear
cd taskbox
npm run start
cd ..
nvim
cd ..
clear
clear
cd toto
cd ..
npx create-expo-app@latest 
cd my-app
npm run ios
npm i
npm run ios
clear
cd packages
npx create-expo-app@^51.0.18 .
npx create-expo-app@51.0.18 .
npx create-expo-app
rm -rf stories
cd retail
npx create-expo-app ./packages/stories
cd packages
ls
cd stories
cd stories
npm run start
cd retail
npm i
cd stories
npx expo-doctor
npx expo install --check
npm run start
clear
cd retail
npm i
cd stories
npx expo-doctor
npx expo install --check
cd retail
turbo clean
clear
nvim
clear
nvim
npm i
clear
cd ..
rm -rf stories
nvim
turbo clean
rm -rf node_modules
rm -rf package-lock.json
clear
cd packages
npx create-expo-app ./stories
cd retail
ls
cd stories
npm i --legacy-peer-deps
nvim
npm run start
npm i
cd stories
npm run start
cd retail
turbo clean
rm -rf package-lock.json
rm -rf node_modules
npm i
cargo build
cargo run
nvim
turbo clean
rm -rf package-lock.json
npm i
rm -rf node_modules
npm i
npm i --legacy-peer-deps
npm run start
npm i
npm run start
npm i --legacy-peer-deps
npm i
cd stories
npx expo doctor
npx expo-doctor
npx expo install --check
clear
npx expo install --check
cd reatil
cd retail
turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
cargo install
cargo run
clear
nvim
gitc
clear
gitc
gitd
git checkout feature/307-ui-components-library
clear
nvim
cd ..
cd retail
:qa
npm i
cd retail
clear
cd packages/ui
npm run dev
clear
npm run start
clear
npm i
cd packages/ui
npm run start
cd retail
npm install react-native-safe-area-context --workspace=packages/ui
cd packages/ui
npm run start
nvim
clear
node src/scripts/index.js
npm run start
clear
npm run start
clear
node src/scripts/index.js
clear
gf
git pull
clear
nvim
gf
git pull
clear
npm run start
nvim
clear
clear
nvim
clear
clear
nvim
gff
gf
git pul
git pull
clear
nvim
clear
gf
git pull
clear
gitc
clear
git checkout feature/311-smart-scalar
git pull
npm i
tsc --noEmit
npm run check
clear
nvim
clear
gitc
git pull
clear
gitc
gf
nvim
clear
cd ..
cd ..
ls
cd packages/ui
clear
clear
cd packages/ui
clear
nvim
nvi
cd retail
npm i
clear
npm run check
cd packages/ui
npm run check
clear
npm run check
nvim
npm run check
npm i
clear
cd ..
npm run check
k
npm run check
nvim
cd retail
npm i
clear
npm i
clear
npm i
clear
:qa
clear
which expo
npm which expo
npm why expo
clear
gitc
gf
git pull
clear
git checkout feature/build-523
clear
cd retail
clear
cleqr
clear
npm run dev
clear
gf
git pull
nvim
clear
gf
git pull origin feature/311-smart-scalar
nvim
gf
git checkout MC/feature/newcontact
clear
cd retail
npm i
npm run dev
npm i
cd cliente
npm run dev
nvim
gf
clear
gf
git pull
gf
fnm list
gf
git pull
nvim
git pull
nvim
nvi
nvim
clear
gf
git pul
git pull
clear
cd beije
ls
cd projects
ls
git clone https://github.com/total-typescript/pro-essentials-workshop.git
ls
which pro-essentials-workshop
path expand pro-essentials-workshop
path expand help
help path
path expand pro-essentials-workshop
ls
path expand home
path expand
cd pro-essentials-workshop
path expand
path expand .
cd ..
path expand | pro-essentials-workshop
cd pro-essentials-workshop
pnpm -V
pnpm --version
pnpm update
pnpm self-update
nvim
darwin-rebuild switch --flake ~/.config/nix#mini<\n>
pnpm --version
clear
clear
pnpm install
pnpm run exercise
clear
pnpm run e
clear
pnpm run e
clera
pnpm run e
clear
cd retail
cd ..
ls
pnpm dlx create-turbo@latest
cd retail
cd retail
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvin
nvim
nvin
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
pnpm install
nvim
clear
cd apps/my-clienteling
pnpm run dev
cd retail
cd ..
cd retail
turbo --version
turbo run dev --filter=my-clienteling
cd apps/my-clienteling
pnpm run dev
cd ../..
pnpm add @babel/runtime --save-dev --filter=my-clienteling
cd apps/my-clienteling
pnpm run dev
cd ../..
pnpm add react-native-css-interop --save-dev --filter=my-clienteling
turbo run dev --filter=my-clienteling
pnpm add @react-navigation/native-stac --save-dev --filter=my-clienteling
pnpm add @react-navigation/native-stack --save-dev --filter=my-clienteling
turbo run dev --filter=my-clienteling
nvim
pnpm add @react-native/assets-registry/registry --save-dev --filter=my-clienteling
pnpm run dev
clear
turbo run dev --filter=my-clienteling
pnpm add @react-native/assets-registry --save-dev --filter=my-clienteling
turbo run dev --filter=my-clienteling
nvim
clear
nvim
nvim
clear
clear
cd my-clienteling
clear
nvim
clear
pnpm run e
clear
gitc
npm run dev
npm i
k
npm i
npm run dev
npx lint-staged
clear
nvim
clear
npm i
npm --version
npm i
turbo run dev --filter=my-clienteling
clear
nvim
git clean -fd<\n>
clear
git restore --source=HEAD --staged --worktree .<\n>
nvim
clear
xed POSSampleApp
npm i
clear
turbo run dev --filter=my-clienteling
clint login
cd my-clienteling
clint login
clear
npm run dev
cd retail
gf
clear
git pull
npm run dev
gf
clera
clear
nvim
clear
cd projects
ls
. | path expand
ikigai | path expand
"." | path exapnd
"." | path expand
clear
mkdir gh-scrum-cli
cd gh-scrum-cli
npm init -y
npm install typescript commander axios @clack/prompts csv-writer
npm fund
npm install --save-dev ts-node @types/node
npx tsc --init<\n>
cd scrum-cli
npx ts-node scr/cli.ts list-projects
nvim
npx ts-node src/cli.ts list-projects
nvim
npx ts-node src/cli.ts list-projects
npm run dev
clear
npm install @octokit/rest<\n>
npm uninstall axios
npx ts-node src/cli.ts list-projects
npm run dev
npm run start
tsc
npm run build
npx ts-node src/cli.ts list-projects
clear
nvim
npm run dev
clear
npm run build
clear
clear
cd utils
npm i
nvim
npm run build
npm run dev
nvim
npm run build
nvim
npm run build
nvim
npm run build
nvim
npm run build
git fetch
cd clienteling-mobile-app
cd engineering
ls
cd clienteling
ls
cd myclienteling-app-mobile
nvim
gitc
gf
ls
rm -rf myclienteling-app-mobile
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-mobile.git
cd myclienteling-app-mobile
gf
git checkout develop
npm i
git checkout production
npm i
npm run build
nvim
npm run build-production-ios
nvim
npm run build_wave
gf
cat package.json
ls package.json
open package.json
npm run build
cd lib
npm publish
nvim
clear
cd ..
clear
npm i
npm run build
cd lib
npm publish
cd ..
npm run test:assisted-sales
rm -rf lib
npm run test:assisted-sales
clear
clear
npm run dev
cd cli
cd packages/cli
clear
nvim
npm run build
npm run link-cli
cd packages/cli
clear
npm run build
npm run link-cli
npm run dev
npm run build
npm run dev
npm run link-cli
npm run build
npm run link-cli
npm run dev
npm run build
clear
npm run dev
npm run build
npm run dev
clear
nvim
tmux attach -t work
tmux detach
tmux
clear
pnpm run e
clear
clear
npm run dev
clear
vim
clear
cd retail
cd ..
ls
mkdir yarn-mono
corepack enable
yarn init -2
yarn --version
clear
yarn set version stable
cd yarn-mono
yarn --version
clear
cd ..
ls
rm -rf yarn.lock
rm -rf README.md
ls
rm -rf package.json
clear
cd yarn-mono
yarn init -2
ls
yarn dlx create-turbo@latest
clear
ls
rm -rf package.json
rm -rf yarn.lock
rm -rf README.md
ls
yarn dlx create-turbo@latest
ls
cd ..
rm -rf yarn-mono
yarn dlx create-turbo@latest
npx create-turbo@latest
ls
rm -rf yarn-mono
npx create-turbo@latest
cd yarn-mono
yarn --version
corepack enable
yarn init -2
yarn install
yarn --version
rm -rf yarn.lock
yarn install
cd retail
nvim
clear
cd apps/expo
cd ../..
vim package.json
cd apps/expo
cd ../..
cd apps
rm -rf expo
cd ..
yarn create expo apps/cool-app
cd apps/cool-app
yarn ios
clear
cd yarn-mono
cd yarn-mono
yarn install
yarn --version
yarn init -2
yarn --version
cd retail
yarn install
cd retail
nvim
clea
clear
yarn install
clear
yarn dlx turbo run dev --filter=my-clienteling
cd apps/my-clienteling
nvim
yarn run start
nvim
yarn run expo:iso
yarn run expo:ios
yarn cache clean<\n>
yarn cache clea
yarn cache clean
yarn install
yarn run expo:ios
nvim
yarn run ios
clear
yarn run start
nvim
yarn run dev
npm show @twilio/conversations version<\n>
yarn add @twilio/conversations@latest
npm show @twilio/conversations version<\n>
nvim
nvim
clera
cd ..
cd retail
cd clienteling
clear
clear
clera
cd clienteling
clear
nvim
cd yarn-mono
clear
nvim
yarn install
cd apps/my-clienteling
yarn run dev
git commit -- interactive
git commit -a
clear
clear
ls
cd tmux
ls
"tmux.conf" path expand
"tmux.conf" | path expand
clear
nvim
clear
cd retail
cd packages/cli
cd packages/cli
npm run dev
clear
npm run build
clear
gff
gf
npm run dev
clint project
npm run dev
npm run build
npm run update
clear
npm run de
npm run dev
clear
npm run update
q2345
clear
nvim
npm run test:assisted-sales
nvim
npm run dev
yarn run dev
nvim
cd ..
npx which expo
cd yarn-mono
clear
cd apps/my-clienteling
yarn install expo@latest
yarn install expo
yarn add expo@latest
yarn run dev
yarn expo-doctor
yarn dlx expo-doctor
yarn dlx expo install --check
yarn run dev
yarn add expo-build-properties
yarn run dev
yarn add expo-linking<\n>
nvim
yarn run dev
clear
nvim
cd apps/my-clienteling
cd retail
yarn install
cd yarn-mono
yarn il
yarn install
yarn turbo run dev --filter=my-clienteling
cd apps/my-clienteling
yarn run dev
cd ../..
yarn install
cd apps/my-clienteling
nvim
yarn run dev
clear
cd ../..
nvim
cd ../..
cd ..
rm -rf yarn-mono
ls
ls a
ls -a
rm .git
rm -rf .git
rm -rf .gitattributes
rm -rf .gitignore
rm -rf .pnp.cjs
rm -rf .editorconfig
ls
clear
pnpm run e
clear
pnpm run e
clear
pnpm run e
clearer
clear
pnpm install
pnpm run e
clear
pnpm run e
clear
gf
clint project
npm run dev
clear
git checkout main
git merge develop
git push
clear
c
gitc
clear
tmuz
clear
clear
pnpm run e
clera
clear
clear
gf
clear
nvim
cd ..
cd presenter
nvim
cd retail
rm -rf node_modules
clear
qqqjk
cd clienteling
clear
cd apps/my-clienteling
cd retail
cd apps/my-clienteling
clear
nvim
cd retail
npm i
npx turbo clean
clear
npm i
npx turbo dev --filter=my-clienteling
turbo run clean
clear
rm -rf node_modules
npm i
turbo run dev --filter=my-clienteling
npm i
turbo run dev --filter=my-clienteling
cd apps/my-clienteling
npm run dev
gh copilot explain "how can i remove all the modified files and restore as it was everything with git"
git clean -df
git stash clear
clear
gh copilot explain "how can i remove all the modified files and restore as it was everything with git"
git reset --hard HEAD
clear
nvim
clear
nvim
clear
cd retail
cd ..
ls
cd retail
nvim
clear
cd ..
ls
cd retail-platform-mono
clear
cd ..
cd ..
yarn dlx create-turbo@latest
pnpm run e
clear
clera
clear
clear
clear
nvim
gf
git pull
git pull origin master
nvim
clera
clear
pnpm run e
nvim
nvim
cleqr
clear
clear
cd retail
cd ..
ls
rm -rf retail
cd reatil
cd retail
clear
gf
clear
git checkout -b feature/yarn
corepack enable
yarn init -2
cd retail-platform-mono
yarn install
cd clienteling
yarn run dev
gitc
clear
nvim
clear
npm i
cd ciente
cd cliente
clear
clear
gf
cler
clear
clera
clear
gf
git pull origin develo
clear
cd retail
cd ..
cd wiki
ls
gf
git pull
gf
git pull origin develop
nvim
npm run build
npm run build
clear
cd lib
npm publish
clear
cd ..
clear
nvim
cd retail
npm install
cd clienteling
npm run dev
clint project
clint login
npm run dev
nvim
git push master
git push
nvim
nvim
npm run dev
gf
nvim
clear
clear
nvim
clear
gitc
git checkout feature/newcontact
gf
git pull origin develop
nvim
clear
clear
gitc
clear
tmux detach
tmux
gitd
git checkout develop
git branch -D MC/feature/newcontact
gitd
nvim
source ~/.config/nushell/config.nu
gitD
gitd
gitD
gitc
nvim
git reset --hard HEAD
nvim
clear
git pull
clear
npm run dev
npm i
npm run dev
gitc
nvim
gitc
nvim
gitc
nvim
gitc
nvim
gitc
nvim
gitc
vim
gitc
nvim
vim
gitc
npm run dev
git checkout feature/new_contact_fix
git checkout -b feature/new_contact_fix
git push -u 
clear
nvim
clear
gf
gitc
gf
clear
git pull
gitc
clear
gitc
npm i
cd retail
npm i
cd clienteling
clera
clear
npm run dev
clear
gitD
clear
npm run build
clear
npm install -g eas-cli<\n>
npm run build
clear
cd retail
nvim
clear
cd clienteling
npm run dev
gf
pnpm run e
nvim
clear
gf
git pull
clera
clear
cleaf
clear
nvim
cd retail
clear
nvim
cd apps
nvim
cd ..
turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
nvim
npm i
cd clienteling
npx expo-doctor
cd ..
npx expo-doctor
nvim
cd presenter
npx expo-doctor
nvim
cd retail
npm i
npm run dev
cd retail
turbo run dev --filter=my-clienteling
cd clienteling
npm run dev
npm list lowercase-keys<\n>
cd packages/cli
npm run build
clint login
cd retail
npm i
turbo run dev --filter=my-clienteling
cd clienteling
npx expo start
clear
nvim
cd retail
npm i
cd client
npx expo start
npm run dev
cd packages/cli
nvim
clear
cd cliente
npm run dev
corepack disable
cd retail
npm i
cd clienteling
cd retail
turbo run dev --filter=my-clienteling
cd packages/cli
nvim
cd retail
npm i
turbo run dev --filter=my-clienteling
cd packages/cli
nvim
cd retail
npm i
turbo run dev --filter=my-clienteling
clear
turbo run dev --filter=my-clienteling
clear
cd clienteling
npm run build
clear
nvim
npx expo prebuild --platform ios
nvim
cd ..
cd 
cd retail
cd ..
ls
cd clienteloing
cd clienteling
ls
cd myclienteling-app-mobile
gitc
clear
cd retail
nvim
npm i
cd clienteling
npx expo prebuild --platform ios
nvim
npm run build
nvim
npm run build
npm install -g eas-cli<\n>
npm run build
clear
npm run dev
cleare
clear
cd retail
turbo clean
rm -rf package-lock.json
rm -rf node_modules
npm i
cd clienteling
cd retail
nvim
turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
npm run dev
cd clienteling
npm run dev
cd retail
npm i
cd clienteling
npm run dev
clear
gf
git pull
git add apps/native/my-clienteling/src/config/envs.json
nvim
git pull
clear
gf
cd retail
git checkout feate/merge
git checkout -b feature/expo_update
git branch list
git branch
git branch -D list
clear
gitc
git checkout -b feature/307-ui-components-library
gitc
nvim
gitc
git merge feature/expo_update
clear
nvim
git pull
nvim
gitc
gitD
git checkout -b feature/307-ui-components-library
nvim
gitc
nvim
gitc
gitd
git pull origin feature/307-ui-components-library
clear
npm i
nvim
npm i
nvim
npm i
clear
npm i
clear
npm i
cd packages/ui
npm run dev
nvim
npm run start
clear
:qa
cd retail
nvim
cd packages/ui
npm run start
clear
cd retial
cd retail
gf
git merge develop
nvim
git merge develop
nvim
clear
gf
git pull origin feature/newcontact
clear
git pull origin develop
clear
gitc
git merge feature/expo_update
clear
git push
clear
gf
clear
nvim
clear
cd retail
clear
cd cliente
cd clinteling
cd clieneling
cd clienteling
clear
clear
gf
clear
nvim
clear
nvim
clear
gf
git pull
nvim
npm run test:l-r
clear
npm run test:l-r
clear
clear
nvim
gitc
clear
npm run dev
gf
nvim
clear
clear
gd
gf
clear
gf
git pull origin master
npm run test:l-r
npm run test:assisted-sales
npm run test:l-r
git add .
nvim
clear
nvim
cd retail
nvim
gf
git pull
clear
git checkout -b feature/313-icon-theme
cd retail
cd packages
nvim
npm i
nvim
nvim
cd packages/ui
npm run dev
npm run start
node src/scripts/index.js
npm run build:stories
clear
npm rund ev
npm rund dev
npm run dev
cd retail
nvim
cd packages/ui
cd retail
nvim
npm i
cd packages/ui
npm run dev
gf
clear
cd retail
npm i
cd packages/ui
npm run check
cd retail
npm i
nvim
npm i
cd clienteling
npm run de
npm run dev
clear
nvim
npm run dev
clear
cd retail
nvim
nvim
clear
gf
git pull origin feature/ui-enchantments
clear
cd packages/ui
nvim
clear
npm run build
clear
npm run dev
clear
cd clienteling
npm run build
npm install -g eas-cli
nvim
cd clienteling
nvim
clear
clear
cd packages/ui
cd packages/ui
cd clienteling
npm run build
clear
nvim
cd packages/ui
clearw
clear
cd packages/ui
nvim 
cd ..
npm run dev
vim
cd retail 
npm i
cd packages/ui
npm run dev
clear
gf
git pull origin feature/ui-enchantments
nvim
gitc
git checkout origin feature/enchantments
git checkout feature/enchantments
git checkout origin feature/enchantments
git checkout origin feature/ui-enchantments
git checkout feature/ui-enchantments
git merge feature/313-icon-theme
gitc
gf
git pull origin feature/ui-enchantments
clear
gitc
git push
nvim
npm run dev
npm rund dev
npm run dev
nvim
nvim
git checkout feature/ui-components-update
clear
git merge feature/313-icon-theme
clear
git merge feature/ui-enchanments
gitc
git merge feature/ui-enchantments
git push
clear
git push
clear
gitc
git merge feature/ui-enchantments
clear
git push
clear
cd clienteling
npm run dev
cd ui
npm i
cd retail
npm i
cd my-clienteling
npm i
cd retail 
npm i
cd packages/ui
nvim
npm run dev
cd retail
npm i
cd packages/ui
npm run dev
clear
vim
npm i
cd reatil
cd retail
npm run dev
npm i
nvim
npx lint-staged
nvim
vim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
gf
nvim
clear
nvim
gitc
git pull
nvim
gitc
git push
clear
clear
cd packages/ui
clear
cd retail
clear
gf
nvim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
nvim
npx lint-staged
nvim
clear
gitc
git pull
gf
git pull
git pull origin feature/ui-components-update
clear
git pull
nvim
git pull
nvim
git pull
git pull origin feature/UI-components-update
nvim
git merge develop
nvim
git push origin feature/UI-components-update
clear
nvium
nvi
nvim
gitc
git pull origin feature/ui-components-update
git merge feature/ui-components-update
git push
clear
gitc
gitd
git checkout feature/UI-components-update
git merge develop
clear
git merge develop
git push
clear
nvim
nvim
cd packages/ui
nvim
npm run dev
clear
gf
clear
gitc
git pull
clear
gf
clear
nvim
clear
npm run dev
gf
clear
gf
git pull
clear
nvim
cd retail
nvim
cd ui
clear
nvim
clear
cd clienteling
cd packages/ui
gf
git pull
cd clienteling
npm run dev
clear
gf
gitc
clear
gitc
git merge develop
clear
git push
clear
gitc
git pull origin feature/UI-components-update
clear
git push
gitd
clear
npm run dev
gf
git pull
clear
cd packages/ui
npm run dev
gf
git pull
nvim
git pull
clear
npm run build
clear
gf
git pull
nvim
npm run build
clear
nvim
git checkout -b feature/314-product-ui
nvim
nvim
gf
git pull develop
git pull origin develop
clear
npx lint-staged
cd retail
npx lint-staged
git commit --amend
git push
fuck
git push -& origin feature/314-product-ui
git push -u origin feature/314-product-ui
clear
nvim
clear
cd packages/ui
nvim
cd ..
nvim
cd retail
nvim
cd presenter
nvim
cd clienteling
nvim
clear
nvim
gf
gitc
git merge feature/314-product-ui
git push
clear
gitc
clear
git merge develop
clear
npm run dev
clear
clear
gf
clear
git pull
gf
git pull
clear
npm ru n dev
nvim
gf
git pull
git pull origin develop
clear
cd packages/ui
nvim
npx lint-staged
nvim
gitc
git pull
git pull origin feature/314-product-ui
git push
gitc
clear
gf
clear
nvim
cd reatil
cd retail
npm i
gf
clearr
clear
gitc
git merge feature/314-product-ui
gf
git push
clear
gitc
clear
gitd
clear
gf
git pull origin develop
clear
gitc
git pull
clear
git merge feature/314-product-ui
git push
clear
gitc
clearr
clear
nvim
gitc
nvim
clear
gitc
clear
clear
gf
gitc
git merge feature/314-product-ui
git push
gitc
clear
gitc
clear
npx expo install @react-navigation/drawer
clear
nvim
npx expo install @react-navigation/drawer
clear
vim
nvim
cd nvim
clear
gf
git pull
nvim
git pull
nvim
clearr
gitc
nvim
gitc
gf
git push
gitc
git merge develop
clear
git push
gitc
nvim
gitc
gitd
clear
npm run build
clear
gf
git pull
nvim
gitd
gitc
git pull
git push
clear
gitc
git merge feature/314-product-ui
clea
clear
gitd
clear
git checkout -b feature/324-drawer
clear
npm run dev
clear
nvim
cd retail
turbo clean
rm -rf package-lock.json
rm -rf node_modules
cd retail
npm i
turbo clean
rm -rf node_modules
rm -rf package-lock.json
npm i
clear
npm run dev
clear
npm run dev
cd retail
npm i
cd clienteling
nvim
cd retail
nvim
clear
npm i
cd clienteling
gf
git pull develop
git pull origin develop
clear
nvim
clear
gf
git push
fuck
git push -u origin feature/324-drawer
clear
gf
gitc
git merge feature/324-drawer
git push
clear
gf
git pull
clear
gitd
clear
gitc
clear
gf
npm run dev
gf
git pull
clear
git push
cd retail
npm i
clear
ggf
gf
git push
clear
cd bulk
gf
git pull
nvim
npm i
cd ..
rm -rf bulk-start-db
git clone git@github.com:Project-FE-GPA/bulk-starter-db.git
ls
rm -rf bulk-starter-db
ls
git clone git@github.com:Project-FE-GPA/bulk-starter-db.git
clear
cd buld
cd bulk
gitc
git checkout develop
clea
clear
npm i
npm link
nvim
rp generate-localization
fnm list
fnm install "v18"
fnm use 18
clear
rp generate-localization
npm i
rp generate-localization
npm install -D core-js/shim
npm install core-js
rp generate-localization
fnm use default
clear
npm i
rp generate-localization
nvim
cd bulk
rp generate-localization
clear
clear
clear
clear
gf
nvim
clear
nvim
gf
git push
nvim
gf
git pull
clear
rp generate-localization
git pull
clear
rp generate-localization
clear
nvim
clear
npm run dev
nvim
gf
clear
gitc
gf
git checkout feature/mc-clients-page
gf
git pull
nvim
gf
git pull origin develop
gitc
npm run dev
clear
ncim
vim
clear
cleaer
clear
gf
clear
cd retail
npm i
gitc
cldeaf
clear
gf
clear
nvim
gf
gitc
git pull
npm i
gf
git pull
clear
npm run build
nvim
npm run build
cd lib
npm publish
clear
cd engineering
ls
cd clienteling
ls
cd myclienteling
cd engineering
cd clienteling
cd myclienteling
clear
clear
npm run dev
npm run dev
gf
git pull
npm run dev
tmux attach -t work
clear
clear
nvim
clear
gf
git pull
cd ..
gf
clear
gf
npm run build
cd lib
npm publish
npm i
cd ..
npm run build
cd lib
npm p
npm pu
npx lint-staged
git add .
clear
nvim
cd myclienteling
cd ..
ls
cd myclienteling-app-services
gf
cd myclienteling-app-services
npm run dev
clear
npm run dev
cd myclienteling-app-services
cd ..
rm -rf myclienteling-app-services
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-services.git
cd myclienteling-app-services
git checkout develop
vni
nvim
npm publish
nvim
npm publish
clear
npm i
npm run dev
nvim
npm publish
npm i
gf
clear
git pull
npm i
cd clienteling
nvim
clear
gitc
nvim
git push
clear
gitc
git merge develop
nvim
gitc
git merge feature/mc-clients-page
git push
clear
npm run dev
clear
nvim
npm publish
npm run dev
npm i
npm run build_wave
clear
clear
nvim
clear
npmi
npm i
cd retail
npm i
clear
gf
git pull develop
git pull origin develop
nvim
cd ..
nvim
clear
cd ebsn
clear
npm run build
cd lib
npm publish
cd ..
cd clienteling
nvi
cd retail
npm i
clear
npm run build_wave
vim
nvim
npm run build
nvim
npm run build
npm run dev
npm run dev
clear
npm run dev
cd clienteling
clint project
nvim
git checkout release
git checkout -b release
nvim
gitc
nvim
npm run build
npm run dev
clea
npm install -g eas-cli
npm run dev
cd clienteling
npm run build
clear
npm run dev
clear
rp generate-localization
nvim
clear
gf
npx expo-doctor@latest
cd clienteling
nvim
cd retail
npm i
npx expo-doctor@latest
nvim
cd retial
cd retail
nvim
vim
vim
nvim
npm i
clear
npm run dev
clear
npm run dev
clear
npm run build_wave
cd clienteling
clear
nvim
gf
git pull
clear
cd retail
npm i
clear
vim
nvim
clear
npm run build
nvim
clear
cd native
vim
cd retail
npm i
npm run build
clear
cd clienteling
clear
gf
clear
nvim
npm run build
nvim
npm run build
cd retail
npm i
npm run build
nvim
gf
clear
gf
clear
gf
git pull
clear
gf
git pull
npm i
cd clienteling
npm run update
nvim
clear
npm run dev
npm run build_wave
clear
npm run build_wave
vim
npm run dev
npm run build_wave
nvim
clear
clear
nvim
clear
nvim
gf
nvi
nm run dev
npx lint-staged
vim
clear
clear
cd retail
clear
npm run build_wave
clear
cd packages/ui
nvim
cd retail
gf
gitc
git checkout test
git merge develop
git push
clear
gitc
npm run build_wave
gf
npm run dev
npm run build_wave
npm run build
cd clienteling
cd retail
npx turbo build --filter=my-clienteling
cd clienteling
npm run build
clear
gf
clear
vim
gf
git pull
clear
rp generate-localization
gf
git pull origin develop
git pull origin master
gf
npm run build
npm run update
clear
gf
npm run update
npm run dev
npm run dev
c;ear
clear
clear
gf
clear
npm run build
npm install -g eas-cli
npm run build
clear
cd retail
npm run
npm install
cd clienteling
npm run build
ls
cd cli
npx eas build --platform ios --development_client ios --clear-cache
cd retail
turbo dev --filter=my-clienteling
clear
cd clienteling
npm run build
nvim
cd retail
turbo dev --filter=my-clienteling
clear
cd clienteling
clear
gf
nvim
npm run build
cd lib
npm publish
cd ..
cd retail
npm i
clear
clear
nvim
clear
nvim
gf
nvim
clear
npm run dev
npm run build_wave
clear
vim
clear
npm run dev
clear
gf
clear
npm run build_wave
npm run build
cd lib
npm publish
clear
npm i
nvim
npm run dev
nvim
npm run build_wave
cd myclienteling-app-services
npm run dev
npm run build_wave
gitc
git merge develop
git push
clear
gitc
clear
cd myclienteling-app-mobile
clear
cd myclienteling-app-services
npm run build_wave
nvim
gf
npm run build
cd lib
npm publish
gf
git pull
cd ..
npm run build
cd lib
npm publish
cd ..
vim
rp generate-localization
nvim
gf
git pull
npm run test test:assisted-sales
npm run test:assisted-sales
clear
npm run test:assisted-sales
clear
nvim
npm run build
cd lib
npm publish
cd retail
npm i
cd bulk
clear
npm run build
cd ebsn
npm run build
c dlib
cd lib
npm publish
cd ..
npm run build
cd lib
npm publish
cd ..
npm i
gf
git checkout feature/mc-clients-wishlist
gf
git pull
vim
git checkout feature/mc-clients-detail
gf
git pull
clear
rp generate-localization
nvim
clear
clear
cd ..
clear
cd clienteling
source ~/.config/nushell/config.nu
cd ..
z --version
git -V
git --version
npm run dev
clear
clear
cd clienteling
cd retail
clera
clear
cd 
cd documents
ls
cd projects
ls
rm -rf hackethon
mkdir cheshire-cat-ai
cd cheshire-cat-ai
touch compose.yml
vim
docker --version
docker compose up
gh copilot explain "is the docker daemon running? error"
docker compose up
docker compose up -d
ollama run deepseek-r1:32b
cd cheshire-cat-ai
clear
docker exec ollama_cat ollama pull mistral:7b-instruct-q2 k
docker exec cheshire-cat-ai ollama pull mistral:7b-instruct-q2 k
docker exec cheshire_cat_core ollama pull mistral:7b-instruct-q2 k
clear
ollama list
clear
docker network ls<\n>
ollama pull codellama:13b
clear
ollama list
docker
ip -4 route show default | awk '{print $3}'<\n>
docker exec cheshire_cat_core ollama
ollama
ollama serve
ollama ps
ollama show
ollama list
ollama show codellama
ollama show codellama:13b
gf
git pull
vim
cd packages/ui
vim
gitc
git pull
cd clienteling
clear
cd projects
ls
npx create-next-app@latest
ls
npx create-next-app@latest
cd gino-moletta-site
cd gino
npm install frame-motion
npm install framer-motion
npm run dev
npm install motion
nvim
npm run dev
cd retail
npm i
cd retail
npm i
cd retail
npm i
npm run test:mock-marketing
clear
cd
vim ssh
ls
vim .ssh
ssh-keygen -t ed25519 -C "federico.reghini@eng.it"
vim .ssh
ssh-keygen -t ed25519 -C "federico.reghini@eng.it"
gf
git pull
npm run test:mock-activity
clear
npm run build
cd lib
npm publish
clear
nvim
clear
nvim
clear
nvim
rp generate-localization
cd ..
vim
nvim
rp generate-localization
vim
rp generate-localization
gf
clear
npm run dev
clear
npm run dev
docker compose up
docker compose up -d
clear
ollama pull nomic-embed-text
clear
docker compose up -d
nm
ollama pull nomic-embed-text
docker
ollama list
ollama serve
curl http://localhost:11434/api/tags<\n>
docker compose build
docker compose up 
docker compose up -d
ollama list
docker exec ollama_cat ollama pull nomic-embed-text:latest
ollama run llama3
ollama list
nvim
nvim
npm run test:mock-activity
npm run build
cd lib
npm publish
cd ..
clera
gf
gitc
git pull
nvim
k
vim
cd retail
cd packages/ui
nvim
gf
git pull
nvim
gitc
cd clienteling
nvim
gf
git pull
npm i
vim
gitc
git pull
git merge develop
vim
npm i
cd bulk
rp generate-localization
vim
nvim
gitc
gitd
gf
git pull
npm i
git checkout -b feature/328-cart
clear
npm run dev
vim
clear
vim
gf
git checkout feature/mc-clients-orders
clera
clear
gitc
gitd
clear
gf
gitc
git pull
gitc
git merge develop
clear
npm run dev
npm run update
npm run update
vim
vim
npm run dev
npm run update
gf
git checkout feature/mc-planner-calendar<\n>
gf
npm run dev
cd retail
npm i
npx turbo build --filter=my-clienteling
cd clienteling
npm run dev
cd packages/ui
vim
npx turbo build --filter=my-clienteling
cd clienteling
clear
clear
vim
git checkout feature/mc-planner-agenda
nvim
git checkout feature/mc-planner-agenda
clear
vim
gf
git pull
vim
gitc
git pull origin develop
clear
vium
npm run test:mock-activity
gf
git pull
npm run build
cd lib
npm publish
cd ..
clear
vim
clear
npm run build
cd lib
npm publish
cd ..
nvim
clear
clear
nvim
clear
nvim
rp generate-localization
clear
cd packages/ui
vim
rp generate-localization
cd packages/ui
npm run dev
npm run dev
clear
cd myclienteling-app-mobile
npm run dev
cd myclienteling-app-services
npm run build_wave
nvim
clear
c;ea
clear
clear
rp generate-localization
cd lib
npm publish
cd ..
cd retail
npm i
rp generate-localization
vim
gf
clear
gf
git checkout feature/mc-planner-nav-button
nvim
gitc
clear
nvim
clear
npm run dev
clear
gf
rp generate-localization
gh copilot explain "how to set a project config for git"
cd retail
vim
gf
cd clienteling
vim
cd retail
nvim
cd clienteling
vim
clear
cd retail
npm i
gf
cd clienteling
vim
clear
rp generate-localization
nvim
gf
gitc
git pul
git pull
clear
gitc
git merge develop
npm run dev
npm i
cd retail
npm i
cd clienteling
clear
vim
gitc
git pull
cd retail
npm i
cd clienteling
vim
gitc
clear
npm run dev
clear
cd myclienteling-app-services
vim
npm run publish
npm publish
cd myclienteling-app-mobile
nvi
vim
npm i
npm run build_wave
nvim
clear
gitc
vim
gf
clear
gf
git config user.email
git config user.name
gf
cd retail
cd
vim
gf
clear
git pull
vim .ssh
gf
clear
git pull
vim
vim
git fetch
vim .ssh
git config user.email
cd retail
git config user.email
cd myclienteling-app-mobile
cd myclienteling-app-services
npm run dev
npm run build_wave
npm run dev
npm run build_wave
vim
clear
clear
gitc
vim
git fetch
git pull
vim
cd clienteling
vim
git reset --hard HEAD~1<\n>
git push --forse-with-lease
git push --force-with-lease
clear
vim
cd retail
npm i
vim
cd
vim
cd myclienteling-app-mobile
npm run build_wave
gitc
git pull
cd retail
npm i
cd clienteling
npm run dev
vim
nvim
clear
npm run dev
clear
gitc
nvim
cd retail
npm i
clear
vim
npm run build
cd lib 
vim
cd ..
vim
npm run build
cd lib
npm publish
cd ..
vim
gitc
vim
gitc
git pull
git fetch
git pull
gitc
git pull
gitc
git merge develop
nvim
git merge --abort<\n>
vim
git merge develop
cd retail
npm i
vim
npm run build
cd lib
npm publish
cd ..
np i
cd retail
npm i
vim
clear
vim
gitc
gitd
git fetch
git pull origin develop
cd retail
npm i
vim
gitc
git fetc
gf
git puyll
git pull
gitd
clear
cd clienteling
npm run dev
npm run update
ls
cd downloads
ls
npm install -g gh
gh copilot explain "how to set a project config for git"
clear
ls
ls | where name =~ cv
ls | where name =~ cv -i
ls | where name =~ cv 
ls | where name =~ cv | each { cp $it.name ~/Desktop/federico }
ls | where name =~ cv | each {|file| cp $file.name ~/Desktop/federico }
cd desktop
ls
cd federico
ls
cd desktop
ls
ls | where name =~ CV
cd downloads
ls | where name =~ CV
ls | where name =~ CV | each {|file| cp  $file.name ~/Desktop/federico }
cd federico
ls
cd downloads
ls | where name =~ cv -i | each {|file| cp  $file.name ~/Desktop/federico }
ls | where name =~ cv | each {|file| rm  $file.name }
ls | where name =~ CV | each {|file| rm  $file.name }
ls
clear
ks
ls
cd desktop
ls
mv Sprints_analysis.numbers ~/Desktop/federico
ls
cd federico
ls
clear
gf
vim
npm run build
cd lib
npm publish
cd ..
clear
vim
npm run build
cd lib
npm publish
cd lib
vim
cd lib
cd ll
cd ebsn
vim
gf
gitc checkout -b  feature/381-label
git checkout -b  feature/381-label
git push
git push -u origin feature/381-label
gh pr create --draft --title "My Draft PR" --body "This is a work in progress"<\n>
clear
rp generate-localization
vim
gitc
git merge feature/381-label
git push
vim
clear
gitd
gitc
git checkout -b  feature/382-barcode
vim
gf
git pull origin develop
gitc
git merge feature/381-label
git pull
git merge feature/382-barcode
git push
gitd
git checkout -b  feature/380-search
vim
gitc
gf
git pull
git checkout feature/383-documentation-calendar
git pull origin develop
clear
gitc
gf
git pull 
clear
gitc
git pull origin develop
gitc
git merge feature/380-search
git push
vim
clear
gf
git checkout -b feature/394-more-button
clear
vim
gitc
gf
git pull
clear
git checkout feature/379-add-product-from-wishlist
git pull origin develop
vim
gitc
git pull origin develop
clear
vim
gitc
git merge feature/394-more-button
git push
gf
clear
git checkout feature/395
git checkout -b feature/395-product
git commit --amend -m "feat: new ClientSearch component for handle advanced search #395"
clear
vim
clear
vim
gf
git pull origin develop
clear
gitc
git pull
git merge feature/395-product
git push
clear
gf
clear
gf
git checkout feature/378-loader-remove-item-wishlist
git checkout feature/390-netsales-skeleton
vim
gitc
gf
git pull
gitd
git reflog
vim
gf
clear
gitd
gitc
gf
vim
git checkout feature/392
git checkout -b feature/392
vim
gf
gitc
git checkout feature/371-newclient-registration
cd retail
npm i
cd clienteling
npm run tes:user
npm run test:user
gf
git pull
vim
gitc
clear
git checkout feature/403-totalcountview-format
gitc
gf
git pull origin develop
clera
vim
git push
fuck
thefuck
git push
thefuck
git push -u origin feature/392
npm run dev
npx expo start
gf
git pull
nvim
git pull
npm run start
vim
vim
npm run build
cd lib
npm publish
cd ..
clear
cd reatil
cd retail
npm i
npm run build
cd lib
npm publish
cd ..
npm run dev
gitc
gf
git pull
rp generate-localization
gitc
gitc
vim
vim
nvim
gitc
clear
vim
gf
git pull origin develop
cd retail
npm i
cd clienteling
vim
gf
git pull
git push
m
clear
npm run build
cd lib
npm publish
cd retail
cd ..
npm i
cd packages/ui
gf
git pull
vim
git checkout feature/407-newclient-disclaimers
gf
git pull origin develop
clear
git push
gitc
clear
vim
gf
git pull origin develop
git add .
git commit -m "feat: refactoring category block for product #411<\n>- added productSlider<\n>- refactored bannerslider<\n>close #411"
clear
gitc
gf
git pull
gitc
git merge develop
git pull origin develop
git push
gitc
git merge feature/392
git push
clear
gitc
rp generate-localization
vim
clear
npm run dev
clear
git merge feature/392
clear
gitd
clear
gitd
clear
git checkout -b feature/392-facets
clear
npm run build
cd lib
npm publish
cd ..
npm run build
cd lib
npm publish
cd ..
vim
gf
git pull develop
git pull origin develop
vim
clear
vim .config
vim
vim .config
vim
clear
nvim
git checkout feature/407-newclient-registration
git checkout origin feature/407-newclient-registration
gf
git checkout feature/407-newclient-registration
clear
npm run build
cd lib
npm publish
cd ..
npm i
nvim
npm run build
cd lib
npm publish
cd ..
npm i
gf
git pull origin develop
vim
clear
gitc
git pull
git merge feature/407-newclient-registration
git push
clear
vim
git checkout feature/415-client-card-component
git pull origin develop
vim
npm i
git checkout feature/417-update-user-disclaimer
git pull origin develop
nvim
vim
clear
nvim
gitc
git pull origin develop
npm run build
c dlib
cd lib
npm publish
cd ..
rp generate-localization
vim
git push -u origin feature/392-facets
cd retail
gf
git pull origin develop
vim
git pull origin develop
gitc
git merge feature/392-facets
git push
clear
gitc
gf
git pull
git pull origin develop
clear
gitc
gitd
clear
gf
gitpull
git pull
clear
vim
clear
clear
vim
clear
git fetch
git pull
vim
gf
git pull
clear
vim
clear
vim
gf
clear
gf
git pull 
clear
npm run build
cd lib
npm publish
cd ..
npm i
rp generate-localization
cd myclienteling-app-mobile
npm run dev
npm run build_wave
nvim
gf
git pull
cd clienteling
npm run update
gf
git pull 
npx lint-staged
vim
git checkout feature/416-pagination-refinement
git merge develop
vim
git push
gitc
gf
git pull
clear
gitd
clear
npm run update
clear
clear
npm run update
cd retail
npm i
cd clienteling
npm run update
npm run dev
tmux attach -t work
gd
gf
git pull
clear
clear
npm run dev
npm run dev
clear
npm run dev
clint project
npm run build_wave
clear
npm run build_wave
eas init
npm install -g eas-cli
eas init
clear
eas logout
eas login
clear
npm run build_wave
eas whoami
npm run build_wave
npm run update
vim
clear
npm run update
npm run build_wave
vim
gf
git pull
vim
clear
gf
clear
gf
git checkout feature/431-date-time-selection
cd retail
npm i
npm run build
clear
npm install -g eas-cli
npm install -g eas-cli --force<\n>
fnm
fnm list
rm -rf /Users/federicoreghini/.local/share/fnm/node-versions/v20.17.0/installation/lib/node_modules/eas-cli<\n>
npm install -g eas-cli --force<\n>
npm install -g eas-cli 
rm -rf /Users/federicoreghini/.local/share/fnm/node-versions/v20.17.0/installation/lib/node_modules/eas-cli<\n>
npm install -g eas-cli 
clear
npm run build
clear
gf
npm run build
clear
clear
clear
clear
vim
gf
npm run build
clear
cd packages
vim
cd retail
clear
npm run dev
docker compose up
gf
vim
git pull;
clear
gitc
git pull
gf
clear
npm run build
clear
npm i
vim packages/servixe
cd packages
vim
cd retail
npm i
cd clienteling
npm run build
cd services
vim
cd retail
cd packages
vim
cd ..
vim
npm i
cd clienteling
npm run build
vim
cd lib
cd retail
vim
npm i
vim
npm i
vim
cd packages/services
npm run build
vim
npm run build
npm publish
cd retail
npm i
cd packages/services
clear
cd retail
vim
npm i
cd packages/services
npm run build
npm publish
clear
cd retail
npm i
vim
npm i
vim
npm oi
npm i
clear
cd cl
npm run build
eas login
npm run build
clear
vim
cd retail
vim
cd cl
npm run build
vim
gtc
gitc
gf
git pull origin develop
cd retail
npm i
cd cl
npm run build
cd retail
vim
clear
vim
cd cl
npm run build
clear
vim
gitc
git merge feature/431-date-time-selection
clear
git push
clear
npm run dev
clint project
npm run dev
clear
nvim
gf
git pull
vim
npm install -g eas-cli 
rm -rf /Users/federicoreghini/.local/share/fnm/node-versions/v20.17.0/installation/lib/node_modules/eas-cli<\n>
npm install -g eas-cli 
npm run build
clear
npm run build
clear
cd myclienteling-app-mobile
cd ..
ls
cd
cd documents
ls
cd beije
ls
cd engineering
ls
cd clienteling
ls
cd myclienteling-app-services
vim
npm publish
vim
npm publish
vi
vim
cd retail
vim
npm publish
vim
npm i
vim
npm publish
vim
vim
npm publish
vim
npm publish
vim
npm publish
vim
npm publish
vim
npm publish
vim
npm publish
vim
npml
npm publish
vim
cd ..
git clone https://github.com/EngineeringRetailPlatform-Champion/myclienteling-app-components.git
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-components.git
https://github.com/EngineeringRetailPlatform-Champion/myclienteling-app-components.git
git clone https://github.com/EngineeringRetailPlatform-Champion/myclienteling-app-components.git
cd myclienteling-app-services
vim
npm publish
vim
npm publish
clear
vim
git push
vim
git push
vim
cd ..
cd test
cd ..
mkdir test/
cd test
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-services.git
git config user.email
cd ..
vim
ls
cd ..
ls
cd clienteling
ls
cd myclienteling-app-services
vim
git config -g user.email "federico.reghini@eng.it"
git config --global user.email "federico.reghini@eng.it"
git config --global user.name "federico-reghini-eng"
git config user.email
clear
git push
vi
vim
git push
vim
npm publish
git push
clear
vim
npm publish
clear
cd ..
git clone git@github.com:EngineeringRetailPlatform-Champion/myclienteling-app-components.git
ls
cd myclienteling-app-components
vim
git init
vim
git fetch
vim
git fetch
git checkout develop
vim
git checkout develop
vim
git checkout develop
clear
vim
clear
eas credentails
eas config
clear
npm run build
vim
cd myclienteling-app-mobile
vim
npm run ios-ts
vim
npm run ios-ts
npm i
gf
git pull
vim
git pull
nvim
npm i
npm run ios-tf
npm run build_wave
clear
vim
git add .
vim
clint project
npm run dev
claer
clear
vim
clear
npm run build
clera
clear
vim
cd myclienteling-app-services
vim
npm publish
npm run dev
npm run teest
npm run test
cd .config
cd nvim
ls
cd .config
vim
pip -v
echo $env.PATH<\n>
python -m pip --version
pip -v
wich python
which python
which python3
cd .config/
vim
cd .config
pip --version
python3 --version
python --version
which python
source ~/.config/nushell/config.nu
pip --version
python --version
python -m site --user-base<\n>
source ~/.config/nushell/config.nu
pip --version
source ~/.config/nushell/config.nu
pip --version
python -m site --user-base<\n>
ls /Users/federicoreghini/Library/Python/3.13/bin<\n>
ls /Users/federicoreghini/Library/Python/3.13
ls /Users/federicoreghini/Library/Python
ls /Users/federicoreghini/Library/Python/3.9
which -a python python3 python2<\n>
python --version
brew list | grep python<\n>
brew uninstall --ignore-dependencies python
brew list | grep python<\n>
brew cleanup<\n>
which python<\n>which python3<\n>
sudo rm -rf /Library/Frameworks/Python.framework<\n>sudo rm -rf /Applications/Python*<\n>
which python<\n>which python3<\n>
sudo rm -rf /usr/bin/python3
which -a python python3 python2<\n>
brew install python<\n>
which python<\n>which python3<\n>
python --version
python3 --version
pip3 --version
pip --version
which pip3
which pip
source ~/.config/nushell/config.nu
pip --version
clear
vim
